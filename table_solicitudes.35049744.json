{
	"orderInfo": [
		{
			"index": 43,
			"field": "estatusentrega",
			"expr": "solicitudes.idsolicitud",
			"asc": false
		}
	],
	"sql": "SELECT\n\tsolicitudes.idtipoventa,\n\tsolicitudes.fecha,\n\tsolicitudes.fechacaptura,\n\tsolicitudes.idcliente,\n\tsolicitudes.idproducto,\n\tsolicitudes.idplan,\n\tsolicitudes.usuario,\n\tsolicitudes.idtienda,\n\tsolicitudes.fechamodif,\n\tsolicitudes.orden,\n\tsolicitudes.solicitudimg,\n\tsolicitudes.estatus,\n\tsolicitudes.idsolrazon,\n\tsolicitudes.importeatt,\n\tsolicitudes.importesms,\n\tsolicitudes.plazo,\n\tsolicitudes.observaciones,\n\tsolicitudes.equipoincluido,\n\tsolicitudes.rfc,\n\tsolicitudes.idtratamiento,\n\tsolicitudes.riesgo,\n\tsolicitudes.observacionest,\n\tsolicitudes.idcli,\n\tsolicitudes.fecha1avta,\n\tsolicitudes.idplan1avta,\n\tsolicitudes.dn1avta,\n\tsolicitudes.idproceso,\n\tsolicitudes.idorigenventa,\n\tsolicitudes.estatusentrega,\n\tclientes.nombre,\n\tclientes.paterno,\n\tclientes.materno,\n\tentregasvnp.estado,\n\tentregasvnp.ciudad,\n\tentregasvnp.cp,\n\tentregasvnp.calle,\n\tentregasvnp.numeroext,\n\tentregasvnp.numeroint,\n\tentregasvnp.colonia,\n\tproductos.descripcion,\n\tCONCAT('https://www.google.com/maps/search/?api=1&query=', REPLACE(\n    TRIM(CONCAT_WS(' ',\n      IFNULL(entregasvnp.numeroext,''),IFNULL(entregasvnp.calle,''), IFNULL(entregasvnp.numeroint,''),\n      IFNULL(entregasvnp.colonia,''), IFNULL(entregasvnp.cp,''), IFNULL(entregasvnp.ciudad,''), IFNULL(entregasvnp.estado,'')\n    )),\n    ' ', '+'\n  )) AS maps_url,\n\tCONCAT(TRIM(CONCAT_WS(' ',\n      if(IFNULL(entregasvnp.calle,'')='','',concat('C.',entregasvnp.calle)),IFNULL(concat('No.',entregasvnp.numeroext),''), IFNULL(concat('Int.',entregasvnp.numeroint),''),\n      IFNULL((entregasvnp.colonia),''), IFNULL(concat('C.P.',entregasvnp.cp),''), IFNULL(entregasvnp.ciudad,''), IFNULL(entregasvnp.estado,'')\n    ))) AS direccion,\n\tsolicitudes.idsolicitud,\n\tss.equipo,\n\tss.chip\nFROM\n\tsolicitudes\n\tLEFT OUTER JOIN clientes ON clientes.idcliente = solicitudes.idcliente\n\tLEFT OUTER JOIN entregasvnp ON entregasvnp.idsolicitud = solicitudes.idsolicitud\n\tLEFT OUTER JOIN productos ON productos.idproducto = solicitudes.idproducto\n\tLEFT JOIN (select  idsolicitud,\n  MAX(CASE WHEN clasif = 'Equipo' THEN esnimei END) AS equipo,\n  MAX(CASE WHEN clasif = 'Chip'   THEN esnimei END) AS chip from (\nselect ss.idsolicitud,ss.esnimei,\"Equipo\" clasif  from compras c inner join seriessolicitadas ss \non c.noserie = ss.esnimei inner join productos p on c.codigoproducto=p.codigoiusa where p.clasif='Equipo'\nunion all\nselect ss.idsolicitud, esnimei, \"Chip\"   from compras c inner join seriessolicitadas ss\non c.noserie = ss.esnimei inner join productos p on c.codigoproducto=p.codigoiusa where p.clasif='Chip'\n) x group by idsolicitud\n) ss ON solicitudes.idsolicitud=ss.idsolicitud  \nWHERE\nsolicitudes.idtienda =2 and solicitudes.fecha between '20250801' and '20250831'\norder by idsolicitud desc",
	"connId": "conn",
	"originalTable": "solicitudes",
	"name": "solicitudes",
	"shortTableName": "solicitudes",
	"dbType": 0,
	"tableOwnerIdField": "idsolicitud",
	"usersOwnerIdField": "ID",
	"keyFields": [
		"idsolicitud"
	],
	"detailsBadgeColor": "1e90ff",
	"fields": [
		{
			"name": "idsolicitud",
			"sqlExpression": "solicitudes.idsolicitud",
			"index": 43,
			"strField": "idsolicitud",
			"type": 3,
			"autoinc": true,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idsolicitud"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtipoventa",
			"sqlExpression": "solicitudes.idtipoventa",
			"index": 1,
			"strField": "idtipoventa",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idtipoventa"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fecha",
			"sqlExpression": "solicitudes.fecha",
			"index": 2,
			"strField": "fecha",
			"type": 7,
			"separateEditViewFormats": true,
			"viewFormats": [
				{
					"format": "Short Date"
				},
				{
					"format": "Short Date",
					"pageType": "list"
				},
				{
					"format": "Short Date",
					"pageType": "print"
				},
				{
					"format": "Short Date",
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"dateEditType": 11
				},
				{
					"format": "Readonly",
					"pageType": "add",
					"dateEditType": 11
				},
				{
					"format": "Readonly",
					"pageType": "search",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fecha"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fechacaptura",
			"sqlExpression": "solicitudes.fechacaptura",
			"index": 3,
			"strField": "fechacaptura",
			"type": 135,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fechacaptura"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idcliente",
			"sqlExpression": "solicitudes.idcliente",
			"index": 4,
			"strField": "idcliente",
			"type": 3,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list",
					"textShowFirstN": 20
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						},
						{
							"masterField": "estado",
							"lookupField": "estado"
						},
						{
							"masterField": "ciudad",
							"lookupField": "ciudad"
						},
						{
							"masterField": "cp",
							"lookupField": "idcp"
						}
					]
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupOrderBy": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						},
						{
							"masterField": "estado",
							"lookupField": "estado"
						},
						{
							"masterField": "ciudad",
							"lookupField": "ciudad"
						},
						{
							"masterField": "cp",
							"lookupField": "idcp"
						}
					]
				},
				{
					"format": "Lookup wizard",
					"pageType": "search",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						},
						{
							"masterField": "estado",
							"lookupField": "estado"
						},
						{
							"masterField": "ciudad",
							"lookupField": "ciudad"
						},
						{
							"masterField": "cp",
							"lookupField": "idcp"
						}
					]
				}
			],
			"label": {
				"English": "Idcliente",
				"Spanish": "Cliente"
			},
			"placeholder": {
				"Spanish": "Seleccione al cliente"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idproducto",
			"sqlExpression": "solicitudes.idproducto",
			"index": 5,
			"strField": "idproducto",
			"type": 3,
			"separateEditViewFormats": true,
			"viewFormats": [
				{
					"textShowFirstN": 20
				},
				{
					"pageType": "list",
					"textShowFirstN": 20
				},
				{
					"pageType": "print",
					"textShowFirstN": 20
				},
				{
					"pageType": "export",
					"textShowFirstN": 20
				}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				},
				{
					"format": "Lookup wizard",
					"pageType": "search",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				}
			],
			"filterFormat": {
				"format": "Values list"
			},
			"label": {
				"English": "Idproducto",
				"Spanish": "Producto"
			},
			"placeholder": {
				"Spanish": "Seleccione el equipo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idplan",
			"sqlExpression": "solicitudes.idplan",
			"index": 6,
			"strField": "idplan",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupType": 2,
					"lookupTable": "planes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idplan",
					"lookupDisplayField": "plan",
					"lookupWhere": "uso = 'Vigente' and tipo='Masivo'"
				}
			],
			"label": {
				"English": "Idplan",
				"Spanish": "Plan"
			},
			"placeholder": {
				"Spanish": "Seleccione el plan"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "usuario",
			"sqlExpression": "solicitudes.usuario",
			"index": 7,
			"strField": "usuario",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Usuario"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtienda",
			"sqlExpression": "solicitudes.idtienda",
			"index": 8,
			"strField": "idtienda",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idtienda"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fechamodif",
			"sqlExpression": "solicitudes.fechamodif",
			"index": 9,
			"strField": "fechamodif",
			"type": 135,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fechamodif"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "orden",
			"sqlExpression": "solicitudes.orden",
			"index": 10,
			"strField": "orden",
			"type": 200,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list"
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly"
				},
				{
					"pageType": "add"
				},
				{
					"format": "Readonly",
					"pageType": "search"
				}
			],
			"label": {
				"English": "Orden"
			},
			"placeholder": {
				"Spanish": "Ingrese la orden"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "solicitudimg",
			"sqlExpression": "solicitudes.solicitudimg",
			"index": 11,
			"strField": "solicitudimg",
			"type": 201,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Text area"
				}
			],
			"label": {
				"English": "Solicitudimg"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "estatus",
			"sqlExpression": "solicitudes.estatus",
			"index": 12,
			"strField": "estatus",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupTable": "decisionessolicitud_lookup",
					"lookupTableConnection": "conn",
					"lookupLinkField": "decisionsolicitud",
					"lookupDisplayField": "decisionsolicitud",
					"lookupOrderBy": "decisionsolicitud"
				}
			],
			"label": {
				"English": "Estatus"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idsolrazon",
			"sqlExpression": "solicitudes.idsolrazon",
			"index": 13,
			"strField": "idsolrazon",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idsolrazon"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "importeatt",
			"sqlExpression": "solicitudes.importeatt",
			"index": 14,
			"strField": "importeatt",
			"type": 5,
			"viewFormats": [
				{
					"format": "Number"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Importeatt"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "importesms",
			"sqlExpression": "solicitudes.importesms",
			"index": 15,
			"strField": "importesms",
			"type": 5,
			"viewFormats": [
				{
					"format": "Number"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Importesms"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "plazo",
			"sqlExpression": "solicitudes.plazo",
			"index": 16,
			"strField": "plazo",
			"type": 2,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list"
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"required": true,
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"required": true,
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				},
				{
					"format": "Readonly",
					"pageType": "search",
					"required": true,
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				}
			],
			"label": {
				"English": "Plazo"
			},
			"placeholder": {
				"Spanish": "Ingrese el plazo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "observaciones",
			"sqlExpression": "solicitudes.observaciones",
			"index": 17,
			"strField": "observaciones",
			"type": 200,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list",
					"textShowFirstN": 30
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{},
				{
					"pageType": "add"
				},
				{
					"pageType": "search"
				}
			],
			"label": {
				"English": "Observaciones",
				"Spanish": "Observaciones"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "equipoincluido",
			"sqlExpression": "solicitudes.equipoincluido",
			"index": 18,
			"strField": "equipoincluido",
			"type": 2,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Equipoincluido"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "rfc",
			"sqlExpression": "solicitudes.rfc",
			"index": 19,
			"strField": "rfc",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"English": "Rfc"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtratamiento",
			"sqlExpression": "solicitudes.idtratamiento",
			"index": 20,
			"strField": "idtratamiento",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idtratamiento"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "riesgo",
			"sqlExpression": "solicitudes.riesgo",
			"index": 21,
			"strField": "riesgo",
			"type": 129,
			"viewFormats": [
				{
					"linkDisplay": 2,
					"linkDisplayField": "direccion"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Riesgo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "observacionest",
			"sqlExpression": "solicitudes.observacionest",
			"index": 22,
			"strField": "observacionest",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Observacionest"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idcli",
			"sqlExpression": "solicitudes.idcli",
			"index": 23,
			"strField": "idcli",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idcli",
				"Spanish": "Cliente ID"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fecha1avta",
			"sqlExpression": "solicitudes.fecha1avta",
			"index": 24,
			"strField": "fecha1avta",
			"type": 7,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fecha1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idplan1avta",
			"sqlExpression": "solicitudes.idplan1avta",
			"index": 25,
			"strField": "idplan1avta",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idplan1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "dn1avta",
			"sqlExpression": "solicitudes.dn1avta",
			"index": 26,
			"strField": "dn1avta",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Dn1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idproceso",
			"sqlExpression": "solicitudes.idproceso",
			"index": 27,
			"strField": "idproceso",
			"type": 2,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idproceso"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idorigenventa",
			"sqlExpression": "solicitudes.idorigenventa",
			"index": 28,
			"strField": "idorigenventa",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idorigenventa"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "nombre",
			"sqlExpression": "clientes.nombre",
			"index": 30,
			"strField": "nombre",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Nombre(s)"
			},
			"placeholder": {
				"Spanish": "Nombre(s) del cliente"
			},
			"tableName": "clientes"
		},
		{
			"name": "paterno",
			"sqlExpression": "clientes.paterno",
			"index": 31,
			"strField": "paterno",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Paterno"
			},
			"placeholder": {
				"Spanish": "Apellido paterno"
			},
			"tableName": "clientes"
		},
		{
			"name": "materno",
			"sqlExpression": "clientes.materno",
			"index": 32,
			"strField": "materno",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Materno"
			},
			"placeholder": {
				"Spanish": "Apellido materno"
			},
			"tableName": "clientes"
		},
		{
			"name": "estado",
			"sqlExpression": "entregasvnp.estado",
			"index": 33,
			"strField": "estado",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Estado"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "ciudad",
			"sqlExpression": "entregasvnp.ciudad",
			"index": 34,
			"strField": "ciudad",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Ciudad"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "cp",
			"sqlExpression": "entregasvnp.cp",
			"index": 35,
			"strField": "cp",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "CP"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "calle",
			"sqlExpression": "entregasvnp.calle",
			"index": 36,
			"strField": "calle",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Calle"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "numeroext",
			"sqlExpression": "entregasvnp.numeroext",
			"index": 37,
			"strField": "numeroext",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "# Ext"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "numeroint",
			"sqlExpression": "entregasvnp.numeroint",
			"index": 38,
			"strField": "numeroint",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "# Int"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "colonia",
			"sqlExpression": "entregasvnp.colonia",
			"index": 39,
			"strField": "colonia",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Colonia"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "descripcion",
			"sqlExpression": "productos.descripcion",
			"index": 40,
			"strField": "descripcion",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Descripcion"
			},
			"tableName": "productos"
		},
		{
			"name": "maps_url",
			"sqlExpression": "CONCAT('https://www.google.com/maps/search/?api=1&query=', REPLACE(\n    TRIM(CONCAT_WS(' ',\n      IFNULL(entregasvnp.numeroext,''),IFNULL(entregasvnp.calle,''), IFNULL(entregasvnp.numeroint,''),\n      IFNULL(entregasvnp.colonia,''), IFNULL(entregasvnp.cp,''), IFNULL(entregasvnp.ciudad,''), IFNULL(entregasvnp.estado,'')\n    )),\n    ' ', '+'\n  ))",
			"index": 41,
			"strField": "maps_url",
			"type": 200,
			"viewFormats": [
				{
					"format": "Hyperlink",
					"linkNewWindow": true,
					"linkDisplay": 2,
					"linkDisplayField": "direccion",
					"linkDisplayText": {
						"text": "Dirección de entrega...",
						"type": 0
					}
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Maps Url"
			},
			"tableName": ""
		},
		{
			"name": "direccion",
			"sqlExpression": "CONCAT(TRIM(CONCAT_WS(' ',\n      if(IFNULL(entregasvnp.calle,'')='','',concat('C.',entregasvnp.calle)),IFNULL(concat('No.',entregasvnp.numeroext),''), IFNULL(concat('Int.',entregasvnp.numeroint),''),\n      IFNULL((entregasvnp.colonia),''), IFNULL(concat('C.P.',entregasvnp.cp),''), IFNULL(entregasvnp.ciudad,''), IFNULL(entregasvnp.estado,'')\n    )))",
			"index": 42,
			"strField": "direccion",
			"type": 200,
			"viewFormats": [
				{
					"format": "Custom",
					"customExpression": "\r\n"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Direccion"
			},
			"tableName": ""
		},
		{
			"name": "estatusentrega",
			"sqlExpression": "solicitudes.estatusentrega",
			"index": 29,
			"strField": "estatusentrega",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupTable": "estatusentregas",
					"lookupTableConnection": "conn",
					"lookupLinkField": "id",
					"lookupDisplayField": "estatusentrega"
				}
			],
			"label": {
				"Spanish": "Estatus entrega"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "equipo",
			"sqlExpression": "ss.equipo",
			"index": 44,
			"strField": "equipo",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Equipo"
			},
			"tableName": ""
		},
		{
			"name": "chip",
			"sqlExpression": "ss.chip",
			"index": 45,
			"strField": "chip",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Simcard"
			},
			"tableName": ""
		}
	],
	"eventHandlers": [
		{
			"eventId": "EVENT_AFTERADD",
			"pageType": "add",
			"code": "/*\n// Events → Add → After record added\nglobal $conn;\n\n//********************************************************************************\n//Se inicia la trasancción\n\nDB::Exec(\"SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED\", $conn);\n\n// Inicia transacción\nDB::Exec(\"START TRANSACTION\", $conn);\n\n// marca en sesión por si necesitas saber que hay una txn abierta\n$_SESSION['add_txn_started'] = true;\n\n//**********************************************************************************\n\n\n$ok = true;\n$err = \"\";\n\n// PK del registro principal recién insertado\n$pk = (int)$keys[\"idsolicitud\"];  // ajusta al nombre real\n\n\n\n\n// Recupera y limpia el stash\n$extras = $_SESSION['solicitudes_add_extras'][$pageObject->id] ?? [];\nunset($_SESSION['solicitudes_add_extras'][$pageObject->id]);\n\n// Ya tienes $keys[\"idsolicitud\"] del registro insertado en solicitudes\n$idsolicitud = (int)$keys[\"idsolicitud\"];\n\n// EJEMPLO: insertar dirección de entrega en entregasvnp usando los extras\nif (!empty($extras)) {\n    $sql = sprintf(\n        \"INSERT INTO entregasvnp (idsolicitud, estado, ciudad, cp, calle, numeroext, numeroint, colonia)\n         VALUES (%d, %s, %s, %d, %s, %s, %s, %s)\",\n        $idsolicitud,\n        db_prepare_string($extras[\"estado\"]    ?? \"\"),\n        db_prepare_string($extras[\"ciudad\"]    ?? \"\"),\n        db_prepare_string($extras[\"cp\"]        ?? \"\"),\n        db_prepare_string($extras[\"calle\"]     ?? \"\"),\n        db_prepare_string($extras[\"numeroext\"] ?? \"\"),\n        db_prepare_string($extras[\"numeroint\"] ?? \"\"),\n        db_prepare_string($extras[\"colonia\"]   ?? \"\")\n    );\n    $ok = DB::Exec($sql, $conn) !== false;\n    if(!$ok){ $err = db_error($conn); }\n\n  //  db_exec($sql, $conn);\n}\n\nif($ok){\n    $esnimei = $_SESSION[\"esnimei\"] ?? null;\n    if (!empty($esnimei)) {\n           $sql = sprintf(\n            \"INSERT INTO seriessolicitadas (idsolicitud, esnimei)\n             VALUES (%d, %s)\",\n            $idsolicitud,\n            db_prepare_string($esnimei    ?? \"\")\n        );\n        db_exec($sql, $conn);\n    \n    }\n    \n    $simcard = $_SESSION[\"simcard\"] ?? null;\n    if (!empty($esnimei)) {\n           $sql = sprintf(\n            \"INSERT INTO seriessolicitadas (idsolicitud, esnimei)\n             VALUES (%d, %s)\",\n            $idsolicitud,\n            db_prepare_string($simcard    ?? \"\")\n        );\n        db_exec($sql, $conn);\n    \n    }\n}\n// Si quieres log/debug:\n// file_put_contents(\"extras_log.txt\", date('c').\" PID:\".$pageObject->id.\" \".json_encode($extras,JSON_UNESCAPED_UNICODE).PHP_EOL, FILE_APPEND);\n\nif($ok){\n  DB::Exec(\"COMMIT\", $conn);\n  DB::Exec(\"SET autocommit=1\", $conn); // higiene (opcional)\n} else {\n  DB::Exec(\"ROLLBACK\", $conn);\n  DB::Exec(\"SET autocommit=1\", $conn);\n\n  // informa al usuario y evita que parezca “éxito”\n  // para Add normal:\n  $_SESSION[\"last_error\"] = \"No se pudo completar la operación: \".$err;\n  header(\"Location: \".$pageObject->shortTableName.\"_add.php?message=rollback\"); // ajusta ruta\n  exit;\n}\n*/"
		},
		{
			"eventId": "EVENT_BEFOREADD",
			"pageType": "add",
			"code": "// Place event code here.\n// Use \"Add Action\" button to add code snippets.\n// Events → Add → Before record added\n// Copia campos del JOIN a un arreglo y quítalos de $values\n\nDB::Exec(\"START TRANSACTION\", $conn);\n\n\n$values[\"fecha\"]=date('Y-m-d');\n$values[\"idtienda\"]=2;  //Tienda no presencial\n$values[\"idtipoventa\"]=5; //Renovación Tradicional (Equipo y Chip)\n$values[\"estatus\"]=\"ACTUALIZADA\";\n$values[\"equipoincluido\"]=1;\n$values[\"usuario\"]=$_SESSION[\"UserID\"];\n\n\n$camposExtra = [\"nombre\",\"paterno\",\"materno\",\"estado\",\"ciudad\",\"cp\",\"calle\",\"numeroext\",\"numeroint\",\"colonia\"];\n\n\n// Helpers para armar valores seguros\nfunction q($v){               // cadenas/fechas: 'valor' o NULL\n  return (isset($v) && $v !== '' ? db_prepare_string($v) : \"NULL\");\n}\nfunction qi($v){              // enteros: número o NULL\n  return (isset($v) && $v !== '' ? (int)$v : \"NULL\");\n}\nfunction qb($v){              // booleano/bit: 0/1\n  return (!empty($v) ? 1 : 0);\n}\n\n// Construcción del INSERT\n$sqlMain = \"INSERT INTO solicitudes\n  (fecha, idtienda, idtipoventa, estatus, equipoincluido, usuario,\n   idcliente, idproducto, idplan, orden, plazo, rfc, idcli, estatusentrega)\nVALUES (\".\n    q($values['fecha'])           .\", \".\n    qi($values['idtienda'])       .\", \".\n    qi($values['idtipoventa'])    .\", \".\n    q($values['estatus'])         .\", \".\n    qb($values['equipoincluido']) .\", \".\n    q($values['usuario'])         .\", \".\n    qi($values['idcliente'])      .\", \".\n    qi($values['idproducto'])     .\", \".\n    qi($values['idplan'])         .\", \".\n    q($values['orden'])           .\", \".\n    qi($values['plazo'])          .\", \".\n    q($values['rfc'])             .\", \".\n    qi($values['idcli'])           .\", \".\n    qi($values['estatusentrega'])  .\n\")\";\n\nif (!DB::Exec($sqlMain, $conn)) {\n    DB::Exec(\"ROLLBACK\", $conn);\n    $message = \"No se pudo crear la solicitud: \".db_error($conn);\n    return false;               // el form queda con los valores\n}\n$idsolicitud = db_insertid($conn);\n\n\n\n\n\n$extras = [];\nforeach ($camposExtra as $f) {\n    if (array_key_exists($f, $values)) {\n        $extras[$f] = $values[$f];\n        unset($values[$f]);             // <- evita \"Unknown column ...\" en el INSERT de solicitudes\n    } else {\n        // Si alguno lo pones como \"Custom field\" (no ligado a DB), recupéralo del POST:\n        $pv = postvalue($f);\n        if ($pv !== null) $extras[$f] = $pv;\n    }\n}\n\n// Guarda en sesión, indexado por el id de la página para evitar choques con otras pestañas\n$_SESSION['solicitudes_add_extras'] = $_SESSION['solicitudes_add_extras'] ?? [];\n$_SESSION['solicitudes_add_extras'][$pageObject->id] = $extras;\n\n// Continúa con el insert normal en solicitudes\n\n$strSQLExists=\"SELECT\ncompras.noserie\nFROM compras\nLEFT OUTER JOIN ventas v ON compras.noserie = v.esnimei\nLEFT OUTER JOIN movimientos m ON compras.noserie = m.esnimei\nLEFT OUTER JOIN seriessolicitadas ss on compras.noserie=ss.esnimei     \nLEFT OUTER JOIN (SELECT t.esnimei,t.tiendadestino,t.`fecharecepcion` FROM traspasosdet t INNER JOIN (SELECT MAX(idtraspasodet) idtraspaso FROM traspasosdet GROUP BY esnimei) t1 ON t.idtraspasodet=t1.idtraspaso) t ON compras.noserie=t.esnimei\nINNER JOIN productos ON compras.codigoproducto = productos.codigoIUSA\nWHERE   v.esnimei is null and m.esnimei is null and ss.esnimei is null and (t. esnimei is null or t.fecharecepcion is not null and t.fecharecepcion<>'0000-00-00')\n  and compras.tienda=2 and compras.clasif = 2 and productos.Clasif='Equipo' AND productos.idproducto=\". $values['idproducto']. \" LIMIT 1 \";\n$rsExists = db_query($strSQLExists,$conn);\n$data=db_fetch_array($rsExists);\n\nif (!$data)\n{\n\t\t$message=\"No existe saldo en el inventario para el producto seleccionado\";\n\treturn false;\n\n} else {\n    $_SESSION[\"esnimei\"] = $data['noserie'];\n}\n\n\n$strSQLExists=\"SELECT\ncompras.noserie\nFROM compras\nLEFT OUTER JOIN ventas v ON compras.noserie = v.esnimei\nLEFT OUTER JOIN movimientos m ON compras.noserie = m.esnimei\nLEFT OUTER JOIN seriessolicitadas ss on compras.noserie=ss.esnimei     \nLEFT OUTER JOIN (SELECT t.esnimei,t.tiendadestino,t.`fecharecepcion` FROM traspasosdet t INNER JOIN (SELECT MAX(idtraspasodet) idtraspaso FROM traspasosdet GROUP BY esnimei) t1 ON t.idtraspasodet=t1.idtraspaso) t ON compras.noserie=t.esnimei\nINNER JOIN productos ON compras.codigoproducto = productos.codigoIUSA\nWHERE   v.esnimei is null and m.esnimei is null  and ss.esnimei is null and (t. esnimei is null or t.fecharecepcion is not null and t.fecharecepcion<>'0000-00-00')\n  and compras.tienda=2 and compras.clasif = 2 and productos.Clasif='Chip' LIMIT 1 \";\n$rsExists = db_query($strSQLExists,$conn);\n$data=db_fetch_array($rsExists);\n\nif (!$data)\n{\n\t\t$message=\"No existe saldo en el inventario de simcards\";\n\treturn false;\n\n} else {\n    $_SESSION[\"simcard\"] = $data['noserie'];\n}\n\n\n$extras = $_SESSION['solicitudes_add_extras'][$pageObject->id] ?? [];\nunset($_SESSION['solicitudes_add_extras'][$pageObject->id]);\n\n// Ya tienes $keys[\"idsolicitud\"] del registro insertado en solicitudes\n//$idsolicitud = (int)$keys[\"idsolicitud\"];\n\n// EJEMPLO: insertar dirección de entrega en entregasvnp usando los extras\nif (!empty($extras)) {\n    $sql = sprintf(\n        \"INSERT INTO entregasvnp (idsolicitud, estado, ciudad, cp, calle, numeroext, numeroint, colonia)\n         VALUES (%d, %s, %s, %d, %s, %s, %s, %s)\",\n        $idsolicitud,\n        db_prepare_string($extras[\"estado\"]    ?? \"\"),\n        db_prepare_string($extras[\"ciudad\"]    ?? \"\"),\n        db_prepare_string($extras[\"cp\"]        ?? \"\"),\n        db_prepare_string($extras[\"calle\"]     ?? \"\"),\n        db_prepare_string($extras[\"numeroext\"] ?? \"\"),\n        db_prepare_string($extras[\"numeroint\"] ?? \"\"),\n        db_prepare_string($extras[\"colonia\"]   ?? \"\")\n    );\n    if (!DB::Exec($sql, $conn)) {\n        DB::Exec(\"ROLLBACK\", $conn);\n        $message = \"No se pudo guardar la entrega: \".db_error($conn);\n        return false;               // el form NO pierde lo tecleado\n    }\n  //  db_exec($sql, $conn);\n}\n\n    $esnimei = $_SESSION[\"esnimei\"] ?? null;\n    if (!empty($esnimei)) {\n           $sql = sprintf(\n            \"INSERT INTO seriessolicitadas (idsolicitud, esnimei)\n             VALUES (%d, %s)\",\n            $idsolicitud,\n            db_prepare_string($esnimei    ?? \"\")\n        );\n    if (!DB::Exec($sql, $conn)) {\n        DB::Exec(\"ROLLBACK\", $conn);\n        $message = \"No se pudo guardar el equipo: \".db_error($conn);\n        return false;               // el form NO pierde lo tecleado\n    }\n    \n    }\n    \n    $simcard = $_SESSION[\"simcard\"] ?? null;\n    if (!empty($esnimei)) {\n           $sql = sprintf(\n            \"INSERT INTO seriessolicitadas (idsolicitud, esnimei)\n             VALUES (%d, %s)\",\n            $idsolicitud,\n            db_prepare_string($simcard    ?? \"\")\n        );\n    if (!DB::Exec($sql, $conn)) {\n        DB::Exec(\"ROLLBACK\", $conn);\n        $message = \"No se pudo guardar el sincard: \".db_error($conn);\n        return false;               // el form NO pierde lo tecleado\n    }\n    \n    }\n\nDB::Exec(\"COMMIT\", $conn);\n\n// “flash message” en sesión para mostrarlo en verde tras el redirect\n$_SESSION['flash_ok'] = \"Solicitud #{$idsolicitud} guardada correctamente.\";\n\n// Redirige a la página Add (form limpio)\nheader(\"Location: \".$pageObject->shortTableName.\"_add.php?new=1\");\nexit;\n\n\n\n\nreturn false;\n\n\n"
		},
		{
			"eventId": "EVENT_JS_ONLOAD",
			"pageType": "list",
			"code": "/*var ctrlFecha = Runner.getControl(pageid, \"fecha\");\r\nctrlFecha.makeReadOnly;\r\n\r\n// ==================================================\r\n// EVENTO ONLOAD PARA LISTA EN PHPRUNNER 11\r\n// ==================================================\r\n\r\nfunction onLoad() {\r\n    // Esperar a que la lista se cargue completamente\r\n    setTimeout(function() {\r\n        aplicarSoloLecturaControles();\r\n        configurarObservadorEdicion();\r\n    }, 1000);\r\n}\r\n\r\n// ==================================================\r\n// FUNCIÓN PRINCIPAL PARA APLICAR SOLO LECTURA\r\n// ==================================================\r\n\r\nfunction aplicarSoloLecturaControles() {\r\n    // Lista de campos que deben ser solo lectura en edición\r\n    var camposSoloLectura = [\r\n        'fecha',       // campo fecha       \r\n        'idcliente',  // Campo idcliente\r\n        'descripcion', // Campo descripcion\r\n        'plazo',           // Campo estado\r\n        'orden'\r\n        // Agrega aquí tus campos específicos\r\n    ];\r\n    \r\n    // Aplicar a todos los campos de la lista\r\n    camposSoloLectura.forEach(function(campo) {\r\n        hacerCampoSoloLectura(campo);\r\n    });\r\n    \r\n    // También aplicar a elementos específicos por clase o ID\r\n    var elementosEspecificos = [\r\n        '.readonly-field',\r\n        '[data-readonly=\"true\"]',\r\n        '#campo_protegido'\r\n    ];\r\n    \r\n    elementosEspecificos.forEach(function(selector) {\r\n        var elementos = document.querySelectorAll(selector);\r\n        elementos.forEach(function(elemento) {\r\n            aplicarEstilosSoloLectura(elemento);\r\n        });\r\n    });\r\n}\r\n\r\n// ==================================================\r\n// FUNCIÓN PARA HACER UN CAMPO ESPECÍFICO SOLO LECTURA\r\n// ==================================================\r\n\r\nfunction hacerCampoSoloLectura(nombreCampo) {\r\n    // Buscar todos los elementos relacionados con el campo\r\n    var selectores = [\r\n        'input[name*=\"' + nombreCampo + '\"]',\r\n        'select[name*=\"' + nombreCampo + '\"]',\r\n        'textarea[name*=\"' + nombreCampo + '\"]',\r\n        '[data-field=\"' + nombreCampo + '\"] input',\r\n        '[data-field=\"' + nombreCampo + '\"] select',\r\n        '[data-field=\"' + nombreCampo + '\"] textarea',\r\n        '.field_' + nombreCampo + ' input',\r\n        '.field_' + nombreCampo + ' select',\r\n        '.field_' + nombreCampo + ' textarea'\r\n    ];\r\n    \r\n    selectores.forEach(function(selector) {\r\n        var elementos = document.querySelectorAll(selector);\r\n        \r\n        elementos.forEach(function(elemento) {\r\n            if (elemento && !elemento.closest('.view-mode')) {\r\n                elemento.setAttribute('readonly', 'true');\r\n                elemento.setAttribute('disabled', 'true');\r\n                aplicarEstilosSoloLectura(elemento);\r\n                \r\n                // Prevenir edición mediante eventos\r\n                elemento.addEventListener('mousedown', prevenirEdicion);\r\n                elemento.addEventListener('keydown', prevenirEdicion);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// ==================================================\r\n// ESTILOS Y COMPORTAMIENTO PARA SOLO LECTURA\r\n// ==================================================\r\n\r\nfunction aplicarEstilosSoloLectura(elemento) {\r\n    elemento.style.backgroundColor = '#f8f9fa';\r\n    elemento.style.borderColor = '#dee2e6';\r\n    elemento.style.color = '#6c757d';\r\n    elemento.style.cursor = 'not-allowed';\r\n    elemento.classList.add('campo-solo-lectura');\r\n}\r\n\r\nfunction prevenirEdicion(evento) {\r\n    evento.preventDefault();\r\n    evento.stopPropagation();\r\n    return false;\r\n}\r\n\r\n// ==================================================\r\n// OBSERVADOR PARA DETECTAR EDICIONES EN LÍNEA\r\n// ==================================================\r\n\r\nfunction configurarObservadorEdicion() {\r\n    // Observar cambios en el body para detectar modos de edición\r\n    var observer = new MutationObserver(function(mutations) {\r\n        mutations.forEach(function(mutation) {\r\n            if (mutation.addedNodes.length > 0) {\r\n                // Verificar si se activó el modo edición\r\n                var elementosEdicion = document.querySelectorAll('.edit-mode, .editing, [data-editing=\"true\"]');\r\n                if (elementosEdicion.length > 0) {\r\n                    setTimeout(aplicarSoloLecturaControles, 300);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    \r\n    // Configurar el observador\r\n    observer.observe(document.body, {\r\n        childList: true,\r\n        subtree: true,\r\n        attributes: true,\r\n        attributeFilter: ['class', 'data-editing']\r\n    });\r\n    \r\n    // También escuchar eventos de clic en botones de edición\r\n    document.addEventListener('click', function(e) {\r\n        var botonEdicion = e.target.closest('[id*=\"edit\"], .edit-btn, .phpr-edit');\r\n        if (botonEdicion) {\r\n            setTimeout(aplicarSoloLecturaControles, 500);\r\n        }\r\n    });\r\n}\r\n\r\n// ==================================================\r\n// INICIALIZACIÓN AL CARGAR LA PÁGINA\r\n// ==================================================\r\n\r\n// Llamar a onLoad cuando el DOM esté listo\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', onLoad);\r\n} else {\r\n    onLoad();\r\n}\r\n\r\n// Re-aplicar cuando se redimensiona o hay cambios\r\nwindow.addEventListener('resize', function() {\r\n    setTimeout(aplicarSoloLecturaControles, 300);\r\n});\r\n\r\n// ==================================================\r\n// CSS ADICIONAL (opcional, agregar en Custom CSS)\r\n// ==================================================\r\n/*\r\n.campo-solo-lectura {\r\n    background-color: #f8f9fa !important;\r\n    border: 1px solid #dee2e6 !important;\r\n    color: #6c757d !important;\r\n    cursor: not-allowed !important;\r\n}\r\n\r\n.campo-solo-lectura:hover {\r\n    background-color: #e9ecef !important;\r\n}\r\n*/"
		},
		{
			"eventId": "EVENT_JS_ONLOAD",
			"pageType": "edit",
			"code": "\n// === Lock de campos durante Inline Edit/Inline Add, con reintentos y observer ===\n/*(function () {\n  // <-- CAMBIA ESTOS NOMBRES POR LOS TUYOS\n  var READONLY_FIELDS = ['idcliente','fecha','descripcion'];\n\n  // --- utilidades ---\n  function lockOne(field, rowid){\n    var c = Runner.getControl(pageid, field, rowid);\n    if(!c) return;\n    var $inp = $('#'+c.getInputId());\n    if(!$inp.length) return;\n\n    if ($inp.is('select')) {\n      $inp.prop('disabled', true);\n      $inp.closest('.select2-container').css('pointer-events','none').addClass('opacity-75');\n    } else if ($inp.is(':checkbox, :radio')) {\n      $inp.prop('disabled', true);\n    } else {\n      $inp.prop('readonly', true).addClass('bg-light');\n      // evita edición por teclado\n      $inp.off('.ro').on('keydown.ro input.ro', function(e){ e.preventDefault(); });\n    }\n    // desactivar iconos/widget adyacentes (datepicker, etc.)\n    $inp.closest('.rnr-edit-field, .r-edit-field')\n        .find('.rnr-dp-control, .glyphicon-calendar, .fa-calendar')\n        .css('pointer-events','none').addClass('disabled');\n\n    // última barrera\n    $inp.closest('.rnr-edit-field, .r-edit-field').css('pointer-events','none').css('opacity', 0.75);\n  }\n\n  function lockRowFields(rowid){\n    READONLY_FIELDS.forEach(function(fname){ lockOne(fname, rowid); });\n    // marca la fila como “bloqueada”\n    var $row = $('.rnr-row[data-record-id=\"'+rowid+'\"]');\n    if(!$row.length) $row = $('#'+rowid);\n    $row.attr('data-ro-locked','1');\n  }\n\n  // identificar si una fila está en inline edit\n  function isInlineEditingRow($row){\n    // botones de guardar/cancelar inline presentes suelen indicar estado de edición\n    return $row.find('.rnr-inline-save, .rnr-inline-cancel').length > 0;\n  }\n\n  // aplica lock a todas las filas actualmente en inline edit\n  function scanAndLock(){\n    $('.rnr-row').each(function(){\n      var $row = $(this);\n      if (!isInlineEditingRow($row)) return;\n      if ($row.attr('data-ro-locked') === '1') return;\n\n      // tomar recId/rowid\n      var recId = $row.attr('data-record-id') || $row.attr('id');\n      if (recId) {\n        // pequeño delay por si los controles acaban de crearse\n        setTimeout(function(){ lockRowFields(recId); }, 0);\n      }\n    });\n  }\n\n  // --- ganchos de eventos ---\n  // 1) cuando el grid está listo, escanea\n  if (pageObj && typeof pageObj.on === 'function') {\n    pageObj.on('gridReady', function(){ scanAndLock(); });\n    // algunos temas disparan estos cuando se inicia inline edit/add\n    pageObj.on('afterInlineEditRow', function(rowid){ setTimeout(function(){ lockRowFields(rowid); }, 0); });\n    pageObj.on('afterInlineAddRow',  function(rowid){ setTimeout(function(){ lockRowFields(rowid); }, 0); });\n  }\n\n  // 2) delega clicks en botones de inline edit/add para reintentar\n  $(document).on('click', '.rnr-inlineedit, .rnr-inlineadd, .rnr-ie, [data-button=inline_edit], [data-button=inline_add]', function(){\n    setTimeout(scanAndLock, 50);\n  });\n\n  // 3) observa el contenedor del grid: si re-renderiza, volvemos a aplicar\n  var grid = document.querySelector('.rnr-grid, .grid, .bs-grid');\n  if (grid) {\n    var mo = new MutationObserver(function(){ setTimeout(scanAndLock, 0); });\n    mo.observe(grid, {childList:true, subtree:true});\n  }\n\n  // 4) plan B: escaneo periódico corto (por si algún caso extremo se escapa)\n  var tries = 0, timer = setInterval(function(){\n    scanAndLock();\n    if (++tries > 20) clearInterval(timer); // ~6–10 s según tu preferencia\n  }, 300);\n})();\n*/\n\n"
		},
		{
			"eventId": "EVENT_AFTEREDIT",
			"pageType": "edit",
			"code": "\n\n//**********  Check if specific record exists  ************  \nif ((int)$values['estatusentrega']==2) {\n    $rs = DB::Query(\"select * from ventas where idsolicitud=\". $values[idsolicitud]);\n    $data=$rs->fetchAssoc(); \n    if($data) {  \n        // if record exists do something \n    } else {  \n        $data = array(); \n        $data[\"idtipoventa\"] = $values['idtipoventa']; \n        $data[\"fecha\"] = date('Y-m-d'); \n        $data[\"idcliente\"] = $values['idcliente']; \n        $data[\"esnimei\"] = $values['equipo'];   \n        $data[\"simcard\"] = $values['chip'];   \n        $data[\"usuario\"] = $values['usuario'];   \n        $data[\"tienda\"] = $values['idtienda'];   \n        $data[\"idsolicitud\"] = $values['idsolicitud'];   \n        $data[\"orden\"] = $values['orden'];   \n        $data[\"plazo\"] = $values['plazo'];   \n        $data[\"plan\"] = $values['idplan'];   \n        $data[\"equipoincluido\"] = 1;   \n\n\n        \n        DB::Insert(\"ventas\", $data );\n    // if dont exist do something else \n    }\n\n}\n\n\n\n\n"
		}
	],
	"dbTableInfo": {
		"type": 0,
		"foreignKeys": [],
		"fields": [
			{
				"name": "idsolicitud",
				"type": 20,
				"size": 20,
				"scale": 0,
				"typeName": "bigint(20)",
				"nullable": false,
				"autoinc": true,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtipoventa",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": false,
				"autoinc": false,
				"defaultValueSQL": "0",
				"defaultValue": "0"
			},
			{
				"name": "fecha",
				"type": 7,
				"size": 0,
				"scale": 0,
				"typeName": "date",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fechacaptura",
				"type": 135,
				"size": 0,
				"scale": 0,
				"typeName": "datetime",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": "current_timestamp()",
				"defaultValue": "CURRENT_TIMESTAMP"
			},
			{
				"name": "idcliente",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idproducto",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idplan",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "usuario",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtienda",
				"type": 3,
				"size": 3,
				"scale": 0,
				"typeName": "int(3)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fechamodif",
				"type": 135,
				"size": 0,
				"scale": 0,
				"typeName": "datetime",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": "current_timestamp()",
				"defaultValue": "CURRENT_TIMESTAMP"
			},
			{
				"name": "orden",
				"type": 200,
				"size": 11,
				"scale": 0,
				"typeName": "varchar(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "solicitudimg",
				"type": 201,
				"size": 0,
				"scale": 0,
				"typeName": "mediumtext",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "estatus",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idsolrazon",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "importeatt",
				"type": 5,
				"size": 0,
				"scale": 0,
				"typeName": "float",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "importesms",
				"type": 5,
				"size": 0,
				"scale": 0,
				"typeName": "float",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "plazo",
				"type": 2,
				"size": 6,
				"scale": 0,
				"typeName": "smallint(6)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "observaciones",
				"type": 200,
				"size": 200,
				"scale": 0,
				"typeName": "varchar(200)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "equipoincluido",
				"type": 16,
				"size": 1,
				"scale": 0,
				"typeName": "tinyint(1)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "rfc",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtratamiento",
				"type": 3,
				"size": 2,
				"scale": 0,
				"typeName": "int(2)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "riesgo",
				"type": 200,
				"size": 1,
				"scale": 0,
				"typeName": "char(1)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "observacionest",
				"type": 200,
				"size": 200,
				"scale": 0,
				"typeName": "varchar(200)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idcli",
				"type": 200,
				"size": 9,
				"scale": 0,
				"typeName": "varchar(9)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fecha1avta",
				"type": 7,
				"size": 0,
				"scale": 0,
				"typeName": "date",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idplan1avta",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "dn1avta",
				"type": 200,
				"size": 10,
				"scale": 0,
				"typeName": "varchar(10)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idproceso",
				"type": 16,
				"size": 2,
				"scale": 0,
				"typeName": "tinyint(2)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idorigenventa",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "estatusentrega",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			}
		],
		"primaryKeys": [
			"idsolicitud"
		],
		"uniqueFields": [],
		"name": "solicitudes"
	},
	"pages": [
		{
			"id": "add",
			"type": "add",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "add-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add_message"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "add-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add_save",
								"add_reset",
								"add_back_list",
								"add_cancel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "add-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3"
								},
								{
									"cell": "c"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c4",
									"colspan": 2,
									"rowspan": 1
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"section"
							],
							"border": [
								{
									"side": "",
									"width": "0"
								}
							],
							"padding": {
								"right": "10px"
							}
						},
						"c": {
							"model": "c3",
							"items": [
								"section1"
							]
						},
						"c4": {
							"model": "c3",
							"items": [
								"section2"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field3",
								"integrated_edit_field4",
								"integrated_edit_field5",
								"integrated_edit_field1",
								"integrated_edit_field6",
								"integrated_edit_field9"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section1": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field2",
								"integrated_edit_field7",
								"integrated_edit_field8"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section2": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field13",
								"integrated_edit_field14",
								"integrated_edit_field15",
								"integrated_edit_field16"
							]
						},
						"c": {
							"model": "c1",
							"items": [
								"integrated_edit_field11",
								"integrated_edit_field10",
								"integrated_edit_field12"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"add_header": {
					"type": "add_header"
				},
				"add_back_list": {
					"type": "add_back_list"
				},
				"add_cancel": {
					"type": "add_cancel"
				},
				"add_message": {
					"type": "add_message"
				},
				"add_save": {
					"type": "add_save"
				},
				"add_reset": {
					"type": "add_reset"
				},
				"integrated_edit_field3": {
					"field": "idcliente",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idcliente",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field": {
					"field": "idproducto",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idproducto",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field2": {
					"field": "idplan",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idplan",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field1": {
					"field": "nombre",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 5
					},
					"label": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 3
					}
				},
				"integrated_edit_field4": {
					"field": "paterno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "paterno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field5": {
					"field": "materno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "materno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field6": {
					"field": "rfc",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field7": {
					"field": "orden",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "orden",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field8": {
					"field": "plazo",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "plazo",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field9": {
					"field": "idcli",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"section": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos del cliente"
					},
					"location": "section",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#a0dcf5",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"section1": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de la solicitud"
					},
					"location": "section1",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#72d6f9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"section2": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de entrega"
					},
					"location": "section2",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#44bee9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field10": {
					"field": "estado",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field11": {
					"field": "ciudad",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field12": {
					"field": "cp",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field13": {
					"field": "calle",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field14": {
					"field": "numeroext",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field15": {
					"field": "numeroint",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field16": {
					"field": "colonia",
					"type": "integrated_edit_field",
					"orientation": 0
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "export",
			"type": "export",
			"layoutId": "first",
			"disabled": false,
			"default": 0,
			"forms": {
				"supertop": {
					"modelId": "panel-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "export-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"export_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "export-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"export_field"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"footer": {
					"modelId": "export-footer",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						},
						"c2": {
							"model": "c2",
							"items": [
								"export_export",
								"export_cancel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"export_header": {
					"type": "export_header"
				},
				"export_export": {
					"type": "export_export"
				},
				"export_cancel": {
					"type": "export_cancel"
				},
				"export_field": {
					"field": "direccion",
					"type": "export_field"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {},
			"exportFormat": 2,
			"exportDelimiter": ",",
			"exportSelectDelimiter": false,
			"exportSelectFields": false
		},
		{
			"id": "import",
			"type": "import",
			"layoutId": "first",
			"disabled": false,
			"default": 0,
			"forms": {
				"supertop": {
					"modelId": "panel-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "import-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"import_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "import-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"import_header": {
					"type": "import_header"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "edit",
			"type": "edit",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "edit-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_message"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "edit-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_save",
								"edit_back_list",
								"edit_close"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"hamburger"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "edit-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field1",
								"integrated_edit_field2",
								"integrated_edit_field3",
								"integrated_edit_field4",
								"integrated_edit_field5",
								"integrated_edit_field6",
								"integrated_edit_field7",
								"integrated_edit_field8",
								"integrated_edit_field9",
								"integrated_edit_field10",
								"integrated_edit_field11",
								"integrated_edit_field12",
								"integrated_edit_field13",
								"integrated_edit_field14",
								"integrated_edit_field15",
								"integrated_edit_field16",
								"integrated_edit_field17"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"edit_header": {
					"type": "edit_header"
				},
				"hamburger": {
					"type": "hamburger",
					"items": [
						"edit_reset",
						"edit_view"
					]
				},
				"edit_reset": {
					"type": "edit_reset"
				},
				"edit_message": {
					"type": "edit_message"
				},
				"edit_save": {
					"type": "edit_save"
				},
				"edit_back_list": {
					"type": "edit_back_list"
				},
				"edit_close": {
					"type": "edit_close"
				},
				"edit_view": {
					"type": "edit_view"
				},
				"integrated_edit_field": {
					"field": "idcliente",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field1": {
					"field": "idproducto",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field2": {
					"field": "idplan",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field3": {
					"field": "orden",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field4": {
					"field": "plazo",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field5": {
					"field": "rfc",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field6": {
					"field": "idcli",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field7": {
					"field": "nombre",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field8": {
					"field": "paterno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field9": {
					"field": "materno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field10": {
					"field": "estado",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field11": {
					"field": "ciudad",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field12": {
					"field": "cp",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field13": {
					"field": "calle",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field14": {
					"field": "numeroext",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field15": {
					"field": "numeroint",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field16": {
					"field": "colonia",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field17": {
					"field": "estatusentrega",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "view",
			"type": "view",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "view-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1",
									"colspan": 2
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "view-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"view_back_list",
								"view_close"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"hamburger"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "view-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"view_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field1"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"view_header": {
					"type": "view_header"
				},
				"view_back_list": {
					"type": "view_back_list"
				},
				"view_close": {
					"type": "view_close"
				},
				"hamburger": {
					"type": "hamburger",
					"items": [
						"view_edit"
					]
				},
				"view_edit": {
					"type": "view_edit"
				},
				"integrated_edit_field": {
					"field": "direccion",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field1": {
					"field": "estatusentrega",
					"type": "integrated_edit_field",
					"orientation": 0
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "list",
			"type": "list",
			"layoutId": "leftbar",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "list-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add",
								"inline_save_all",
								"inline_cancel_all",
								"delete"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"details_found",
								"page_size",
								"print_panel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "list-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"pagination"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"left": {
					"modelId": "leftbar-menu",
					"grid": [
						{
							"cells": [
								{
									"cell": "c0"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c0": {
							"model": "c0",
							"items": [
								"logo"
							]
						},
						"c1": {
							"model": "c1",
							"items": [
								"menu"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"supertop": {
					"modelId": "leftbar-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"expand_menu_button",
								"collapse_button",
								"breadcrumb"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"simple_search",
								"list_options",
								"loginform_login",
								"username_button"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "list-sidebar-top",
					"grid": [],
					"cells": {},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "horizontal-grid",
					"grid": [
						{
							"section": "head",
							"cells": [
								{
									"cell": "headcell_icons"
								},
								{
									"cell": "headcell_checkbox"
								},
								{
									"cell": "headcell_field2"
								},
								{
									"cell": "headcell_field3"
								},
								{
									"cell": "headcell_field4"
								},
								{
									"cell": "headcell_field12"
								},
								{
									"cell": "headcell_field16"
								},
								{
									"cell": "headcell_field"
								},
								{
									"cell": "headcell_field1"
								},
								{
									"cell": "headcell_field7"
								},
								{
									"cell": "headcell_field8"
								},
								{
									"cell": "headcell_field9"
								}
							]
						},
						{
							"section": "body",
							"cells": [
								{
									"cell": "cell_icons"
								},
								{
									"cell": "cell_checkbox"
								},
								{
									"cell": "cell_field2"
								},
								{
									"cell": "headcell_field5"
								},
								{
									"cell": "cell_field4"
								},
								{
									"cell": "cell_field12"
								},
								{
									"cell": "cell_field16"
								},
								{
									"cell": "cell_field"
								},
								{
									"cell": "cell_field1"
								},
								{
									"cell": "cell_field3"
								},
								{
									"cell": "cell_field5"
								},
								{
									"cell": "cell_field6"
								}
							]
						},
						{
							"section": "foot",
							"cells": [
								{
									"cell": "footcell_icons"
								},
								{
									"cell": "footcell_checkbox"
								},
								{
									"cell": "footcell_field2"
								},
								{
									"cell": "headcell_field6"
								},
								{
									"cell": "footcell_field4"
								},
								{
									"cell": "footcell_field12"
								},
								{
									"cell": "footcell_field16"
								},
								{
									"cell": "footcell_field"
								},
								{
									"cell": "footcell_field1"
								},
								{
									"cell": "footcell_field3"
								},
								{
									"cell": "footcell_field5"
								},
								{
									"cell": "footcell_field6"
								}
							]
						}
					],
					"cells": {
						"headcell_field2": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field31"
							],
							"field": "fecha",
							"columnName": "field"
						},
						"cell_field2": {
							"model": "cell_field",
							"items": [
								"simple_grid_field2"
							],
							"field": "fecha",
							"columnName": "field"
						},
						"footcell_field2": {
							"model": "footcell_field",
							"items": [],
							"field": "fecha",
							"columnName": "field"
						},
						"headcell_field4": {
							"model": "headcell_field",
							"items": [
								"grid_field_label"
							],
							"field": "descripcion",
							"columnName": "field"
						},
						"cell_field4": {
							"model": "cell_field",
							"items": [
								"grid_field"
							],
							"field": "descripcion",
							"columnName": "field"
						},
						"footcell_field4": {
							"model": "footcell_field",
							"items": [],
							"field": "descripcion",
							"columnName": "field"
						},
						"headcell_field12": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field41"
							],
							"field": "estatus",
							"columnName": "field"
						},
						"cell_field12": {
							"model": "cell_field",
							"items": [
								"simple_grid_field12"
							],
							"field": "estatus",
							"columnName": "field"
						},
						"footcell_field12": {
							"model": "footcell_field",
							"items": [],
							"field": "estatus",
							"columnName": "field"
						},
						"headcell_field16": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field45"
							],
							"field": "plazo",
							"columnName": "field"
						},
						"cell_field16": {
							"model": "cell_field",
							"items": [
								"simple_grid_field16"
							],
							"field": "plazo",
							"columnName": "field"
						},
						"footcell_field16": {
							"model": "footcell_field",
							"items": [],
							"field": "plazo",
							"columnName": "field"
						},
						"headcell_checkbox": {
							"model": "headcell_checkbox",
							"items": [
								"grid_checkbox_head"
							],
							"columnName": "checkbox",
							"field": ""
						},
						"cell_checkbox": {
							"model": "cell_checkbox",
							"items": [
								"grid_checkbox"
							],
							"columnName": "checkbox",
							"field": ""
						},
						"footcell_checkbox": {
							"model": "footcell_checkbox",
							"items": [],
							"columnName": "checkbox",
							"field": ""
						},
						"headcell_icons": {
							"model": "headcell_icons",
							"items": [],
							"columnName": "list-icons",
							"field": ""
						},
						"cell_icons": {
							"model": "cell_icons",
							"items": [
								"grid_edit",
								"grid_inline_edit",
								"grid_inline_save",
								"grid_inline_cancel",
								"grid_view"
							],
							"columnName": "list-icons",
							"field": ""
						},
						"footcell_icons": {
							"model": "footcell_icons",
							"items": [],
							"columnName": "list-icons",
							"field": ""
						},
						"headcell_field": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field39"
							],
							"field": "orden",
							"columnName": "field"
						},
						"cell_field": {
							"model": "cell_field",
							"items": [
								"simple_grid_field10"
							],
							"field": "orden",
							"columnName": "field"
						},
						"footcell_field": {
							"model": "footcell_field",
							"items": [],
							"field": "orden",
							"columnName": "field"
						},
						"headcell_field3": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field33"
							],
							"columnName": "field",
							"field": "idcliente"
						},
						"headcell_field5": {
							"model": "cell_field",
							"items": [
								"simple_grid_field4"
							],
							"columnName": "field",
							"field": "idcliente"
						},
						"headcell_field6": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "idcliente"
						},
						"headcell_field1": {
							"model": "headcell_field",
							"items": [
								"grid_field_label1"
							],
							"field": "maps_url",
							"columnName": "field"
						},
						"cell_field1": {
							"model": "cell_field",
							"items": [
								"grid_field1"
							],
							"field": "maps_url",
							"columnName": "field"
						},
						"footcell_field1": {
							"model": "footcell_field",
							"items": [],
							"field": "maps_url",
							"columnName": "field"
						},
						"headcell_field7": {
							"model": "headcell_field",
							"items": [
								"grid_field_label2"
							],
							"field": "estatusentrega",
							"columnName": "field"
						},
						"cell_field3": {
							"model": "cell_field",
							"items": [
								"grid_field2"
							],
							"field": "estatusentrega",
							"columnName": "field"
						},
						"footcell_field3": {
							"model": "footcell_field",
							"items": [],
							"field": "estatusentrega",
							"columnName": "field"
						},
						"headcell_field8": {
							"model": "headcell_field",
							"items": [
								"grid_field_label3"
							],
							"field": "equipo",
							"columnName": "field"
						},
						"cell_field5": {
							"model": "cell_field",
							"items": [
								"grid_field3"
							],
							"field": "equipo",
							"columnName": "field"
						},
						"footcell_field5": {
							"model": "footcell_field",
							"items": [],
							"field": "equipo",
							"columnName": "field"
						},
						"headcell_field9": {
							"model": "headcell_field",
							"items": [
								"grid_field_label4"
							],
							"field": "chip",
							"columnName": "field"
						},
						"cell_field6": {
							"model": "cell_field",
							"items": [
								"grid_field4"
							],
							"field": "chip",
							"columnName": "field"
						},
						"footcell_field6": {
							"model": "footcell_field",
							"items": [],
							"field": "chip",
							"columnName": "field"
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"page_size": {
					"type": "page_size"
				},
				"breadcrumb": {
					"type": "breadcrumb"
				},
				"logo": {
					"type": "logo"
				},
				"menu": {
					"type": "menu"
				},
				"simple_search": {
					"type": "simple_search"
				},
				"pagination": {
					"type": "pagination"
				},
				"details_found": {
					"type": "details_found"
				},
				"list_options": {
					"type": "list_options",
					"items": [
						"edit_selected",
						"export_selected",
						"delete_selected",
						"-8",
						"export",
						"-2",
						"import"
					]
				},
				"expand_menu_button": {
					"type": "expand_menu_button"
				},
				"collapse_button": {
					"type": "collapse_button"
				},
				"add": {
					"type": "add"
				},
				"export": {
					"type": "export"
				},
				"-": {
					"type": "-"
				},
				"export_selected": {
					"type": "export_selected"
				},
				"-1": {
					"type": "-"
				},
				"import": {
					"type": "import"
				},
				"-2": {
					"type": "-"
				},
				"print_panel": {
					"type": "print_panel",
					"items": [
						"print_scope",
						"print_records",
						"print_button"
					]
				},
				"print_scope": {
					"type": "print_scope"
				},
				"print_button": {
					"type": "print_button"
				},
				"print_records": {
					"type": "print_records"
				},
				"delete": {
					"type": "delete"
				},
				"delete_selected": {
					"type": "delete_selected"
				},
				"simple_grid_field2": {
					"field": "fecha",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field31": {
					"type": "grid_field_label",
					"field": "fecha"
				},
				"simple_grid_field4": {
					"field": "idcliente",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field33": {
					"type": "grid_field_label",
					"field": "idcliente"
				},
				"simple_grid_field10": {
					"field": "orden",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field39": {
					"type": "grid_field_label",
					"field": "orden"
				},
				"simple_grid_field12": {
					"field": "estatus",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field41": {
					"type": "grid_field_label",
					"field": "estatus"
				},
				"simple_grid_field16": {
					"field": "plazo",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field45": {
					"type": "grid_field_label",
					"field": "plazo"
				},
				"grid_checkbox": {
					"type": "grid_checkbox"
				},
				"grid_checkbox_head": {
					"type": "grid_checkbox_head"
				},
				"grid_edit": {
					"type": "grid_edit"
				},
				"grid_view": {
					"type": "grid_view"
				},
				"username_button": {
					"type": "username_button",
					"items": [
						"userinfo_link",
						"logout_link",
						"adminarea_link"
					]
				},
				"loginform_login": {
					"type": "loginform_login",
					"popup": false
				},
				"userinfo_link": {
					"type": "userinfo_link"
				},
				"logout_link": {
					"type": "logout_link"
				},
				"adminarea_link": {
					"type": "adminarea_link"
				},
				"grid_field": {
					"field": "descripcion",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"grid_field_label": {
					"type": "grid_field_label",
					"field": "descripcion"
				},
				"-3": {
					"type": "-"
				},
				"edit_selected": {
					"type": "edit_selected"
				},
				"grid_inline_edit": {
					"type": "grid_inline_edit"
				},
				"grid_inline_save": {
					"type": "grid_inline_save"
				},
				"grid_inline_cancel": {
					"type": "grid_inline_cancel"
				},
				"inline_save_all": {
					"type": "inline_save_all"
				},
				"inline_cancel_all": {
					"type": "inline_cancel_all"
				},
				"grid_field1": {
					"field": "maps_url",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label1": {
					"type": "grid_field_label",
					"field": "maps_url"
				},
				"-4": {
					"type": "-"
				},
				"-5": {
					"type": "-"
				},
				"grid_field2": {
					"field": "estatusentrega",
					"type": "grid_field",
					"inlineEdit": true,
					"inlineAdd": true
				},
				"grid_field_label2": {
					"type": "grid_field_label",
					"field": "estatusentrega"
				},
				"-6": {
					"type": "-"
				},
				"-7": {
					"type": "-"
				},
				"grid_field3": {
					"field": "equipo",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label3": {
					"type": "grid_field_label",
					"field": "equipo"
				},
				"grid_field4": {
					"field": "chip",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label4": {
					"type": "grid_field_label",
					"field": "chip"
				},
				"-8": {
					"type": "-"
				}
			},
			"dbProps": {},
			"spreadsheetGrid": false,
			"autoAddNewRecord": false,
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"pageCSS": "/* Put  your custom CSS code here */\n\n.table {\n    font-family: 'Arial', sans-serif !important;\n    font-size: 12px !important;\n    border-collapse: collapse !important;\n}",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "print",
			"type": "print",
			"layoutId": "basic",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "print-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"print_pages"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "print-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "print-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c2": {
							"model": "c2",
							"items": [
								"print_header",
								"print_subheader"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"simple_grid_field"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"print_header": {
					"type": "print_header"
				},
				"print_subheader": {
					"type": "print_subheader"
				},
				"print_pages": {
					"type": "print_pages"
				},
				"simple_grid_field": {
					"field": "direccion",
					"type": "simple_grid_field"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		}
	],
	"geoCoding": {
		"enabled": false,
		"latField": "",
		"lonField": "",
		"addressFields": []
	},
	"caption": {
		"English": "Solicitudes"
	}
}