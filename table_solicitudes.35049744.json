{
	"orderInfo": [
		{
			"index": 43,
			"field": "estatusentrega",
			"expr": "s.idsolicitud",
			"asc": false
		}
	],
	"sql": "SELECT\n\ts.idtipoventa,\n\ts.fecha,\n\ts.fechacaptura,\n\ts.idcliente,\n\ts.idproducto,\n\ts.idplan,\n\ts.usuario,\n\ts.idtienda,\n\ts.fechamodif,\n\ts.orden,\n\ts.solicitudimg,\n\ts.estatus,\n\ts.idsolrazon,\n\ts.importeatt,\n\ts.importesms,\n\ts.plazo,\n\ts.observaciones,\n\ts.equipoincluido,\n\ts.rfc,\n\ts.idtratamiento,\n\ts.riesgo,\n\ts.observacionest,\n\ts.idcli,\n\ts.fecha1avta,\n\ts.idplan1avta,\n\ts.dn1avta,\n\ts.idproceso,\n\ts.idorigenventa,\n\ts.estatusentrega,\n\tcte.nombre,\n\tcte.paterno,\n\tcte.materno,\n\tev.estado,\n\tev.ciudad,\n\tev.cp,\n\tev.calle,\n\tev.numeroext,\n\tev.numeroint,\n\tev.colonia,\n\tp.descripcion,\n\tCONCAT('https://www.google.com/maps/search/?api=1&query=', REPLACE(TRIM(CONCAT_WS(' ',\n             IFNULL(ev.numeroext,''),IFNULL(ev.calle,''),IFNULL(ev.numeroint,''),\n             IFNULL(ev.colonia,''),IFNULL(ev.cp,''),IFNULL(ev.ciudad,''),IFNULL(ev.estado,'')\n           )),' ','+')) AS maps_url,\n\tCONCAT(TRIM(CONCAT_WS(' ',\n      IF(IFNULL(ev.calle,'')='','', CONCAT('C.',ev.calle)),\n      IFNULL(CONCAT('No.',ev.numeroext),''),\n      IFNULL(CONCAT('Int.',ev.numeroint),''),\n      IFNULL(ev.colonia,''), IFNULL(CONCAT('C.P.',ev.cp),''),\n      IFNULL(ev.ciudad,''), IFNULL(ev.estado,'')\n    ))) AS direccion,\n\ts.idsolicitud,\n\tss.equipo noserie,\n\tss.chip,\n\tev.lat,\n\tev.lng\nFROM\n\tsolicitudes AS s\n\tLEFT OUTER JOIN clientes AS cte ON cte.idcliente = s.idcliente\n\tLEFT OUTER JOIN entregasvnp AS ev ON ev.idsolicitud = s.idsolicitud\n\tLEFT OUTER JOIN productos AS p ON p.idproducto = s.idproducto\n\tLEFT OUTER JOIN (SELECT\n\tss.idsolicitud,\n\tMAX(CASE WHEN pr.clasif = 'Equipo' THEN ss.esnimei END) AS equipo,\n\tMAX(CASE WHEN pr.clasif = 'Chip'   THEN ss.esnimei END) AS chip\nFROM\n\tseriessolicitadas AS ss\n\tINNER JOIN compras AS cp ON cp.noserie = ss.esnimei\n\tINNER JOIN productos AS pr ON pr.codigoIUSA = cp.codigoproducto\nGROUP BY\n\tss.idsolicitud\n) AS ss ON ss.idsolicitud = s.idsolicitud\nWHERE\n s.idtienda = 2 order by s.idsolicitud desc\n\n",
	"connId": "conn",
	"originalTable": "solicitudes",
	"name": "solicitudes",
	"shortTableName": "solicitudes",
	"dbType": 0,
	"tableOwnerIdField": "idsolicitud",
	"usersOwnerIdField": "ID",
	"pageSizeRecords": 50,
	"pageSizeSelectorRecords": [
		"20",
		"30",
		"50",
		"100",
		"500",
		"all"
	],
	"keyFields": [
		"idsolicitud"
	],
	"detailsBadgeColor": "1e90ff",
	"detailsTables": [
		3847630651
	],
	"fields": [
		{
			"name": "idsolicitud",
			"sqlExpression": "s.idsolicitud",
			"index": 43,
			"strField": "idsolicitud",
			"type": 3,
			"autoinc": true,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idsolicitud"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtipoventa",
			"sqlExpression": "s.idtipoventa",
			"index": 1,
			"strField": "idtipoventa",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupType": 2,
					"lookupTable": "tiposventa",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idtipoventa",
					"lookupDisplayField": "tipoventa",
					"lookupOrderBy": "tipoventa",
					"lookupWhere": "uso='VIGENTE'"
				}
			],
			"label": {
				"English": "Idtipoventa",
				"Spanish": "Tipo de Venta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fecha",
			"sqlExpression": "s.fecha",
			"index": 2,
			"strField": "fecha",
			"type": 7,
			"separateEditViewFormats": true,
			"viewFormats": [
				{
					"format": "Short Date"
				},
				{
					"format": "Short Date",
					"pageType": "list"
				},
				{
					"format": "Short Date",
					"pageType": "print"
				},
				{
					"format": "Short Date",
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"dateEditType": 11
				},
				{
					"format": "Readonly",
					"pageType": "add",
					"dateEditType": 11
				},
				{
					"format": "Date",
					"pageType": "search",
					"dateEditType": 11,
					"dateLastYearFactor": 1
				}
			],
			"defaultSearchOption": "Between",
			"searchOptions": [
				"Between"
			],
			"label": {
				"English": "Fecha"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fechacaptura",
			"sqlExpression": "s.fechacaptura",
			"index": 3,
			"strField": "fechacaptura",
			"type": 135,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fechacaptura"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idcliente",
			"sqlExpression": "s.idcliente",
			"index": 4,
			"strField": "idcliente",
			"type": 3,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list",
					"textShowFirstN": 20
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						},
						{
							"masterField": "estado",
							"lookupField": "estado"
						},
						{
							"masterField": "ciudad",
							"lookupField": "ciudad"
						},
						{
							"masterField": "cp",
							"lookupField": "idcp"
						}
					]
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupOrderBy": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						}
					]
				},
				{
					"format": "Lookup wizard",
					"pageType": "search",
					"required": true,
					"denyDuplicateMessage": {
						"text": "El cliente %value% ya existe",
						"type": 0
					},
					"lookupType": 2,
					"lookupTable": "clientes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idcliente",
					"lookupDisplayField": "nombre_completo",
					"lookupAllowAdd": true,
					"lookupAllowEdit": true,
					"lookupControlType": 2,
					"lookupListPage": "list",
					"lookupAddPage": "add",
					"lookupEditPage": "edit",
					"lookupAutofillFields": [
						{
							"masterField": "nombre",
							"lookupField": "nombre"
						},
						{
							"masterField": "paterno",
							"lookupField": "paterno"
						},
						{
							"masterField": "materno",
							"lookupField": "materno"
						},
						{
							"masterField": "rfc",
							"lookupField": "rfc"
						},
						{
							"masterField": "cliente_id",
							"lookupField": "idcliente"
						},
						{
							"masterField": "estado",
							"lookupField": "estado"
						},
						{
							"masterField": "ciudad",
							"lookupField": "ciudad"
						},
						{
							"masterField": "cp",
							"lookupField": "idcp"
						}
					]
				}
			],
			"label": {
				"English": "Idcliente",
				"Spanish": "Cliente"
			},
			"placeholder": {
				"Spanish": "Seleccione al cliente"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idproducto",
			"sqlExpression": "s.idproducto",
			"index": 5,
			"strField": "idproducto",
			"type": 3,
			"separateEditViewFormats": true,
			"viewFormats": [
				{
					"textShowFirstN": 20
				},
				{
					"pageType": "list",
					"textShowFirstN": 20
				},
				{
					"pageType": "print",
					"textShowFirstN": 20
				},
				{
					"pageType": "export",
					"textShowFirstN": 20
				}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				},
				{
					"format": "Lookup wizard",
					"pageType": "search",
					"required": true,
					"lookupType": 2,
					"lookupTable": "productos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idproducto",
					"lookupDisplayField": "descripcion",
					"lookupOrderBy": "descripcion",
					"lookupControlType": 2,
					"lookupListPage": "list"
				}
			],
			"filterFormat": {
				"format": "Values list"
			},
			"label": {
				"English": "Idproducto",
				"Spanish": "Producto"
			},
			"placeholder": {
				"Spanish": "Seleccione el equipo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idplan",
			"sqlExpression": "s.idplan",
			"index": 6,
			"strField": "idplan",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupType": 2,
					"lookupTable": "planes",
					"lookupTableConnection": "conn",
					"lookupLinkField": "idplan",
					"lookupDisplayField": "plan",
					"lookupWhere": "uso = 'Vigente' and tipo='Masivo'"
				}
			],
			"label": {
				"English": "Idplan",
				"Spanish": "Plan"
			},
			"placeholder": {
				"Spanish": "Seleccione el plan"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "usuario",
			"sqlExpression": "s.usuario",
			"index": 7,
			"strField": "usuario",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Usuario"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtienda",
			"sqlExpression": "s.idtienda",
			"index": 8,
			"strField": "idtienda",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idtienda"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fechamodif",
			"sqlExpression": "s.fechamodif",
			"index": 9,
			"strField": "fechamodif",
			"type": 135,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fechamodif"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "orden",
			"sqlExpression": "s.orden",
			"index": 10,
			"strField": "orden",
			"type": 200,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list"
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly"
				},
				{
					"pageType": "add"
				},
				{
					"format": "Readonly",
					"pageType": "search"
				}
			],
			"label": {
				"English": "Orden"
			},
			"placeholder": {
				"Spanish": "Ingrese la orden"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "solicitudimg",
			"sqlExpression": "s.solicitudimg",
			"index": 11,
			"strField": "solicitudimg",
			"type": 201,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Text area"
				}
			],
			"label": {
				"English": "Solicitudimg"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "estatus",
			"sqlExpression": "s.estatus",
			"index": 12,
			"strField": "estatus",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupTable": "decisionessolicitud_lookup",
					"lookupTableConnection": "conn",
					"lookupLinkField": "decisionsolicitud",
					"lookupDisplayField": "decisionsolicitud",
					"lookupOrderBy": "decisionsolicitud"
				}
			],
			"label": {
				"English": "Estatus"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idsolrazon",
			"sqlExpression": "s.idsolrazon",
			"index": 13,
			"strField": "idsolrazon",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idsolrazon"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "importeatt",
			"sqlExpression": "s.importeatt",
			"index": 14,
			"strField": "importeatt",
			"type": 5,
			"viewFormats": [
				{
					"format": "Number"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Importeatt"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "importesms",
			"sqlExpression": "s.importesms",
			"index": 15,
			"strField": "importesms",
			"type": 5,
			"viewFormats": [
				{
					"format": "Number"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Importesms"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "plazo",
			"sqlExpression": "s.plazo",
			"index": 16,
			"strField": "plazo",
			"type": 2,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list"
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{
					"format": "Readonly",
					"required": true,
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				},
				{
					"format": "Lookup wizard",
					"pageType": "add",
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				},
				{
					"format": "Readonly",
					"pageType": "search",
					"required": true,
					"lookupTable": "plazos",
					"lookupTableConnection": "conn",
					"lookupLinkField": "plazo",
					"lookupDisplayField": "plazo",
					"lookupOrderBy": "plazo"
				}
			],
			"label": {
				"English": "Plazo"
			},
			"placeholder": {
				"Spanish": "Ingrese el plazo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "observaciones",
			"sqlExpression": "s.observaciones",
			"index": 17,
			"strField": "observaciones",
			"type": 200,
			"separateEditViewFormats": true,
			"viewFormats": [
				{},
				{
					"pageType": "list",
					"textShowFirstN": 30
				},
				{
					"pageType": "print"
				},
				{
					"pageType": "export"
				}
			],
			"editFormats": [
				{},
				{
					"pageType": "add"
				},
				{
					"pageType": "search"
				}
			],
			"label": {
				"English": "Observaciones",
				"Spanish": "Observaciones"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "equipoincluido",
			"sqlExpression": "s.equipoincluido",
			"index": 18,
			"strField": "equipoincluido",
			"type": 2,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Equipoincluido"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "rfc",
			"sqlExpression": "s.rfc",
			"index": 19,
			"strField": "rfc",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"English": "Rfc"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idtratamiento",
			"sqlExpression": "s.idtratamiento",
			"index": 20,
			"strField": "idtratamiento",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idtratamiento"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "riesgo",
			"sqlExpression": "s.riesgo",
			"index": 21,
			"strField": "riesgo",
			"type": 129,
			"viewFormats": [
				{
					"linkDisplay": 2,
					"linkDisplayField": "direccion"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Riesgo"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "observacionest",
			"sqlExpression": "s.observacionest",
			"index": 22,
			"strField": "observacionest",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Observacionest"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idcli",
			"sqlExpression": "s.idcli",
			"index": 23,
			"strField": "idcli",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idcli",
				"Spanish": "Cliente ID"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "fecha1avta",
			"sqlExpression": "s.fecha1avta",
			"index": 24,
			"strField": "fecha1avta",
			"type": 7,
			"viewFormats": [
				{
					"format": "Short Date"
				}
			],
			"editFormats": [
				{
					"format": "Date",
					"dateEditType": 11
				}
			],
			"label": {
				"English": "Fecha1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idplan1avta",
			"sqlExpression": "s.idplan1avta",
			"index": 25,
			"strField": "idplan1avta",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idplan1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "dn1avta",
			"sqlExpression": "s.dn1avta",
			"index": 26,
			"strField": "dn1avta",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Dn1avta"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idproceso",
			"sqlExpression": "s.idproceso",
			"index": 27,
			"strField": "idproceso",
			"type": 2,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idproceso"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "idorigenventa",
			"sqlExpression": "s.idorigenventa",
			"index": 28,
			"strField": "idorigenventa",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"English": "Idorigenventa"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "nombre",
			"sqlExpression": "cte.nombre",
			"index": 30,
			"strField": "nombre",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Nombre(s)"
			},
			"placeholder": {
				"Spanish": "Nombre(s) del cliente"
			},
			"tableName": "clientes"
		},
		{
			"name": "paterno",
			"sqlExpression": "cte.paterno",
			"index": 31,
			"strField": "paterno",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Paterno"
			},
			"placeholder": {
				"Spanish": "Apellido paterno"
			},
			"tableName": "clientes"
		},
		{
			"name": "materno",
			"sqlExpression": "cte.materno",
			"index": 32,
			"strField": "materno",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Materno"
			},
			"placeholder": {
				"Spanish": "Apellido materno"
			},
			"tableName": "clientes"
		},
		{
			"name": "estado",
			"sqlExpression": "ev.estado",
			"index": 33,
			"strField": "estado",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Estado"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "ciudad",
			"sqlExpression": "ev.ciudad",
			"index": 34,
			"strField": "ciudad",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Ciudad"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "cp",
			"sqlExpression": "ev.cp",
			"index": 35,
			"strField": "cp",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "CP"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "calle",
			"sqlExpression": "ev.calle",
			"index": 36,
			"strField": "calle",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Calle"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "numeroext",
			"sqlExpression": "ev.numeroext",
			"index": 37,
			"strField": "numeroext",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "# Ext"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "numeroint",
			"sqlExpression": "ev.numeroint",
			"index": 38,
			"strField": "numeroint",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "# Int"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "colonia",
			"sqlExpression": "ev.colonia",
			"index": 39,
			"strField": "colonia",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Colonia"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "descripcion",
			"sqlExpression": "p.descripcion",
			"index": 40,
			"strField": "descripcion",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Descripcion"
			},
			"tableName": "productos"
		},
		{
			"name": "maps_url",
			"sqlExpression": "CONCAT('https://www.google.com/maps/search/?api=1&query=', REPLACE(TRIM(CONCAT_WS(' ',\n             IFNULL(ev.numeroext,''),IFNULL(ev.calle,''),IFNULL(ev.numeroint,''),\n             IFNULL(ev.colonia,''),IFNULL(ev.cp,''),IFNULL(ev.ciudad,''),IFNULL(ev.estado,'')\n           )),' ','+'))",
			"index": 41,
			"strField": "maps_url",
			"type": 200,
			"viewFormats": [
				{
					"format": "Hyperlink",
					"linkNewWindow": true,
					"linkDisplay": 2,
					"linkDisplayField": "direccion",
					"linkDisplayText": {
						"text": "Dirección de entrega...",
						"type": 0
					}
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Maps Url"
			},
			"tableName": ""
		},
		{
			"name": "direccion",
			"sqlExpression": "CONCAT(TRIM(CONCAT_WS(' ',\n      IF(IFNULL(ev.calle,'')='','', CONCAT('C.',ev.calle)),\n      IFNULL(CONCAT('No.',ev.numeroext),''),\n      IFNULL(CONCAT('Int.',ev.numeroint),''),\n      IFNULL(ev.colonia,''), IFNULL(CONCAT('C.P.',ev.cp),''),\n      IFNULL(ev.ciudad,''), IFNULL(ev.estado,'')\n    )))",
			"index": 42,
			"strField": "direccion",
			"type": 200,
			"viewFormats": [
				{
					"format": "Custom",
					"customExpression": "\r\n"
				}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Direccion"
			},
			"tableName": ""
		},
		{
			"name": "estatusentrega",
			"sqlExpression": "s.estatusentrega",
			"index": 29,
			"strField": "estatusentrega",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Lookup wizard",
					"lookupTable": "estatusentregas",
					"lookupTableConnection": "conn",
					"lookupLinkField": "id",
					"lookupDisplayField": "estatusentrega"
				}
			],
			"label": {
				"Spanish": "Estatus entrega"
			},
			"tableName": "solicitudes"
		},
		{
			"name": "chip",
			"sqlExpression": "ss.chip",
			"index": 45,
			"strField": "chip",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"format": "Readonly"
				}
			],
			"label": {
				"Spanish": "Simcard"
			},
			"tableName": ""
		},
		{
			"name": "lat",
			"sqlExpression": "ev.lat",
			"index": 46,
			"strField": "lat",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Latitud"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "lng",
			"sqlExpression": "ev.lng",
			"index": 47,
			"strField": "lng",
			"type": 3,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{}
			],
			"label": {
				"Spanish": "Longitud"
			},
			"tableName": "entregasvnp"
		},
		{
			"name": "noserie",
			"sqlExpression": "ss.equipo",
			"index": 44,
			"strField": "equipo",
			"type": 200,
			"viewFormats": [
				{}
			],
			"editFormats": [
				{
					"required": true
				}
			],
			"label": {
				"Spanish": "IMEI"
			},
			"tableName": ""
		}
	],
	"whereTabs": [
		{}
	],
	"eventHandlers": [
		{
			"eventId": "EVENT_BEFOREADD",
			"pageType": "add",
			"code": "\n$all_values = $values; \n\nDB::Exec(\"START TRANSACTION\", $conn);\n\n$values[\"fecha\"] = date('Y-m-d');\n$values[\"idtienda\"] = 2; // Tienda no presencial\n//$values[\"idtipoventa\"] = 5; // Renovación Tradicional (Equipo y Chip)\n$values[\"estatus\"] = \"ACTUALIZADA\";\n$values[\"equipoincluido\"] = 1;\n$values[\"usuario\"] = $_SESSION[\"UserID\"];\n\n\n$camposExtra = [\"nombre\",\"paterno\",\"materno\",\"estado\",\"ciudad\",\"cp\",\"calle\",\"numeroext\",\"numeroint\",\"colonia\", \"noserie\"]; // Agregamos noserie y simcard para persistencia\n\n// Helpers para armar valores seguros\nfunction q($v){ // cadenas/fechas: 'valor' o NULL\n    return (isset($v) && $v !== '' ? db_prepare_string($v) : \"NULL\");\n}\nfunction qi($v){ // enteros: número o NULL\n    return (isset($v) && $v !== '' ? (int)$v : \"NULL\");\n}\nfunction qb($v){ // booleano/bit: 0/1\n    return (!empty($v) ? 1 : 0);\n}\n\n\n\n/**\n * FUNCIÓN DE MANEJO DE FALLO (Solo hace el rollback y guarda datos)\n */\nfunction handle_fail($values_to_save, $conn, $message_text) {\n    DB::Exec(\"ROLLBACK\", $conn);\n    \n    // Guardar todos los datos del formulario en la sesión para recuperarlos\n    $_SESSION[\"add_data_temp\"] = $values_to_save;\n    $_SESSION[\"idactual\"]=$_SESSION[\"add_data_temp\"]['idproducto'];\n\n    $_SESSION['currentErr']=$message_text;\n    \n    // Devolver el mensaje de error (string)\n    return $message_text;\n}\n\n// ==================================================================================\n// 1. PREPARACIÓN DE VALORES Y EXTRACCIÓN DE CAMPOS EXTRA\n// ==================================================================================\n\n$extras = [];\nforeach ($camposExtra as $f) {\n    if (array_key_exists($f, $all_values)) {\n        $extras[$f] = $all_values[$f];\n        \n        // La clave: quitar los campos de la tabla principal ($values)\n        // PERO conservar el valor en $all_values para guardarlo si falla.\n        if (array_key_exists($f, $values)) {\n            unset($values[$f]); \n        }\n    } else {\n        // Si es un \"Custom field\" o no está en $values (viene directo del POST)\n        $pv = postvalue($f);\n        if ($pv !== null) $extras[$f] = $pv;\n    }\n}\n\n// ==================================================================================\n// 2. VERIFICACIÓN DE EXISTENCIA DE EQUIPO (no serie)\n// ==================================================================================\n\n// Usamos el 'noserie' del formulario (que está en $extras, si se capturó o reservó)\n$noserie_equipo = $extras['noserie'] ?? '';\n\nif (empty($noserie_equipo)) {\n    // Si no hay noserie, podría ser un error de negocio o que se espera que se reserve antes.\n    return handle_fail($all_values, $conn, \"El número de serie del equipo es obligatorio.\", $pageObject);\n}\n\n\n$strSQLExists=\"SELECT\ncompras.noserie\nFROM compras\nLEFT OUTER JOIN ventas v ON compras.noserie = v.esnimei\nLEFT OUTER JOIN movimientos m ON compras.noserie = m.esnimei\nLEFT OUTER JOIN seriessolicitadas ss on compras.noserie=ss.esnimei\nLEFT OUTER JOIN (SELECT t.esnimei,t.tiendadestino,t.`fecharecepcion` FROM traspasosdet t INNER JOIN (SELECT MAX(idtraspasodet) idtraspaso FROM traspasosdet GROUP BY esnimei) t1 ON t.idtraspasodet=t1.idtraspaso) t ON compras.noserie=t.esnimei\nINNER JOIN productos ON compras.codigoproducto = productos.codigoIUSA\nWHERE v.esnimei is null and m.esnimei is null and ss.esnimei is null and (t. esnimei is null or t.fecharecepcion is not null and t.fecharecepcion<>'0000-00-00')\n  and compras.tienda=2 and compras.clasif = 2 and productos.Clasif='Equipo' AND compras.noserie='\". $noserie_equipo. \"' LIMIT 1 \";\n \n$rsExists = db_query($strSQLExists,$conn);\n$data = db_fetch_array($rsExists);\n\nif (!$data) {\n    // FALLO: No existe saldo para el número de serie.\n    return handle_fail($all_values, $conn, \"No existe saldo en el inventario para el número de serie '{$noserie_equipo}'.\", $pageObject);\n} else {\n    $esnimei = $data['noserie'];\n}\n\n\n\n// ==================================================================================\n// 3. INSERCIÓN DE SOLICITUDES\n// ==================================================================================\n\n$sqlMain = \"INSERT INTO solicitudes\n  (fecha, idtienda, idtipoventa, estatus, equipoincluido, usuario,\n   idcliente, idproducto, idplan, orden, plazo, rfc, idcli, estatusentrega)\nVALUES (\".\n    q($values['fecha']) .\", \".\n    qi($values['idtienda']) .\", \".\n    qi($values['idtipoventa']) .\", \".\n    q($values['estatus']) .\", \".\n    qb($values['equipoincluido']) .\", \".\n    q($values['usuario']) .\", \".\n    qi($values['idcliente']) .\", \".\n    qi($values['idproducto']) .\", \".\n    qi($values['idplan']) .\", \".\n    q($values['orden']) .\", \".\n    qi($values['plazo']) .\", \".\n    q($values['rfc']) .\", \".\n    qi($values['idcli']) .\", \".\n    qi($values['estatusentrega']) .\n\")\";\n\nif (!DB::Exec($sqlMain, $conn)) {\n    // FALLO: No se pudo insertar la solicitud principal.\n\n    \n\n    $message = handle_fail($all_values, $conn, \"No se pudo crear la solicitud: \".DB::LastError());\n    return false;\n}\n$idsolicitud = db_insertid($conn);\n\n\n// ==================================================================================\n// 4. INSERCIÓN EN entregasvnp\n// ==================================================================================\n\nif (!empty($extras[\"estado\"])) { // Si existe al menos el campo estado, intentamos insertar\n    $sql = sprintf(\n        \"INSERT INTO entregasvnp (idsolicitud, estado, ciudad, cp, calle, numeroext, numeroint, colonia)\n         VALUES (%d, %s, %s, %d, %s, %s, %s, %s)\",\n        $idsolicitud,\n        q($extras[\"estado\"]),\n        q($extras[\"ciudad\"]),\n        qi($extras[\"cp\"]),\n        q($extras[\"calle\"]),\n        q($extras[\"numeroext\"]),\n        q($extras[\"numeroint\"]),\n        q($extras[\"colonia\"])\n    );\n    if (!DB::Exec($sql, $conn)) {\n        // FALLO: No se pudo guardar la entrega.\n       $message= handle_fail($all_values, $conn, \"No se pudo guardar la entrega: \".DB::LastError());\n       return false;\n    }\n}\n\n\n// ==================================================================================\n// 5. INSERCIÓN EN seriessolicitadas (Equipo y Chip)\n// ==================================================================================\n\n// Equipo (noserie)\nif (!empty($esnimei)) {\n    $sql = sprintf(\n        \"INSERT INTO seriessolicitadas (idsolicitud, esnimei) VALUES (%d, %s)\",\n        $idsolicitud,\n        q($esnimei)\n    );\n    if (!DB::Exec($sql, $conn)) {\n        // FALLO: No se pudo guardar el equipo.\n        $message = handle_fail($all_values, $conn, \"No se pudo guardar el equipo en seriessolicitadas: \".DB::LastError());\n        return false;\n    } else {\n \n               DB::Exec(\"\n            DELETE FROM seriesreservadas\n            WHERE noserie=\".q($esnimei).\"\n            AND userid=\".q($values['usuario']));\n\n    }\n}\n    \n\n// ==================================================================================\n// 6. ÉXITO FINAL Y LIMPIEZA\n// ==================================================================================\n\nif (!DB::Exec(\"COMMIT\", $conn)) {\n           $message = handle_fail($all_values, $conn, \"Error al registrar los datos: \".DB::LastError());\n        return false;\n        \n} \n\n\n\n\n// LIMPIAR LA SESIÓN DE DATOS FALLIDOS si el COMMIT fue exitoso\nunset($_SESSION[\"add_data_temp\"]); \n\n// “flash message” en sesión para mostrarlo en verde tras el redirect\n$_SESSION['flash_ok'] = \"Solicitud #{$idsolicitud} guardada correctamente.\";\n\n$_SESSION['solicitudes_clean_draft'] = 1;\nif (ob_get_length()) { @ob_end_clean(); }\n\n// 🔁 Redirige SIEMPRE con clean=1 y un nonce anti-cache\n$nonce = time();\n$target = $pageObject->shortTableName . \"_add.php?new=1&clean=1&_n=\" . $nonce;\nheader(\"Location: \" . $target);\nexit;   // ← OBLIGATORIO\n\n\n\n\nreturn false;\n\n\n\n\n"
		},
		{
			"eventId": "EVENT_JS_ONLOAD",
			"pageType": "list",
			"code": "/*(function () {\r\n  var role = proxy.currentRole || '';   // viene de BeforeDisplay (PHP)\r\n  var user = proxy.currentUser || '';\r\n\r\n  // Ajusta estas condiciones a tu proyecto (si GroupID es numérico, castea con Number)\r\n  var esValidador = (role === 'VALIDADOR' || Number(role) === 2);\r\n  var esAdmin     = (user === 'ADMIN');\r\n  if (esValidador || esAdmin) return;   // ellos sí pueden editar \"estatus\"\r\n\r\n\r\n  var FIELD = 'estatus';\r\n\r\n  // Bloquea \"estatus\" en la fila que esté en modo edición inline\r\n  function bloquearEstatusEnFilaEditada() {\r\n    // La fila en edición suele llevar .rnr-row-edit (según tema); si no, bloqueamos por los IDs de los inputs\r\n    var $row = $('.r-grid .rnr-row-edit').first();\r\n\r\n    // 1) INTENTO con la API (si PHPRunner creó el objeto de control para la fila)\r\n    var rowId = $row.attr('data-record-id') || $row.data('recordId') || $row.attr('id') || null;\r\n    var ctrl  = (pageObj.getControl && rowId) ? pageObj.getControl(FIELD, rowId) : null;\r\n\r\n    if (ctrl) {\r\n      if (ctrl.makeReadonly) ctrl.makeReadonly();\r\n      if (ctrl.setDisabled)  ctrl.setDisabled(true);\r\n    }\r\n\r\n    // 2) FALLBACK por DOM (funciona aunque no exista el objeto de control JS)\r\n    // a) Celda por data-field / data-fieldname (según tema)\r\n    var $celda = $row.find('td[data-field=\"'+FIELD+'\"], td[data-fieldname=\"'+FIELD+'\"]');\r\n    // b) Por si el tema no pone data-field: busca inputs cuyo id empiece con value_FIELD_\r\n    var $inputs = $celda.find('input,select,textarea')\r\n                  .add('[id^=\"value_'+FIELD+'_\"]');\r\n\r\n    $inputs\r\n      .prop('disabled', true)\r\n      .prop('readonly', true)\r\n      .addClass('ph-disabled');\r\n\r\n    // Si el lookup usa Select2, bloquea el contenedor visual\r\n    $inputs.next('.select2-container').addClass('ph-disabled');\r\n  }\r\n\r\n  // Cuando el usuario activa \"Inline edit\", espera a que la fila cambie a modo edición y bloquea\r\n  $(document).on('click', '[data-itemid=\"grid_inline_edit\"], [data-buttonevent=\"inlineEdit_start\"]', function () {\r\n    setTimeout(bloquearEstatusEnFilaEditada, 120);\r\n  });\r\n\r\n  // Además, observa la grid por si el inline se abre por otro flujo (teclas, menú, etc.)\r\n  var grid = document.querySelector('.r-grid') || document.body;\r\n  new MutationObserver(function (muts) {\r\n    // Cuando aparezca una fila en modo edición, bloquea el campo\r\n    if ($('.r-grid .rnr-row-edit').length) {\r\n      setTimeout(bloquearEstatusEnFilaEditada, 0);\r\n    }\r\n  }).observe(grid, { childList: true, subtree: true });\r\n\r\n  // Bloqueo defensivo: si PHPRunner renderiza directamente el control (algunos temas),\r\n  // deshabilita cualquier input/select de estatus apenas aparezca en el DOM\r\n  function bloqueoGlobal(scope){\r\n    $(scope || document)\r\n      .find('td[data-field=\"'+FIELD+'\"], td[data-fieldname=\"'+FIELD+'\"], [id^=\"value_'+FIELD+'_\"]')\r\n      .find('input,select,textarea').addBack('input[id^=\"value_'+FIELD+'_\"],select[id^=\"value_'+FIELD+'_\"]')\r\n      .prop('disabled', true).prop('readonly', true).addClass('ph-disabled');\r\n  }\r\n  bloqueoGlobal(document);\r\n\r\n  // Observa nuevos nodos (re-renders de filas) y aplica bloqueo\r\n  new MutationObserver(function(muts){\r\n    for (const m of muts) if (m.addedNodes && m.addedNodes.length) { bloqueoGlobal(m.target); break; }\r\n  }).observe(document.body, { childList:true, subtree:true });\r\n})();\r\n*/\r\n/*\r\n(function () {\r\n  // rol/usuario desde PHP\r\n  var ROLE = (proxy.currentRole || '').toString().trim().toUpperCase();\r\n  var USER = (proxy.currentUser || '').toString().trim().toUpperCase();\r\n\r\n  // ajusta si tus GroupID son numéricos (ej. '2' = VALIDADOR, '1' = ADMIN)\r\n  var ES_VALIDADOR = (ROLE === 'VALIDADOR' || ROLE === '2');\r\n  var ES_ADMIN     = (ROLE === 'ADMIN' || ROLE === '1' || USER === 'ADMIN');\r\n\r\n  // Validador/Admin sí pueden editar\r\n  if (ES_VALIDADOR || ES_ADMIN) return;\r\n\r\n  // ==== bloquea por patrón de IDs (sin depender de data-field) ====\r\n  function disableEstatus(scope){\r\n    var $scope = $(scope || document);\r\n\r\n    // value_ / display_value_ del campo estatus\r\n    var $els = $scope.find(\r\n      '[id^=\"value_estatus_\"], [id^=\"display_value_estatus_\"]'\r\n    );\r\n\r\n    if ($els.length){\r\n      $els.each(function(){\r\n        // select => disabled; inputs/textarea => readonly + disabled por seguridad\r\n        if (this.tagName === 'SELECT') {\r\n          $(this).prop('disabled', true);\r\n        } else {\r\n          $(this).prop('readonly', true).prop('disabled', true);\r\n        }\r\n        $(this).addClass('ph-disabled');\r\n\r\n        // si hay select2 u otro contenedor visual, también bloquear\r\n        var $s2 = $(this).next('.select2-container, .select2');\r\n        if ($s2.length) $s2.addClass('ph-disabled').css('pointer-events','none');\r\n      });\r\n    }\r\n\r\n    // link \"Seleccionar\" del lookup\r\n    $scope.find('[id^=\"open_lookup_estatus_\"]').each(function(){\r\n      $(this)\r\n        .addClass('ph-disabled')\r\n        .css('pointer-events','none')\r\n        .attr('aria-disabled','true')\r\n        .on('click._lock', function(e){ e.preventDefault(); e.stopImmediatePropagation(); return false; });\r\n    });\r\n  }\r\n\r\n  // corre ahora (por si ya hay inline abierto)\r\n  disableEstatus(document);\r\n\r\n  // al pulsar Inline edit\r\n  $(document).on('click','[data-buttonevent=\"inlineEdit_start\"], [data-itemid=\"grid_inline_edit\"]', function(){\r\n    setTimeout(function(){ disableEstatus(document); }, 150);\r\n  });\r\n\r\n  // observa la página: cuando aparezcan los controles, los bloquea\r\n  new MutationObserver(function(muts){\r\n    for (const m of muts){\r\n      if (m.addedNodes && m.addedNodes.length){\r\n        disableEstatus(m.target);\r\n        // y de refuerzo, a nivel global\r\n        disableEstatus(document);\r\n        break;\r\n      }\r\n    }\r\n  }).observe(document.body, { childList:true, subtree:true });\r\n})();\r\n\r\n*/\r\n/*\r\n(function () {\r\n  // ============ CONFIG ============\r\n  const CONFIG = {\r\n    // Lista completa de campos que quieres gobernar (exactos)\r\n    fields: ['estatus','estatusentrega'],\r\n\r\n    // Aliases para roles numéricos -> texto (opcional)\r\n    roleAliases: { '1':'ADMIN', '2':'VALIDADOR' },\r\n\r\n    // Reglas: la PRIMERA que coincida se aplica (\"first match wins\").\r\n    // Usa enable/readonly/disable con arrays de campos o '*' para todos los de CONFIG.fields\r\n    rules: [\r\n      // Admin: todo habilitado\r\n      { match: { role: ['ADMIN'] }, enable: ['*'] },\r\n\r\n      // Validador: puede editar estatus; lo demás deshabilitado\r\n      { match: { role: ['VALIDADOR'] }, enable: ['estatus'], disable: ['*'] },\r\n\r\n      // Overrides por usuario (ejemplo): solo lectura de comentarios\r\n      { match: { user: ['VENDEDORES','GERENTES'] }, disable: ['*'] },\r\n\r\n      // Por defecto: todo deshabilitado\r\n      { match: { default: true }, disable: ['*'] }\r\n    ]\r\n  };\r\n  // ========== FIN CONFIG ==========\r\n\r\n\r\n  // ====== Normalización rol/usuario ======\r\n  let ROLE = (proxy.currentRole || '').toString().trim();\r\n  const USER = (proxy.currentUser || '').toString().trim().toUpperCase();\r\n  if (CONFIG.roleAliases[ROLE]) ROLE = CONFIG.roleAliases[ROLE];   // numérico -> alias\r\n  ROLE = ROLE.toUpperCase();\r\n\r\n  // ====== Motor de reglas (first match wins) ======\r\n  function resolveRule() {\r\n    for (const r of CONFIG.rules) {\r\n      const m = (r.match || {});\r\n      if (m.default) return r;\r\n\r\n      const okRole = !m.role || m.role.map(x => x.toString().toUpperCase()).includes(ROLE);\r\n      const okUser = !m.user || m.user.map(x => x.toString().toUpperCase()).includes(USER);\r\n      if (okRole && okUser) return r;\r\n    }\r\n    // si no hubo match, cae a \"todo deshabilitado\"\r\n    return { disable: ['*'] };\r\n  }\r\n\r\n  function expand(list) {\r\n    if (!list) return [];\r\n    return list.includes('*') ? CONFIG.fields.slice() : list.slice();\r\n  }\r\n\r\n  const rule = resolveRule();\r\n  const F_ENABLE   = expand(rule.enable);\r\n  const F_READONLY = expand(rule.readonly);\r\n  const F_DISABLE  = expand(rule.disable);\r\n\r\n  // Prioridad: enable > readonly > disable\r\n  function unique(a){ return Array.from(new Set(a)); }\r\n  function without(a, b){ const B = new Set(b); return a.filter(x=>!B.has(x)); }\r\n\r\n  const enableSet   = unique(F_ENABLE);\r\n  let   readonlySet = unique(without(F_READONLY, enableSet));\r\n  let   disableSet  = unique(without(F_DISABLE, enableSet.concat(readonlySet)));\r\n\r\n  // ====== Utilidades DOM por patrón de IDs ======\r\n  function findControls(scope, field){\r\n    const $s = $(scope || document);\r\n    return $s.find(\r\n      '[id^=\"value_'+field+'_\"], [id^=\"display_value_'+field+'_\"]'\r\n    );\r\n  }\r\n  function findLookupTriggers(scope, field){\r\n    return $(scope || document).find('[id^=\"open_lookup_'+field+'_\"]');\r\n  }\r\n\r\n  function enableField(scope, field){\r\n    const $els = findControls(scope, field).removeClass('ph-disabled');\r\n    $els.each(function(){\r\n      $(this).prop('disabled', false).prop('readonly', false);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.removeClass('ph-disabled').css('pointer-events','');\r\n    });\r\n    findLookupTriggers(scope, field)\r\n      .removeClass('ph-disabled')\r\n      .css('pointer-events','')\r\n      .attr('aria-disabled', null)\r\n      .off('click._lock');\r\n  }\r\n\r\n  function readonlyField(scope, field){\r\n    const $els = findControls(scope, field).addClass('ph-disabled');\r\n    $els.each(function(){\r\n      if (this.tagName === 'SELECT') $(this).prop('disabled', true);\r\n      else $(this).prop('readonly', true);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.addClass('ph-disabled').css('pointer-events','none');\r\n    });\r\n    // no bloqueamos el trigger si quieres dejar abrir el lookup pero no editar;\r\n    // si quieres bloquearlo igual, descomenta:\r\n    // findLookupTriggers(scope, field).addClass('ph-disabled').css('pointer-events','none')\r\n    //   .attr('aria-disabled','true').on('click._lock', e=>{e.preventDefault();e.stopImmediatePropagation();return false;});\r\n  }\r\n\r\n  function disableField(scope, field){\r\n    const $els = findControls(scope, field).addClass('ph-disabled');\r\n    $els.each(function(){\r\n      $(this).prop('disabled', true).prop('readonly', true);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.addClass('ph-disabled').css('pointer-events','none');\r\n    });\r\n    findLookupTriggers(scope, field)\r\n      .addClass('ph-disabled')\r\n      .css('pointer-events','none')\r\n      .attr('aria-disabled','true')\r\n      .on('click._lock', function(e){ e.preventDefault(); e.stopImmediatePropagation(); return false; });\r\n  }\r\n\r\n  function applyModes(scope){\r\n    enableSet.forEach(f   => enableField(scope, f));\r\n    readonlySet.forEach(f => readonlyField(scope, f));\r\n    disableSet.forEach(f  => disableField(scope,  f));\r\n  }\r\n\r\n  // ====== Hooks ======\r\n  // 1) Inicial\r\n  applyModes(document);\r\n\r\n  // 2) Cuando se abre inline edit por botón\r\n  $(document).on('click','[data-buttonevent=\"inlineEdit_start\"], [data-itemid=\"grid_inline_edit\"]', function(){\r\n    setTimeout(function(){ applyModes(document); }, 150);\r\n  });\r\n\r\n  // 3) Por cualquier otro flujo (doble click, menú, re-render)\r\n  new MutationObserver(function(muts){\r\n    for (const m of muts){\r\n      if (m.addedNodes && m.addedNodes.length){ applyModes(m.target); break; }\r\n    }\r\n  }).observe(document.body, { childList:true, subtree:true });\r\n})();\r\n*/\r\n\r\n(function () {\r\n  /* ========== CONFIG (edita a tu gusto) ========== */\r\n  const CONFIG = {\r\n    // TODOS los campos que gobernarás (exactos)\r\n    fields: ['estatus', 'estatusentrega'],\r\n\r\n    // Si tus GroupID son números, mapéalos a nombres:\r\n    roleAliases: { '1':'ADMIN', '2':'VALIDADOR' },\r\n\r\n    // Reglas (la PRIMERA que coincida se aplica)\r\n    // Usa enable / readonly / disable con arrays de campos o '*' para todos los de CONFIG.fields\r\n    rules: [\r\n      { match: { user: ['ADMIN'] }, enable: ['*'] },    \r\n      { match: { role: ['ADMIN'] },       enable: ['*'] },                 // Admin: todo habilitado\r\n      { match: { role: ['VALIDADOR'] },   enable: ['estatus'], disable: ['*'] }, // Validador: solo 'estatus'\r\n      // Si “VENDEDORES” y “GERENTES” son ROLES (no usuarios), usa role: [...]\r\n      { match: { role: ['VENDEDORES','GERENTES'] }, disable: ['estatus'] },      // Todo bloqueado\r\n      { match: { default: true },         disable: ['*'] }                 // Fallback\r\n    ]\r\n  };\r\n  /* ====== FIN CONFIG ====== */\r\n\r\n  const DEBUG = false;\r\n  const log = (...a)=>{ if (DEBUG) console.log('[lock]', ...a); };\r\n\r\n  // ---- Normalización rol/usuario desde PHP ----\r\n  let ROLE = (proxy.currentRole || '').toString().trim();\r\n  const USER = (proxy.currentUser || '').toString().trim().toUpperCase();\r\n  if (CONFIG.roleAliases[ROLE]) ROLE = CONFIG.roleAliases[ROLE];\r\n  ROLE = ROLE.toUpperCase();\r\n\r\n  // ---- Motor de reglas: first match wins ----\r\n  function resolveRule() {\r\n    for (const r of CONFIG.rules) {\r\n      const m = r.match || {};\r\n      if (m.default) return r;\r\n      const byRole = !m.role || m.role.map(x=>x.toString().toUpperCase()).includes(ROLE);\r\n      const byUser = !m.user || m.user.map(x=>x.toString().toUpperCase()).includes(USER);\r\n      if (byRole && byUser) return r;\r\n    }\r\n    return { disable: ['*'] };\r\n  }\r\n  function expand(list) {\r\n    if (!list) return [];\r\n    return list.includes('*') ? CONFIG.fields.slice() : list.slice();\r\n  }\r\n\r\n  const rule = resolveRule();\r\n  let enable   = new Set(expand(rule.enable));\r\n  let readonly = new Set(expand(rule.readonly).filter(f=>!enable.has(f)));\r\n  let disable  = new Set(expand(rule.disable).filter(f=>!enable.has(f) && !readonly.has(f)));\r\n\r\n  const ALL = [...new Set([...enable, ...readonly, ...disable])];\r\n\r\n  // ---- Selectores por patrón de IDs (PHPRunner) ----\r\n  const qCtrl   = (f, scope)=>$(scope||document).find(`[id^=\"value_${f}_\"],[id^=\"display_value_${f}_\"]`);\r\n  const qLookup = (f, scope)=>$(scope||document).find(`[id^=\"open_lookup_${f}_\"]`);\r\n\r\n  function doEnable(f, scope){\r\n    const $els = qCtrl(f,scope).removeClass('ph-disabled');\r\n    $els.each(function(){\r\n      $(this).prop('disabled', false).prop('readonly', false);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.removeClass('ph-disabled').css('pointer-events','');\r\n    });\r\n    qLookup(f,scope).removeClass('ph-disabled').css('pointer-events','').attr('aria-disabled',null).off('click._lock');\r\n  }\r\n  function doReadonly(f, scope){\r\n    const $els = qCtrl(f,scope).addClass('ph-disabled');\r\n    $els.each(function(){\r\n      if (this.tagName === 'SELECT') $(this).prop('disabled', true);\r\n      else $(this).prop('readonly', true);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.addClass('ph-disabled').css('pointer-events','none');\r\n    });\r\n    // Si quieres bloquear también el \"Seleccionar\", descomenta:\r\n    // qLookup(f,scope).addClass('ph-disabled').css('pointer-events','none')\r\n    //   .attr('aria-disabled','true').on('click._lock', e => { e.preventDefault(); e.stopImmediatePropagation(); return false; });\r\n  }\r\n  function doDisable(f, scope){\r\n    const $els = qCtrl(f,scope).addClass('ph-disabled');\r\n    $els.each(function(){\r\n      $(this).prop('disabled', true).prop('readonly', true);\r\n      const $s2 = $(this).next('.select2-container, .select2');\r\n      if ($s2.length) $s2.addClass('ph-disabled').css('pointer-events','none');\r\n    });\r\n    qLookup(f,scope).addClass('ph-disabled').css('pointer-events','none')\r\n      .attr('aria-disabled','true').on('click._lock', e => { e.preventDefault(); e.stopImmediatePropagation(); return false; });\r\n  }\r\n\r\n  function applyScope(scope){\r\n    enable.forEach(f=>doEnable(f,scope));\r\n    readonly.forEach(f=>doReadonly(f,scope));\r\n    disable.forEach(f=>doDisable(f,scope));\r\n  }\r\n\r\n  // ---- Espera activa a que existan los controles (rápida) ----\r\n  function waitFor(list, timeout=2000, scope){\r\n    const t0 = performance.now();\r\n    return new Promise(resolve=>{\r\n      (function tick(){\r\n        const ok = list.every(f => $(scope||document).find(`[id^=\"value_${f}_\"],[id^=\"display_value_${f}_\"]`).length);\r\n        if (ok || performance.now()-t0 > timeout) resolve();\r\n        else requestAnimationFrame(tick);\r\n      })();\r\n    });\r\n  }\r\n\r\n  // ---- Aplicación inicial (por si ya hay inline abierto) ----\r\n  applyScope(document);\r\n\r\n  // ---- Guardias: si alguien alcanza a tocar un control, lo bloqueamos al instante ----\r\n  const selInputs = ALL.map(f=>`[id^=\"value_${f}_\"],[id^=\"display_value_${f}_\"]`).join(',');\r\n  if (selInputs) {\r\n    $(document).on('focusin click', selInputs, function(){\r\n      const id = this.id||'';\r\n      const f = ALL.find(x => id.startsWith('value_'+x+'_') || id.startsWith('display_value_'+x+'_'));\r\n      if (!f) return;\r\n      if (disable.has(f))      doDisable(f, document);\r\n      else if (readonly.has(f))doReadonly(f, document);\r\n      else                     doEnable(f, document);\r\n    });\r\n  }\r\n  const selLookup = ALL.map(f=>`[id^=\"open_lookup_${f}_\"]`).join(',');\r\n  if (selLookup) {\r\n    $(document).on('click', selLookup, function(e){\r\n      const id = this.id||'';\r\n      const f = ALL.find(x => id.startsWith('open_lookup_'+x+'_'));\r\n      if (!f) return;\r\n      if (disable.has(f) || readonly.has(f)) {\r\n        e.preventDefault(); e.stopImmediatePropagation();\r\n        (disable.has(f) ? doDisable : doReadonly)(f, document);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // ---- Al pulsar \"Inline edit\" ----\r\n  $(document).on('click','[data-buttonevent=\"inlineEdit_start\"], [data-itemid=\"grid_inline_edit\"]', async function(){\r\n    await waitFor(ALL, 2500, document);\r\n    applyScope(document);\r\n  });\r\n\r\n  // ---- Observer: solo la grid (más rápido) ----\r\n  const grid = document.querySelector('.r-grid') || document.body;\r\n  new MutationObserver(async muts=>{\r\n    for (const m of muts) {\r\n      if (m.addedNodes && m.addedNodes.length) {\r\n        await waitFor(ALL, 2000, grid);\r\n        applyScope(grid);\r\n        break;\r\n      }\r\n    }\r\n  }).observe(grid, { childList:true, subtree:true });\r\n})();\r\n\r\n\r\n\r\n\r\n\r\nfunction redirigirReporte() {\r\n  var val2 = $(\"#edt_FechaIn\").val();\r\n  var val3 = $(\"#edt_FechaFn\").val();\r\n\r\n  \r\n  window.location.href = 'solicitudes_list.php?FechaIn=' + val2 +\r\n                           '&FechaFn=' + val3;\r\n}\r\n// Asignar evento a todos los campos\r\n$(\"#edt_FechaIn, #edt_FechaFn\")\r\n  .on(\"change\", redirigirReporte);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
		},
		{
			"eventId": "EVENT_JS_ONLOAD",
			"pageType": "edit",
			"code": "(function () {\r\n    \r\n    \r\n    \r\n    // NOMBRES DE CAMPOS EN TU FORMULARIO\r\nvar fldProducto = 'idproducto';\r\nvar fldNoSerie    = 'noserie';\r\n\r\nvar ctrlProducto = Runner.getControl(pageid, fldProducto);\r\nvar ctrlSerie    = Runner.getControl(pageid, fldNoSerie);\r\n\r\nwindow.__res_noserie = null;\r\n\r\nfunction releasePrev() {\r\n  if (!window.__res_noserie) return;\r\n  $.post('serial_reserve.php', { action:'release', noserie: window.__res_noserie }, function(){}, 'json');\r\n  window.__res_noserie = null;\r\n}\r\n\r\nif (ctrlProducto) {\r\n  ctrlProducto.on('change', function() {\r\n    var productId = ctrlProducto.getValue();\r\n\r\n    // Limpia y libera lo anterior\r\n    releasePrev();\r\n    if (ctrlSerie) ctrlSerie.setValue('');\r\n\r\n    if (!productId) return;\r\n\r\n    $.post('serial_reserve.php', { action:'reserve_by_product', product_id: productId }, function(resp){\r\n      if (resp && resp.ok) {\r\n        if (ctrlSerie) ctrlSerie.setValue(resp.noserie);\r\n        window.__res_noserie = resp.noserie;\r\n      } else if (resp && resp.error === 'no-stock') {\r\n        alert('No hay series disponibles para este producto.');\r\n        if (ctrlProducto) ctrlProducto.reset(); \r\n      } else {\r\n        alert('No se pudo reservar una serie (concurrencia). Intenta de nuevo.');\r\n        if (ctrlProducto) ctrlProducto.reset(); \r\n      }\r\n    }, 'json');\r\n  });\r\n}\r\n\r\n// Liberar al cerrar/navegar fuera (best effort)\r\nwindow.addEventListener('beforeunload', function(){\r\n  if(!window.__res_noserie) return;\r\n  var data = new URLSearchParams({ action:'release', noserie: window.__res_noserie });\r\n  navigator.sendBeacon('serial_reserve.php', data);\r\n});\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n  function equalizePanels() {\r\n    // panels exactos (no dependemos del texto del título)\r\n    var $left  = $('.panel.form-section[data-itemid=\"section\"]');\r\n    var $right = $('.panel.form-section[data-itemid=\"section1\"]');\r\n\r\n    if (!$left.length || !$right.length) return;\r\n\r\n    // Sólo cuando el paso 0 está visible\r\n    if (!$('#step_0_1').is(':visible')) return;\r\n\r\n    // reset\r\n    $left.css('min-height', '');\r\n    $right.css('min-height', '');\r\n\r\n    // calcula y aplica\r\n    var h = Math.max($left.outerHeight(), $right.outerHeight());\r\n    $left.css('min-height', h + 'px');\r\n    $right.css('min-height', h + 'px');\r\n  }\r\n\r\n  // correr al cargar y al redimensionar\r\n  $(window).on('load resize', function(){ setTimeout(equalizePanels, 0); });\r\n\r\n  // si abren/cierran colapsables dentro del panel\r\n  $('.panel-collapse').on('shown.bs.collapse hidden.bs.collapse', function(){\r\n    setTimeout(equalizePanels, 100);\r\n  });\r\n\r\n  // cuando cambian de step (pestaña de “Datos iniciales / Datos de la Entrega”)\r\n  $('body').on('click', '#stepnav1 a', function () {\r\n    setTimeout(equalizePanels, 300);\r\n  });\r\n\r\n  // observa cambios de visibilidad del step 0 (por si lo alternan)\r\n  var step0 = document.getElementById('step_0_1');\r\n  if (step0) {\r\n    new MutationObserver(function () { setTimeout(equalizePanels, 50); })\r\n      .observe(step0, { attributes: true, attributeFilter: ['style', 'class'] });\r\n  }\r\n\r\n  // arranque\r\n  setTimeout(equalizePanels, 0);\r\n})();\r\n\r\n\r\n\r\n"
		},
		{
			"eventId": "EVENT_AFTEREDIT",
			"pageType": "edit",
			"code": "\n\n//**********  Check if specific record exists  ************  \n/*\n$ids = (int)$keys['idsolicitud'];\nif ((int)$values['estatusentrega']==2) {\n    $rs = DB::Query(\"select * from ventas where idsolicitud=\". $ids);\n    $data=$rs->fetchAssoc(); \n    if($data) {  \n        // if record exists do something \n    } else {  \n        $data = array(); \n        $data[\"idtipoventa\"] = $values['idtipoventa']; \n        $data[\"fecha\"] = date('Y-m-d'); \n        $data[\"idcliente\"] = $values['idcliente']; \n        $data[\"esnimei\"] = $values['equipo'];   \n        $data[\"simcard\"] = $values['chip'];   \n        $data[\"usuario\"] = $values['usuario'];   \n        $data[\"tienda\"] = $values['idtienda'];   \n        $data[\"idsolicitud\"] = $values['idsolicitud'];   \n        $data[\"orden\"] = $values['orden'];   \n        $data[\"plazo\"] = $values['plazo'];   \n        $data[\"plan\"] = $values['idplan'];   \n        $data[\"equipoincluido\"] = 1;   \n\n\n        \n        DB::Insert(\"ventas\", $data );\n    // if dont exist do something else \n    }\n\n}\n\n*/\n\n\n// En el evento AfterProcessEdit de la tabla 'solicitudes'\n\nglobal $pageObject;\n\n// Verificar si hay datos guardados de un intento de edición fallido\nif (isset($_SESSION[\"edit_data_temp\"])) {\n    \n    $temp_data = $_SESSION[\"edit_data_temp\"];\n    $temp_values = $temp_data['values'];\n    $temp_keys = $temp_data['keys'];\n\n    // ⚠️ CRÍTICO: Solo rellenar si estamos en el registro correcto que falló\n    if ($temp_keys['idsolicitud'] == $pageObject->keys['idsolicitud']) {\n        \n        // Asignar los valores del formulario que falló a los controles de la página\n        foreach ($temp_values as $fldName => $fldValue) {\n            if (isset($pageObject->controlsData['details'][$fldName])) {\n                $pageObject->controlsData['details'][$fldName]['value'] = $fldValue;\n            }\n        }\n        \n        // Limpiar los datos temporales después de usarlos\n        unset($_SESSION[\"edit_data_temp\"]);\n    }\n}"
		},
		{
			"eventId": "EVENT_BEFOREMOVENEXT_LIST",
			"pageType": "list",
			"code": "// $data = registro actual; $row = atributos HTML de la fila\r\n$st = (int)$data[\"estatusentrega\"];  // 2=Entregada, 3=Rechazada (ajusta si difiere)\r\nswitch ($st) {\r\n  case 2:  $cls = 'table-success'; break; // Entregada\r\n  case 3:  $cls = 'table-danger';  break; // Rechazada\r\n  default: $cls = 'table-warning';        // No entregada / otros\r\n}\r\n\r\nif (!isset($row[\"rowattrs\"])) $row[\"rowattrs\"] = '';\r\n$row[\"rowattrs\"] .= ' class=\"'.$cls.'\"';\r\n\r\nif($data['estatusentrega'] == 3){\r\n    $record[\"css\"] = 'background:#FF3A30';\r\n    $record['fecha_css'] = 'color:white';\r\n    $record['idcliente_css'] = 'color:white';\r\n    $record['descripcion_css'] = 'color:white';\r\n    $record['estatus_css'] = 'color:white';\r\n    $record['plazo_css'] = 'color:white';\r\n    $record['orden_css'] = 'color:white';\r\n    $record['maps_url_css'] = 'color:white';\r\n    $record['estatusentrega_css'] = 'color:white';\r\n    $record['equipo_css'] = 'color:white';\r\n    $record['chip_css'] = 'color:white';\r\n}\r\n"
		},
		{
			"eventId": "EVENT_BEFORESHOW_EDIT",
			"pageType": "edit",
			"code": "// Place event code here.\n// Use \"Add Action\" button to add code snippets.\n\n\n// Edit page -> Before display\n// Guarda el producto actual en sesión para el SQL del lookup\n$_SESSION[\"IDACTUAL\"] = isset($values[\"idproducto\"]) ? (int)$values[\"idproducto\"] : 0;\n\n\n\n\n\n"
		},
		{
			"eventId": "EVENT_BEFOREQUERY_LIST",
			"pageType": "list",
			"code": "\nswitch (true) {\n\n\t//case ($_SESSION[\"Acceso\"]===0 OR strtoupper($_SESSION['UserID'])=='ADMIN'):\n\tcase ( strtoupper($_SESSION['UserID'])=='ADMIN'):\n\t\t\t\t\tbreak;\n\t\tcase (strtoupper($_SESSION[\"Label\"])=='VALIDADOR'):\n    //   $strWhereClause=WhereAdd($strWhereClause,\"solicitudes.idtipoventa in (1,11,21,22)\");\n\t       break;\n\t\t\t\n\t\t\tcase ($_SESSION[\"Acceso\"]==1):\n       $strWhereClause=WhereAdd($strWhereClause,\"/*solicitudes.idtipoventa not in (1,11,21,22) and*/ s.idtienda=\".$_SESSION[\"Tienda\"]); /*solicitado por Diego*/\n \n        break;\n  /* case ($_SESSION[\"Acceso\"]==2):\n\t\t\t\t\n         $strWhereClause=WhereAdd($strWhereClause,\"solicitudes.idtipoventa>1 AND solicitudes.idtienda=\".$_SESSION[\"Tienda\"]);\n        break;*/\n    case ($_SESSION[\"Acceso\"]===10 ):\n        $strWhereClause=whereAdd($strWhereClause,\" solicitudes.idtienda in (\nselect distinct t.idtienda from tiendas t inner join\n userssectores us on t.idsector=us.idsector\n where username='\".$_SESSION[\"UserID\"].\"')\");\n        break;\n\t\tdefault:\n\t\t\t\t$strWhereClause=whereAdd($strWhereClause,\"s.usuario='\".$_SESSION['UserID'].\"'\");\n\t\t\t\tbreak;\n}\n\n\n\n\n\n\n\n// 1) Tomar fechas en este orden de prioridad: GET -> SESSION -> defaults\n$in  = isset($_GET['FechaIn']) ? $_GET['FechaIn'] : ( isset($_SESSION['FechaIn']) ? $_SESSION['FechaIn'] : date('Y-m-d', strtotime('-30 days')) );\n$fn  = isset($_GET['FechaFn']) ? $_GET['FechaFn'] : ( isset($_SESSION['FechaFn']) ? $_SESSION['FechaFn'] : date('Y-m-d') );\n\n// 2) Validar formato (YYYY-MM-DD); si no es válido, poner defaults\n$check = function($d){\n    $dt = DateTime::createFromFormat('Y-m-d', $d);\n    return $dt && $dt->format('Y-m-d') === $d;\n};\nif( !$check($in) ) $in = date('Y-m-d', strtotime('-30 days'));\nif( !$check($fn) ) $fn = date('Y-m-d');\n\n// 3) Si el usuario invirtió el rango, corregir (swap)\nif( $in > $fn ){\n    $tmp = $in; $in = $fn; $fn = $tmp;\n}\n\n// 4) Guardar en sesión (para siguientes cargas)\n$_SESSION['FechaIn'] = $in;\n$_SESSION['FechaFn'] = $fn;\n\n// 5) Construir el WHERE\n//    - Si tu campo 'fecha' es DATE, BETWEEN es inclusivo y esto basta.\n//    - Si fuese DATETIME y quieres incluir todo el día final, usa <= DATE_ADD($fn, INTERVAL 1 DAY)\nif( $strWhereClause != \"\" ) {\n    $strWhereClause .= \" AND \";\n}\n$strWhereClause .= \" fecha BETWEEN \" . add_db_quotes(\"fecha\", $in) . \" AND \" . add_db_quotes(\"fecha\", $fn);\n\n// Para depurar:\n// LogInfo(\"Rango aplicado: $in a $fn\");\n// LogInfo(\"WHERE: \".$strWhereClause);\n"
		},
		{
			"eventId": "EVENT_BEFORESHOW_ADD",
			"pageType": "add",
			"code": "\n\n// BeforeDisplay (Add)\nglobal $xt;\n\n// Si hubo fallo previo, repinta lo capturado:\nif (isset($_SESSION['add_data_temp']) && is_array($_SESSION['add_data_temp'])) {\n    $xt->assign(\"message\", \"⚠️ Se recuperaron los datos del intento anterior. Revise y guarde nuevamente.\");\n    $xt->assign(\"message_class\", \"alert-warning\");\n\n    // Prefill directo de los campos que existan en el form (opcional)\n    foreach($_SESSION['add_data_temp'] as $field => $value){\n        if ($value !== '' && $value !== null) {\n            $pageObject->setProxyValue(\"value_{$field}_1\", $value);\n        }\n    }\n    // No borramos add_data_temp aquí; se borra tras éxito\n}\n\n// Flash de éxito\nif (isset($_SESSION['flash_ok'])) {\n    $xt->assign(\"message\", $_SESSION['flash_ok']);\n    $xt->assign(\"message_class\", \"alert-success\");\n    unset($_SESSION['flash_ok'], $_SESSION['add_data_temp']);\n    unset($_SESSION['idactual']);\n    unset($_SESSION['currentErr']);\n}\n\nreturn true;\n"
		},
		{
			"eventId": "EVENT_BEFOREEDIT",
			"pageType": "edit",
			"code": "// Place event code here.\n\n// En el evento BeforeEdit de la tabla 'solicitudes'\n\n// ⚠️ Usaremos el array $values que contiene los datos a guardar.\n$all_values = $values; \n\nDB::Exec(\"START TRANSACTION\", $conn);\n\n// ... (Las funciones q, qi, qb se asumen definidas o incluidas) ...\nfunction q($v){ // cadenas/fechas: 'valor' o NULL\n    return (isset($v) && $v !== '' ? db_prepare_string($v) : \"NULL\");\n}\nfunction qi($v){ // enteros: número o NULL\n    return (isset($v) && $v !== '' ? (int)$v : \"NULL\");\n}\nfunction qb($v){ // booleano/bit: 0/1\n    return (!empty($v) ? 1 : 0);\n}\n\n\n$camposExtra = [\"nombre\",\"paterno\",\"materno\",\"estado\",\"ciudad\",\"cp\",\"calle\",\"numeroext\",\"numeroint\",\"colonia\", \"noserie\", \"simcard\"];\n\n/**\n * FUNCIÓN DE MANEJO DE FALLO para la edición\n * Guarda los datos del formulario en sesión antes de salir con error, \n * y mantiene las claves primarias ($keys).\n */\nfunction handle_fail_edit($values_to_save, $keys, $conn, $message_text) {\n    DB::Exec(\"ROLLBACK\", $conn);\n    \n    // Guardar TODOS los datos del formulario y las claves primarias\n    $_SESSION[\"edit_data_temp\"] = [\n        'values' => $values_to_save,\n        'keys' => $keys\n    ];\n    \n    // Establecer el mensaje de error para PHPRunner\n    global $message;\n    $message = $message_text;\n    \n    // Devuelve false para detener el proceso de guardado\n    return false;\n}\n\n// -----------------------------------------------------------\n// 1. PREPARACIÓN DE VALORES Y EXTRACCIÓN DE CAMPOS EXTRA\n// -----------------------------------------------------------\n\n// Separar campos para la actualización de la tabla principal y las tablas relacionadas\n$extras = [];\nforeach ($camposExtra as $f) {\n    if (array_key_exists($f, $all_values)) {\n        $extras[$f] = $all_values[$f];\n        // Quitar campos de la tabla principal ($values)\n        if (array_key_exists($f, $values)) {\n            unset($values[$f]); \n        }\n    }\n}\n\n$idsolicitud = (int)$keys[\"idsolicitud\"]; // Obtener la clave del registro actual\n\n// ... (La lógica de verificación de stock para noserie y simcard va aquí, similar al BeforeAdd) ...\n// Si fallan las verificaciones, debes usar:\n/*\nif (// Validación falla) {\n    return handle_fail_edit($all_values, $keys, $conn, \"Error en validación de stock.\");\n}\n*/\n$esnimei = $extras['noserie'] ?? null;\n\n\n\n// -----------------------------------------------------------\n// 2. ACTUALIZACIÓN DE solicitudes\n// -----------------------------------------------------------\n\n// PHPRunner intentará hacer el UPDATE de $values automáticamente si retornas TRUE, \n// pero como estamos manejando la transacción y tablas relacionadas, es mejor hacerlo manualmente\n// y retornar FALSE al final, o limpiar $values para evitar un doble UPDATE.\n\n// Usaremos solo los campos que cambiaste en el formulario\n$sqlUpdate = \"UPDATE solicitudes SET \".\n    \"idcliente = \". qi($values['idcliente']) .\", \".\n    \"idproducto = \". qi($values['idproducto']) .\", \".\n    \"idplan = \". qi($values['idplan']) .\", \".\n    \"orden = \". q($values['orden']) .\", \".\n    \"plazo = \". qi($values['plazo']) .\", \".\n    \"rfc = \". q($values['rfc']) .\", \".\n    \"idcli = \". qi($values['idcli']) .\", \".\n    \"estatusentrega = \". qi($values['estatusentrega']) .\", \".\n    \"fechamodif = NOW() \".\n    \"WHERE idsolicitud = \".$idsolicitud;\n\nif (!DB::Exec($sqlUpdate, $conn)) {\n    // FALLO: No se pudo actualizar la solicitud principal.\n    return handle_fail_edit($all_values, $keys, $conn, \"No se pudo actualizar la solicitud: \" . DB::LastError());\n}\n\n\n// -----------------------------------------------------------\n// 3. ACTUALIZACIÓN/INSERCIÓN EN entregasvnp\n// -----------------------------------------------------------\n\n// Buscamos si ya existe un registro de entrega para esta solicitud\n$existeEntrega = DBLookup(\"SELECT 1 FROM entregasvnp WHERE idsolicitud = \".$idsolicitud, $conn);\n\nif (!empty($extras[\"estado\"])) {\n    if ($existeEntrega) {\n        // ACTUALIZAR\n        $sql = sprintf(\n            \"UPDATE entregasvnp SET estado=%s, ciudad=%s, cp=%d, calle=%s, numeroext=%s, numeroint=%s, colonia=%s WHERE idsolicitud=%d\",\n            q($extras[\"estado\"]), q($extras[\"ciudad\"]), qi($extras[\"cp\"]), q($extras[\"calle\"]), \n            q($extras[\"numeroext\"]), q($extras[\"numeroint\"]), q($extras[\"colonia\"]), $idsolicitud\n        );\n    } else {\n        // INSERTAR\n        $sql = sprintf(\n            \"INSERT INTO entregasvnp (idsolicitud, estado, ciudad, cp, calle, numeroext, numeroint, colonia)\n             VALUES (%d, %s, %s, %d, %s, %s, %s, %s)\",\n            $idsolicitud, q($extras[\"estado\"]), q($extras[\"ciudad\"]), qi($extras[\"cp\"]), \n            q($extras[\"calle\"]), q($extras[\"numeroext\"]), q($extras[\"numeroint\"]), q($extras[\"colonia\"])\n        );\n    }\n\n    if (!DB::Exec($sql, $conn)) {\n        // FALLO: No se pudo guardar/actualizar la entrega.\n        return handle_fail_edit($all_values, $keys, $conn, \"No se pudo actualizar la entrega: \" . DB::LastError());\n    }\n}\n\n\n// -----------------------------------------------------------\n// 4. ACTUALIZACIÓN EN seriessolicitadas (Equipo y Chip)\n// -----------------------------------------------------------\n\n// Primero, limpiamos las series existentes para esta solicitud (si ya existen) para re-insertar o actualizar\nDB::Exec(\"DELETE FROM seriessolicitadas WHERE idsolicitud = \" . $idsolicitud, $conn); \n\n// Equipo (noserie)\nif (!empty($esnimei)) {\n    $sql = sprintf(\"INSERT INTO seriessolicitadas (idsolicitud, esnimei) VALUES (%d, %s)\", $idsolicitud, q($esnimei));\n    if (!DB::Exec($sql, $conn)) {\n        return handle_fail_edit($all_values, $keys, $conn, \"No se pudo guardar el equipo en seriessolicitadas: \" . DB::LastError());\n    }\n}\n    \n\n\n\n// -----------------------------------------------------------\n// 5. ÉXITO FINAL Y LIMPIEZA\n// -----------------------------------------------------------\n\nDB::Exec(\"COMMIT\", $conn);\n\n// Limpiar la sesión de datos fallidos\nunset($_SESSION[\"edit_data_temp\"]); \n\n// Mensaje flash y redirección (opcional, PHPRunner por defecto va a la lista o al siguiente registro)\n$_SESSION['flash_ok'] = \"Solicitud #{$idsolicitud} actualizada correctamente.\";\n\n// Para evitar que PHPRunner intente un UPDATE por defecto y para que el control\n// de transacción sea total, retornamos FALSE.\nreturn false;\n\n\n"
		},
		{
			"eventId": "EVENT_BEFOREPROCESSROW_LIST",
			"pageType": "list",
			"code": "// Place event code here.\n// Use \"Add Action\" button to add code snippets.\n\n// $data = datos del registro actual\n// $record = atributos HTML de la fila (puedes modificar botones, links, etc.)\n// $pageObject = objeto de página\n\n// Events → List page → Before record processed($data, &$record, &$pageObject)\n\n// 1) Construir las keys del registro actual (soporta PK compuesta)\n\n// solicitud → List → Before record processed($data, &$record, &$pageObject)\n\n// Keys para la URL (soporta PK compuesta)\n$params = [];\n$i = 1;\nforeach( $pageObject->pSet->getTableKeys() as $pk ){\n  $params[] = \"editid\".$i.\"=\".rawurlencode($data[$pk]);\n  $i++;\n}\n$q = implode(\"&\", $params);\n\n// Decide en servidor\n$userId  = isset($_SESSION['UserID']) ? strtoupper((string)$_SESSION['UserID']) : '';\n$isAdmin = ($userId === 'ADMIN');\n\n$dest = GetTableLink(\"solicitudes\", $isAdmin ? \"edit1\" : \"edit\") . \"?\" . $q;\n\n// Edit no-popup: usa href (también seteo data-href por si el tema lo usa)\n$attr = 'href=\"'.runner_htmlspecialchars($dest).'\" data-href=\"'.runner_htmlspecialchars($dest).'\" class=\"rnr-editlink\"';\n$record[\"editlink_attrs\"]       = $attr;\n$record[\"editlink_attrs_icon\"]  = $attr;   // si el tema muestra icono aparte\n$record[\"editlink_button_attrs\"]= $attr;   // por si renderiza un botón\n"
		},
		{
			"eventId": "EVENT_BEFORESHOW_LIST",
			"pageType": "list",
			"code": "// Place event code here.\n// Use \"Add Action\" button to add code snippets.\n\n// Detecta ADMIN y otras banderas servidor-side\n// Detecta ADMIN y otras banderas servidor-side\n// --- Reglas de acceso ---\n$userId      = isset($_SESSION['UserID']) ? strtoupper((string)$_SESSION['UserID']) : '';\n$isAdmin     = ($userId === 'ADMIN');\n$isValidador = (isset($_SESSION['Label'])  && $_SESSION['Label'] === 'VALIDADOR');\n$hasAcceso   = (isset($_SESSION['Acceso']) && intval($_SESSION['Acceso']) === 1);\n\n$role = $_SESSION['Label'];\n\n$pageObject->setProxyValue(\"currentRole\", $role);\n$pageObject->setProxyValue(\"currentUser\", $userId);\n// Cambia la condición a tu gusto:\n$allowLogistic =  $isAdmin || ($isValidador && $hasAcceso);\n\n// IMPORTANTE: usa el *itemid* real del botón en el diseñador (Builder).\n// Te recomiendo renombrarlo a \"logistic_btn\". Si en tu HTML ves data-itemid=\"custom_button\",\n// entonces cambia \"logistic_btn\" por \"custom_button\".\nif (!$allowLogistic) {\n    $pageObject->hideItem(\"logistic_btn\");   // oculta la columna/botón para ese usuario\n} else {\n    // lo exponemos por si quieres usarlo del lado cliente (opcional)\n    $pageObject->setProxyValue(\"allowLogistic\", true);\n}\n\n\n\n"
		},
		{
			"eventId": "EVENT_BEFOREPROCESS_ADD",
			"pageType": "add",
			"code": "\n\n// BeforeProcessAdd\nglobal $pageObject;\n\n$shouldClean =\n    isset($_SESSION['solicitudes_clean_draft']) ||\n    (isset($_GET['clean']) && $_GET['clean'] === '1');\n\nif ($shouldClean) {\n    // Anti-cache / BFCache\n    @header(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\n    @header(\"Pragma: no-cache\");\n    @header(\"Expires: 0\");\n\n    // Bandera para tu JS\n    $pageObject->header =\n        \"<script>\n           window.CLEAN_ON_LOAD = true;\n           window.SKIP_RECOVERY = true;\n           try { sessionStorage.removeItem('solicitud_vnp_draft'); } catch(e){}\n         </script>\" . ($pageObject->header ?? '');\n\n    unset($_SESSION['solicitudes_clean_draft']); // consumir\n}\n\n// Limpiezas varias\nforeach (['add_data_temp','multistep_vars_solicitudes','solicitudes_add'] as $k) {\n    if (isset($_SESSION[$k])) unset($_SESSION[$k]);\n}\nreturn true;\n\n"
		},
		{
			"eventId": "EVENT_JS_ONLOAD",
			"pageType": "add",
			"code": "// ====================== CONFIG / GLOBALS ======================\r\nwindow.STORAGE_KEY   = 'solicitud_vnp_draft';\r\nwindow.ENDPOINT      = 'serial_reserve.php';\r\nwindow.FIELDS = [\r\n  'idcliente','idproducto','idplan','orden','plazo','rfc','idcli',\r\n  'estado','ciudad','colonia','calle','numeroext','numeroint','noserie'\r\n];\r\nwindow.__res_noserie = window.__res_noserie || null;\r\nwindow.__recovering  = false;\r\nwindow.__submitting  = false;\r\nwindow.SKIP_RECOVERY = window.SKIP_RECOVERY || false;\r\n\r\n// Borrador caduca en 2 horas\r\nvar MAX_DRAFT_AGE_MS = 2 * 60 * 60 * 1000;\r\n\r\n// Redirige después del guardado exitoso (modo AJAX)\r\npageObj.on('afterSave', function (resp) {\r\n  // Opcional: valida éxito si quieres\r\n  // if (!resp || resp.success === false) return;\r\n\r\n  try { sessionStorage.removeItem('solicitud_vnp_draft'); } catch(e){}\r\n  // añade clean=1 y un nonce para evitar caché\r\n  window.location.href = 'solicitudes_add.php?new=1&clean=1&_n=' + Date.now();\r\n});\r\n\r\n\r\n// ====================== HELPERS GENERALES ======================\r\nfunction currentPageId() {\r\n  if (typeof window.pageid !== 'undefined' && window.pageid) return window.pageid;\r\n  var pid = $('[data-pageid]').first().attr('data-pageid');\r\n  return pid || '';\r\n}\r\nfunction getCtrl(field) {\r\n  try { return Runner.getControl(currentPageId(), field); } catch(e) { return null; }\r\n}\r\nfunction readVal(field) {\r\n  var c = getCtrl(field);\r\n  if (c && typeof c.getValue === 'function') return c.getValue();\r\n  var pid = currentPageId();\r\n  var $id = $('#value_'+field+'_'+pid);\r\n  if ($id.length) return $id.val();\r\n  var $w = $('div.r-integrated-field[data-field=\"'+field+'\"][data-pageid=\"'+pid+'\"]');\r\n  if ($w.length) {\r\n    var $inp = $w.find('input,select,textarea').first();\r\n    if ($inp.length) return $inp.val();\r\n  }\r\n  var $n = $('[name=\"'+field+'\"]');\r\n  if ($n.length) return $n.val();\r\n  return '';\r\n}\r\nfunction setVal(field, value, fireChange) {\r\n  var c = getCtrl(field);\r\n  if (c && typeof c.setControlValue === 'function') {\r\n    c.setControlValue(value);\r\n    if (fireChange && typeof c.fireEvent === 'function') c.fireEvent('change');\r\n    return true;\r\n  }\r\n  var pid = currentPageId();\r\n  var $id = $('#value_'+field+'_'+pid);\r\n  if ($id.length) {\r\n    $id.val(value).trigger('change');\r\n    if (fireChange) $id.trigger('keyup');\r\n    return true;\r\n  }\r\n  var $w = $('div.r-integrated-field[data-field=\"'+field+'\"][data-pageid=\"'+pid+'\"]');\r\n  if ($w.length) {\r\n    var $inp = $w.find('input,select,textarea').first();\r\n    if ($inp.length) {\r\n      $inp.val(value).trigger('change');\r\n      if (fireChange) $inp.trigger('keyup');\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction setNoSerieValue(noserie) {\r\n  var ok = setVal('noserie', noserie, true);\r\n  if (ok) return;\r\n  var tries = 0, max = 40, delay = 150;\r\n  (function retry(){\r\n    tries++;\r\n    if (setVal('noserie', noserie, true)) return;\r\n    if (tries >= max) return;\r\n    setTimeout(retry, delay);\r\n  })();\r\n}\r\nfunction hasErrorMessage() {\r\n  if (window.FORM_ERROR === true) return true;\r\n  var $msg = $('[data-itemtype=\"edit_message\"].alert, .alert[data-itemtype=\"edit_message\"]');\r\n  if (!$msg.length) return false;\r\n  var txt = $.trim($msg.text() || '');\r\n  if (!txt) return false;\r\n  if ($msg.is('.alert-danger, .alert-error')) return true;\r\n  return true;\r\n}\r\nfunction getQS(name){\r\n  var m = new RegExp('[?&]'+name+'=([^&]*)').exec(location.search);\r\n  return m ? decodeURIComponent(m[1].replace(/\\+/g,' ')) : null;\r\n}\r\nfunction hasSuccessOrClean() {\r\n  var okMsg = $('.alert.alert-success[data-itemtype=\"edit_message\"], [data-itemtype=\"edit_message\"].alert-success');\r\n  if (okMsg.length) return true;\r\n  return (getQS('clean') === '1');\r\n}\r\n\r\n// --- limpieza fuerte tras éxito/entrada limpia ---\r\nfunction resetAllFieldsUI() {\r\n  window.__recovering = true;\r\n  // 1ª pasada\r\n  (window.FIELDS || []).forEach(function (f) { setVal(f, '', true); });\r\n  window.__res_noserie = null;\r\n  try { sessionStorage.removeItem(window.STORAGE_KEY); } catch(e){}\r\n\r\n  // 2ª pasada (después del pintado)\r\n  setTimeout(function(){\r\n    (window.FIELDS || []).forEach(function (f) { setVal(f, '', true); });\r\n    window.__res_noserie = null;\r\n    try { sessionStorage.removeItem(window.STORAGE_KEY); } catch(e){}\r\n    setTimeout(function(){ window.__recovering = false; }, 150);\r\n  }, 220);\r\n}\r\n\r\n// loop de refuerzo por si PHPRunner hidrata tarde\r\nfunction startForceClearLoop(ms) {\r\n  var end = Date.now() + (ms || 1000);\r\n  (function loop(){\r\n    if (Date.now() > end) return;\r\n    (window.FIELDS || []).forEach(function (f) { setVal(f, '', false); });\r\n    setTimeout(loop, 120);\r\n  })();\r\n}\r\n\r\n// ====================== AUTOSAVE ======================\r\nfunction buildDraft() {\r\n  var d = {};\r\n  for (var i=0;i<window.FIELDS.length;i++){\r\n    var f = window.FIELDS[i];\r\n    var v = readVal(f);\r\n    if (v !== null && v !== undefined && v !== '') d[f] = v;\r\n  }\r\n  d.timestamp = Date.now();\r\n  return d;\r\n}\r\nfunction saveDraftNow() {\r\n  try { sessionStorage.setItem(window.STORAGE_KEY, JSON.stringify(buildDraft())); } catch(e){}\r\n}\r\nfunction makeDebounce(fn, ms){\r\n  var timeoutId = 0;\r\n  return function(){\r\n    var ctx = this, args = arguments;\r\n    if (timeoutId) { try { window.clearTimeout(timeoutId); } catch(e){} }\r\n    timeoutId = window.setTimeout(function(){\r\n      timeoutId = 0;\r\n      try { fn.apply(ctx, args); } catch(e){}\r\n    }, ms || 200);\r\n  };\r\n}\r\nvar saveDraftDebounced = makeDebounce(saveDraftNow, 300);\r\n\r\n// ====================== Salida fiable ======================\r\nfunction safeReleaseAndClear() {\r\n  try {\r\n    if (window.__res_noserie) {\r\n      try {\r\n        navigator.sendBeacon(\r\n          window.ENDPOINT,\r\n          new URLSearchParams({ action:'release', noserie: window.__res_noserie })\r\n        );\r\n      } catch(e) {}\r\n      window.__res_noserie = null;\r\n    }\r\n    sessionStorage.removeItem(window.STORAGE_KEY);\r\n  } catch(e) {}\r\n}\r\n\r\n// BFCache: si vuelve de caché y NO hay borrador, limpia inputs\r\nwindow.addEventListener('pageshow', function (event) {\r\n  if (!event.persisted) return;\r\n  if (sessionStorage.getItem(window.STORAGE_KEY)) return;\r\n  (window.FIELDS || []).forEach(function (f) { setVal(f, '', true); });\r\n  window.__res_noserie = null;\r\n  window.__recovering = false;\r\n});\r\n\r\n// Salida → no limpiar si es submit (para conservar datos si falla)\r\nwindow.addEventListener('pagehide', function(){\r\n  if (!window.__submitting) safeReleaseAndClear();\r\n});\r\ndocument.addEventListener('visibilitychange', function(){\r\n  if (document.visibilityState === 'hidden' && !window.__submitting) {\r\n    safeReleaseAndClear();\r\n  }\r\n});\r\nwindow.addEventListener('beforeunload', function(){\r\n  saveDraftNow();\r\n  if (!window.__submitting && window.__res_noserie) {\r\n    try {\r\n      navigator.sendBeacon(\r\n        window.ENDPOINT,\r\n        new URLSearchParams({ action:'release', noserie: window.__res_noserie })\r\n      );\r\n    } catch(e) {}\r\n  }\r\n});\r\n\r\n// ====================== RESERVA POR PRODUCTO ======================\r\nfunction releasePrev() {\r\n  if (!window.__res_noserie) return;\r\n  $.post(window.ENDPOINT, { action:'release', noserie: window.__res_noserie }, function(){}, 'json');\r\n  window.__res_noserie = null;\r\n}\r\nfunction reserveForProduct(productId){\r\n  $.post(window.ENDPOINT, { action:'reserve_by_product', product_id: productId }, null, 'json')\r\n    .done(function(resp){\r\n      var r = (typeof resp === 'object') ? resp : (function(){ try{return JSON.parse(resp);}catch(e){return {};}})();\r\n      if (r && r.ok) {\r\n        setNoSerieValue(r.noserie);\r\n        window.__res_noserie = r.noserie;\r\n        saveDraftNow();\r\n      } else if (r && r.error === 'no-stock') {\r\n        alert('No hay series disponibles para este producto.');\r\n        setVal('idproducto','',true);\r\n        setNoSerieValue('');\r\n        releasePrev();\r\n        saveDraftNow();\r\n      } else {\r\n        alert('No se pudo reservar la serie. Intenta de nuevo.');\r\n        setNoSerieValue('');\r\n        saveDraftNow();\r\n      }\r\n    })\r\n    .fail(function(){\r\n      alert('Error de comunicación al reservar la serie.');\r\n      setNoSerieValue('');\r\n      saveDraftNow();\r\n    });\r\n}\r\n\r\n// ====================== INICIO DIFERIDO ======================\r\n\r\n// === HARD RESET tras guardado exitoso ===\r\n// Llama esto lo más pronto posible en tu onload (antes o al inicio del setTimeout)\r\n(function hardResetIfNeeded(){\r\n  // Se setea en BeforeProcessAdd o viene por ?clean=1\r\n  var clean = !!(window.CLEAN_ON_LOAD) || /[?&]clean=1(?:&|$)/i.test(location.search);\r\n  if (!clean) return;\r\n\r\n  // Evita que autosave vuelva a meter datos mientras limpiamos\r\n  window.__recovering = true;\r\n  window.SKIP_RECOVERY = true;\r\n  try { sessionStorage.removeItem(window.STORAGE_KEY); } catch(e){}\r\n\r\n  // 1) Reseteo nativo del <form> (limpia inputs HTML)\r\n  var $form = $('form').first();\r\n  if ($form.length && $form[0].reset) { try { $form[0].reset(); } catch(e){} }\r\n\r\n  // 2) Dos pasadas sobre Runner controls (después del montaje)\r\n  function clearAllOnce() {\r\n    (window.FIELDS || []).forEach(function(f){\r\n      // limpia Runner control si existe, si no, el input nativo\r\n      var c = (function(){ try { return Runner.getControl(currentPageId(), f); } catch(e){ return null; }})();\r\n      if (c && typeof c.setControlValue === 'function') {\r\n        try { c.setControlValue(''); if (c.fireEvent) c.fireEvent('change'); } catch(e){}\r\n      } else {\r\n        setVal(f, '', true);\r\n      }\r\n    });\r\n    window.__res_noserie = null;\r\n  }\r\n\r\n  // primera pasada rápida\r\n  clearAllOnce();\r\n\r\n  // segunda pasada con pequeño delay (evita rehidratación tardía)\r\n  setTimeout(clearAllOnce, 220);\r\n\r\n  // 3) loop de refuerzo por ~1 segundo\r\n  var tEnd = Date.now() + 1000;\r\n  (function loop(){\r\n    if (Date.now() > tEnd) {\r\n      // reactivamos autosave\r\n      setTimeout(function(){ window.__recovering = false; }, 120);\r\n      return;\r\n    }\r\n    clearAllOnce();\r\n    setTimeout(loop, 120);\r\n  })();\r\n})();\r\n\r\n\r\n\r\n\r\nsetTimeout(function(){\r\n  var pid      = currentPageId();\r\n  var ctrlProd = getCtrl('idproducto');\r\n  if (!ctrlProd) return;\r\n\r\n  // 0) MARCAR SUBMIT UNIVERSAL\r\n  $(document).on('submit', 'form', function(){\r\n    window.__submitting = true;\r\n    saveDraftNow();\r\n  });\r\n  var SAVE_SELECTOR = \"[data-itemtype='edit_save'] a, [data-itemid='edit_save'] a, a#saveButton1, button#saveButton1\";\r\n  $(document).on('click', SAVE_SELECTOR, function(){\r\n    window.__submitting = true;\r\n    saveDraftNow();\r\n  });\r\n\r\n  // 🚀 MODO LIMPIEZA: si hay éxito, si CLEAN_ON_LOAD=true (inyectado en PHP), o si SKIP_RECOVERY y NO hay error\r\n  window.CLEAN_ON_LOAD = window.CLEAN_ON_LOAD || (getQS('clean') === '1');\r\n  var cleanMode = hasSuccessOrClean() || !!window.CLEAN_ON_LOAD || (window.SKIP_RECOVERY && !hasErrorMessage());\r\n\r\n  if (cleanMode) {\r\n    try { sessionStorage.removeItem(window.STORAGE_KEY); } catch(e){}\r\n    window.SKIP_RECOVERY = true;\r\n    resetAllFieldsUI();\r\n    startForceClearLoop(1000); // refuerzo ~1s\r\n  } else {\r\n    // 1) RECUPERACIÓN DESDE sessionStorage (si hay, no caducó y no hay error)\r\n    var draftJson = sessionStorage.getItem(window.STORAGE_KEY);\r\n    if (draftJson && !window.SKIP_RECOVERY && !hasErrorMessage()) {\r\n      try {\r\n        var draft = JSON.parse(draftJson) || {};\r\n        var now   = Date.now();\r\n        if (draft.timestamp && (now - draft.timestamp > MAX_DRAFT_AGE_MS)) {\r\n          sessionStorage.removeItem(window.STORAGE_KEY);\r\n        } else {\r\n          window.__recovering = true;\r\n          if (draft.idproducto != null && draft.idproducto !== '') {\r\n            setVal('idproducto', draft.idproducto, true);\r\n          }\r\n          Object.keys(draft).forEach(function(k){\r\n            if (k === 'timestamp' || k === 'idproducto') return;\r\n            setVal(k, draft[k], false);\r\n          });\r\n          if (draft.noserie) window.__res_noserie = draft.noserie;\r\n          sessionStorage.removeItem(window.STORAGE_KEY);\r\n          setTimeout(function(){ window.__recovering = false; }, 150);\r\n        }\r\n      } catch(e){\r\n        console.error('Borrador inválido en sessionStorage:', e);\r\n        sessionStorage.removeItem(window.STORAGE_KEY);\r\n      }\r\n    } else if (window.SKIP_RECOVERY) {\r\n      sessionStorage.removeItem(window.STORAGE_KEY);\r\n    }\r\n  }\r\n\r\n  // 2) CAMBIO DE PRODUCTO → RESERVA\r\n  ctrlProd.on('change', function(){\r\n    var productId = ctrlProd.getValue();\r\n    if (!productId) return;\r\n    if (window.__recovering) return;\r\n\r\n    var prevSerie = readVal('noserie');\r\n    if (prevSerie && window.__res_noserie === prevSerie) {\r\n      $.post(window.ENDPOINT, { action:'release', noserie: window.__res_noserie }, function(){}, 'json');\r\n      window.__res_noserie = null;\r\n    } else {\r\n      releasePrev();\r\n    }\r\n    setNoSerieValue('');\r\n    reserveForProduct(productId);\r\n  });\r\n\r\n  // 3) AUTOGUARDADO (timer + por cambios)\r\n  setInterval(function(){ if (!window.__recovering) saveDraftNow(); }, 5000);\r\n\r\n  var selDeleg = window.FIELDS.map(function(f){\r\n    return 'div.r-integrated-field[data-field=\"'+f+'\"][data-pageid=\"'+pid+'\"] input, '+\r\n           'div.r-integrated-field[data-field=\"'+f+'\"][data-pageid=\"'+pid+'\"] select, '+\r\n           'div.r-integrated-field[data-field=\"'+f+'\"][data-pageid=\"'+pid+'\"] textarea';\r\n  }).join(', ');\r\n  $(document).on('change input', selDeleg, makeDebounce(saveDraftNow, 300));\r\n\r\n  // 4) SALIR (cualquier step)\r\n  (function(){\r\n    var BACK_SELECTOR = [\r\n      '#backButton1',\r\n      '#backButton2',\r\n      \"[data-itemtype='edit_back_list'] a\",\r\n      \"[data-itemid='edit_back_list'] a\",\r\n      \"[data-itemtype='edit_close'] a\",\r\n      \"[data-itemid='edit_close'] a\",\r\n      \"a[href$='solicitudes_list.php']\",\r\n      \"a[href*='solicitudes_list.php?']\"\r\n    ].join(', ');\r\n    $(document).on('mousedown click', BACK_SELECTOR, function(){\r\n      window.__submitting = false;\r\n      safeReleaseAndClear();\r\n    });\r\n  })();\r\n\r\n}, 500);\r\n"
		},
		{
			"eventId": "EVENT_AFTERADD",
			"pageType": "add",
			"code": "\n$_SESSION['solicitudes_clean_draft'] = 1;    // bandera de éxito (por si falla el querystring)\n$nonce = time();                              // anti-cache sencillo\n\n\n// AfterRecordAdded\nheader(\"Location: solicitudes_add.php?new=1&clean=1&_n=\".time());\nexit;\n"
		}
	],
	"dbTableInfo": {
		"type": 0,
		"foreignKeys": [],
		"fields": [
			{
				"name": "idsolicitud",
				"type": 20,
				"size": 20,
				"scale": 0,
				"typeName": "bigint(20)",
				"nullable": false,
				"autoinc": true,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtipoventa",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": false,
				"autoinc": false,
				"defaultValueSQL": "0",
				"defaultValue": "0"
			},
			{
				"name": "fecha",
				"type": 7,
				"size": 0,
				"scale": 0,
				"typeName": "date",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fechacaptura",
				"type": 135,
				"size": 0,
				"scale": 0,
				"typeName": "datetime",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": "current_timestamp()",
				"defaultValue": "CURRENT_TIMESTAMP"
			},
			{
				"name": "idcliente",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idproducto",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idplan",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "usuario",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtienda",
				"type": 3,
				"size": 3,
				"scale": 0,
				"typeName": "int(3)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fechamodif",
				"type": 135,
				"size": 0,
				"scale": 0,
				"typeName": "datetime",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": "current_timestamp()",
				"defaultValue": "CURRENT_TIMESTAMP"
			},
			{
				"name": "orden",
				"type": 200,
				"size": 11,
				"scale": 0,
				"typeName": "varchar(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "solicitudimg",
				"type": 201,
				"size": 0,
				"scale": 0,
				"typeName": "mediumtext",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "estatus",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idsolrazon",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "importeatt",
				"type": 5,
				"size": 0,
				"scale": 0,
				"typeName": "float",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "importesms",
				"type": 5,
				"size": 0,
				"scale": 0,
				"typeName": "float",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "plazo",
				"type": 2,
				"size": 6,
				"scale": 0,
				"typeName": "smallint(6)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "observaciones",
				"type": 200,
				"size": 200,
				"scale": 0,
				"typeName": "varchar(200)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "equipoincluido",
				"type": 16,
				"size": 1,
				"scale": 0,
				"typeName": "tinyint(1)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "rfc",
				"type": 200,
				"size": 20,
				"scale": 0,
				"typeName": "varchar(20)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idtratamiento",
				"type": 3,
				"size": 2,
				"scale": 0,
				"typeName": "int(2)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "riesgo",
				"type": 200,
				"size": 1,
				"scale": 0,
				"typeName": "char(1)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "observacionest",
				"type": 200,
				"size": 200,
				"scale": 0,
				"typeName": "varchar(200)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idcli",
				"type": 200,
				"size": 9,
				"scale": 0,
				"typeName": "varchar(9)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "fecha1avta",
				"type": 7,
				"size": 0,
				"scale": 0,
				"typeName": "date",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idplan1avta",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "dn1avta",
				"type": 200,
				"size": 10,
				"scale": 0,
				"typeName": "varchar(10)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idproceso",
				"type": 16,
				"size": 2,
				"scale": 0,
				"typeName": "tinyint(2)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "idorigenventa",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			},
			{
				"name": "estatusentrega",
				"type": 3,
				"size": 11,
				"scale": 0,
				"typeName": "int(11)",
				"nullable": true,
				"autoinc": false,
				"defaultValueSQL": null,
				"defaultValue": ""
			}
		],
		"primaryKeys": [
			"idsolicitud"
		],
		"uniqueFields": [],
		"name": "solicitudes"
	},
	"pages": [
		{
			"id": "add",
			"type": "add",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "add-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add_message"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"step_nav"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "add-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"next_step",
								"add_save",
								"add_reset",
								"add_back_list",
								"add_cancel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "add-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3",
									"rowspan": 1
								},
								{
									"cell": "c",
									"rowspan": 1
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"section"
							],
							"border": [
								{
									"side": "",
									"width": "0"
								}
							],
							"padding": {
								"right": "10px"
							}
						},
						"c": {
							"model": "c3",
							"items": [
								"section1"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field3",
								"integrated_edit_field4",
								"integrated_edit_field5",
								"integrated_edit_field1",
								"integrated_edit_field6",
								"integrated_edit_field9"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section1": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field20",
								"integrated_edit_field2",
								"integrated_edit_field7",
								"integrated_edit_field8",
								"integrated_edit_field19"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"step2": {
					"modelId": "simple-edit",
					"grid": [
						{
							"section": "",
							"cells": [
								{
									"cell": "c",
									"colspan": 2
								}
							]
						},
						{
							"section": "",
							"cells": [
								{
									"cell": "c2"
								},
								{
									"cell": "c4"
								}
							]
						}
					],
					"cells": {
						"c": {
							"model": "c1",
							"items": [],
							"align": "center"
						},
						"c2": {
							"model": "c1",
							"items": [
								"integrated_edit_field12",
								"integrated_edit_field16",
								"integrated_edit_field13",
								"integrated_edit_field14",
								"integrated_edit_field15"
							]
						},
						"c4": {
							"model": "c1",
							"items": [
								"integrated_edit_field11",
								"integrated_edit_field10",
								"integrated_edit_field17",
								"integrated_edit_field18"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"add_header": {
					"type": "add_header"
				},
				"add_back_list": {
					"type": "add_back_list"
				},
				"add_cancel": {
					"type": "add_cancel"
				},
				"add_message": {
					"type": "add_message"
				},
				"add_save": {
					"type": "add_save"
				},
				"add_reset": {
					"type": "add_reset"
				},
				"integrated_edit_field3": {
					"field": "idcliente",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idcliente",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field": {
					"field": "idproducto",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idproducto",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field2": {
					"field": "idplan",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idplan",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field1": {
					"field": "nombre",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 5
					},
					"label": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 3
					}
				},
				"integrated_edit_field4": {
					"field": "paterno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "paterno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field5": {
					"field": "materno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "materno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field6": {
					"field": "rfc",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field7": {
					"field": "orden",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "orden",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field8": {
					"field": "plazo",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "plazo",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field9": {
					"field": "idcli",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"section": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos del cliente"
					},
					"location": "section",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#a0dcf5",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"section1": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de la solicitud"
					},
					"location": "section1",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#72d6f9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field10": {
					"field": "estado",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field11": {
					"field": "ciudad",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field12": {
					"field": "cp",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field13": {
					"field": "calle",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field14": {
					"field": "numeroext",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field15": {
					"field": "numeroint",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field16": {
					"field": "colonia",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"next_step": {
					"type": "next_step"
				},
				"step_nav": {
					"type": "step_nav"
				},
				"integrated_edit_field17": {
					"field": "lat",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field18": {
					"field": "lng",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field19": {
					"field": "noserie",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field20": {
					"field": "idtipoventa",
					"type": "integrated_edit_field",
					"orientation": 0
				}
			},
			"dbProps": {},
			"steps": [
				{
					"location": "grid",
					"label": {
						"text": "Datos iniciales",
						"type": 0
					}
				},
				{
					"location": "step2",
					"label": {
						"text": "Datos de la Entrega",
						"type": 0
					}
				}
			],
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"customHtml": "<!doctype html>\n<html  {$html_attrs}>\n\t<head>\n\t\t\t\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>{$pagetitle}</title>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<base href=\"{$projectPath}\">\n\t\t{BEGIN styleCSSFiles}\n<link REL=\"stylesheet\" href=\"{$stylepath}\" type=\"text/css\">\n\n{END styleCSSFiles}\n\t\t\t\n\t</head>\n\n\t<body class=\"{$stylename} function-add\" >\n\t{BEGIN body}\n\t\t{$header}\n\t\t<style>\n\t\t\t{$containerCss}\n\t\t</style>\n\t\t{$locking}\n\t\t<div class=\"r-small-page\" \n\t\t\tdata-body-align=\"center\"\n\t\t\tdata-body-width=\"standard\"\n\t\t>\n\t\t\t\t\t\t\t{BEGIN top_block}\n<div class=\"r-form\" data-location=\"top\" id=\"form_top_{$pageid}\" data-makeup=\"small\" {$form_top} data-pageid=\"{$pageid}\"\n\t\tdata-v-width=\"4\"\n\tdata-v-margin=\"0\"\n\t\n>\t\t\n\t \n\t\t<div class=\"row\">\n\t\t\t \n\t\t\t\t<div \n\tdata-cellId=\"top_c1\" data-pageid=\"{$pageid}\"\t{$cell_top_c1}\n\tclass=\" r-ori-vert\t\t\tcol-md-12\n\t\">\n\t \n\t\t<h2 data-itemtype=\"add_header\" data-itemid=\"add_header\" {$item_add_header} data-pageid=\"{$pageid}\" >{$pagetitlelabel solicitudes add}</h2>\n\t</div>\t\t\t\t\t</div>\n\t</div>\t\t\n{END top_block}\n\t\t\t\t\t\t\t\t\t{BEGIN above-grid_block}\n<div class=\"r-form\" data-location=\"above-grid\" id=\"form_above-grid_{$pageid}\" data-makeup=\"small\" {$form_above-grid} data-pageid=\"{$pageid}\"\n\t\tdata-v-width=\"4\"\n\tdata-v-margin=\"0\"\n\t\n>\t\t\n\t \n\t\t<div class=\"row\">\n\t\t\t \n\t\t\t\t<div \n\tdata-cellId=\"above-grid_c1\" data-pageid=\"{$pageid}\"\t{$cell_above-grid_c1}\n\tclass=\" r-ori-vert\t\t\tcol-md-12\n\t\">\n\t \n\t\t{BEGIN message_block}\n<div data-itemtype=\"add_message\" data-itemid=\"add_message\" {$item_add_message} data-pageid=\"{$pageid}\" class=\"alert {$message_class}\" role=\"alert\">\n<h5>{$message}</h5>\n<div>\n{BEGIN message_back_button}\n\t\t\n\t<button class=\"btn btn-sm btn-default\" {$backbutton_attrs}>{mlang_message BACK_TO_LIST}</button>\n\t{END message_back_button}\n{BEGIN view_page_button}\n\t<button class=\"btn btn-sm btn-default\" {$view_page_button_attrs}>{mlang_message VIEW}</button>\n{END view_page_button}\n{BEGIN edit_page_button}\n\t<button class=\"btn btn-sm btn-default\" {$edit_page_button_attrs}>{mlang_message EDIT}</button>\n{END edit_page_button}\n</div>\n</div>\n{END message_block}\t</div>\t\t\t\t\t</div>\n\t \n\t\t<div class=\"row\">\n\t\t\t \n\t\t\t\t<div \n\tdata-cellId=\"above-grid_c2\" data-pageid=\"{$pageid}\"\t{$cell_above-grid_c2}\n\tclass=\" r-ori-vert\t\t\tcol-md-12\n\t\">\n\t \n\t\t<ul class=\"nav nav-pills nav-justified\" id=\"stepnav{$id}\"  data-stepcontrol data-itemtype=\"step_nav\" data-itemid=\"step_nav\" {$item_step_nav} data-pageid=\"{$pageid}\">\n\t\t\t<li role=\"presentation\" data-step=\"0\">\n\t\t\t<a href=\"#\">Datos iniciales</a>\n\t\t</li>\n\t\t\t<li role=\"presentation\" data-step=\"1\">\n\t\t\t<a href=\"#\">Datos de la Entrega</a>\n\t\t</li>\n\t</ul>\t</div>\t\t\t\t\t</div>\n\t</div>\t\t\n{END above-grid_block}\n\t\t\t\t\t\t\t\t\t{BEGIN steps_block}\n\t\t\t<div id=\"step_0_{$id}\" class=\"stepFrame\" data-step=\"0\" >\n\t\t{BEGIN grid_block}\n\n\n\n\n \n\t \n\t\t\t\t\t\t\t\t\t\t\t\t<table \n\tdata-body-align=\"center\"\n\tdata-location=\"grid\" id=\"form_grid_{$pageid}\" data-makeup=\"small\" {$form_grid} data-pageid=\"{$pageid}\" \n\tclass=\"r-edit-form\" cellpadding=\"0\" cellspacing=\"0\" \n\t{$grid_hiddenattr} \n\t\tdata-form-width=\"2\"\n\t\t\n\t\tdata-v-width=\"4\"\n\t>\n\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr {$row_grid_0} >\n\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_grid_c3}\n<td\n\t{$cell_grid_c3}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\tdata-single\n\t\t\t\n\t\t\tdata-cellId=\"grid_c3\" data-pageid=\"{$pageid}\" data-page=\"solicitudes_add\"\n\t\tdata-v-cell=\"2\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t \n\t<div class=\"panel panel-default form-section\" data-itemtype=\"section\" data-itemid=\"section\" {$item_section} data-pageid=\"{$pageid}\" data-page=\"solicitudes_add\">\n\t\t<div class=\"panel-heading\" role=\"tab\" {$section_section1_headattrs} \n\t\t\tdata-toggle=\"collapse\"  \n\n\t\t\t\thref=\"#section1{$pageid}\" aria-expanded=\"true\" aria-controls=\"section1\"\n\n\t\t>\n\t\t  <h4 class=\"panel-title\">\n\t\t  \t\t\t\t<a role=\"button\" >\n\t\t\t\tDatos del cliente\t\t\t</a>\n\t\t\t\t\t  </h4>\n\t\t</div>\n\t\t<div  class=\"panel-collapse collapse in {$section_section1_xtrclass}\" role=\"tabpanel\"  {$section_section1_attrs}\n\n\t\t\t\tid=\"section1{$pageid}\" \n\t\t>\n\t\t  <div class=\"panel-body\">\n\t\t\t{BEGIN section_block}\n\n\n\n\n \n\t \n\t\t\t\t\t\t\t\t\t\t\t\t<table \n\tdata-body-align=\"center\"\n\tdata-location=\"section\" id=\"form_section_{$pageid}\" data-makeup=\"small\" {$form_section} data-pageid=\"{$pageid}\" \n\tclass=\"r-edit-form\" cellpadding=\"0\" cellspacing=\"0\" \n\t{$grid_hiddenattr} \n\t\tdata-form-width=\"1\"\n\t\t\n\t\tdata-v-width=\"4\"\n\t>\n\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr {$row_section_0} >\n\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_section_c1}\n<td\n\t{$cell_section_c1}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\t\n\t\t\tdata-cellId=\"section_c1\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"4\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t\n{BEGIN idcliente_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_idcliente}  r-vertical-field\" \n\tdata-signal-error-for=\"idcliente{$id}\" {$required_attr_idcliente}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field3\" {$item_integrated_edit_field3} data-pageid=\"{$pageid}\" data-field=\"idcliente\" data-fieldname=\"idcliente\" >\n\n\t<label class=\"r-edit-label control-label {$idcliente_label_class}\" for=\"{$labelfor_idcliente}\">\n\t\t{BEGIN idcliente_label}\n\t\t\t{$idcliente_forward_control}\n\t\t\t{$label solicitudes idcliente }\t\t\t{END idcliente_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$idcliente_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"idcliente\" {$tooltipAttr solicitudes idcliente } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes idcliente }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END idcliente_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN paterno_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_paterno}  r-vertical-field\" \n\tdata-signal-error-for=\"paterno{$id}\" {$required_attr_paterno}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field4\" {$item_integrated_edit_field4} data-pageid=\"{$pageid}\" data-field=\"paterno\" data-fieldname=\"paterno\" >\n\n\t<label class=\"r-edit-label control-label {$paterno_label_class}\" for=\"{$labelfor_paterno}\">\n\t\t{BEGIN paterno_label}\n\t\t\t{$paterno_forward_control}\n\t\t\t{$label solicitudes paterno }\t\t\t{END paterno_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$paterno_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"paterno\" {$tooltipAttr solicitudes paterno } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes paterno }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END paterno_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN materno_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_materno}  r-vertical-field\" \n\tdata-signal-error-for=\"materno{$id}\" {$required_attr_materno}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field5\" {$item_integrated_edit_field5} data-pageid=\"{$pageid}\" data-field=\"materno\" data-fieldname=\"materno\" >\n\n\t<label class=\"r-edit-label control-label {$materno_label_class}\" for=\"{$labelfor_materno}\">\n\t\t{BEGIN materno_label}\n\t\t\t{$materno_forward_control}\n\t\t\t{$label solicitudes materno }\t\t\t{END materno_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$materno_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"materno\" {$tooltipAttr solicitudes materno } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes materno }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END materno_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN nombre_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_nombre}  r-vertical-field\" \n\tdata-signal-error-for=\"nombre{$id}\" {$required_attr_nombre}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field1\" {$item_integrated_edit_field1} data-pageid=\"{$pageid}\" data-field=\"nombre\" data-fieldname=\"nombre\" >\n\n\t<label class=\"r-edit-label control-label {$nombre_label_class}\" for=\"{$labelfor_nombre}\">\n\t\t{BEGIN nombre_label}\n\t\t\t{$nombre_forward_control}\n\t\t\t{$label solicitudes nombre }\t\t\t{END nombre_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$nombre_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"nombre\" {$tooltipAttr solicitudes nombre } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes nombre }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END nombre_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN rfc_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_rfc}  r-vertical-field\" \n\tdata-signal-error-for=\"rfc{$id}\" {$required_attr_rfc}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field6\" {$item_integrated_edit_field6} data-pageid=\"{$pageid}\" data-field=\"rfc\" data-fieldname=\"rfc\" >\n\n\t<label class=\"r-edit-label control-label {$rfc_label_class}\" for=\"{$labelfor_rfc}\">\n\t\t{BEGIN rfc_label}\n\t\t\t{$rfc_forward_control}\n\t\t\t{$label solicitudes rfc }\t\t\t{END rfc_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$rfc_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"rfc\" {$tooltipAttr solicitudes rfc } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes rfc }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END rfc_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN idcli_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_idcli}  r-vertical-field\" \n\tdata-signal-error-for=\"idcli{$id}\" {$required_attr_idcli}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field9\" {$item_integrated_edit_field9} data-pageid=\"{$pageid}\" data-field=\"idcli\" data-fieldname=\"idcli\" >\n\n\t<label class=\"r-edit-label control-label {$idcli_label_class}\" for=\"{$labelfor_idcli}\">\n\t\t{BEGIN idcli_label}\n\t\t\t{$idcli_forward_control}\n\t\t\t{$label solicitudes idcli }\t\t\t{END idcli_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$idcli_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"idcli\" {$tooltipAttr solicitudes idcli } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes idcli }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END idcli_fieldblock}\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_section_c1}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t</tbody></table>\n{END section_block}\n\t\t  </div>\n\t\t</div>\n\t</div>\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_grid_c3}\n\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_grid_c}\n<td\n\t{$cell_grid_c}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\tdata-single\n\t\t\t\n\t\t\tdata-cellId=\"grid_c\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"2\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t \n\t<div class=\"panel panel-default form-section\" data-itemtype=\"section\" data-itemid=\"section1\" {$item_section1} data-pageid=\"{$pageid}\" data-page=\"solicitudes_add\">\n\t\t<div class=\"panel-heading\" role=\"tab\" {$section_section2_headattrs} \n\t\t\tdata-toggle=\"collapse\"  \n\n\t\t\t\thref=\"#section2{$pageid}\" aria-expanded=\"true\" aria-controls=\"section2\"\n\n\t\t>\n\t\t  <h4 class=\"panel-title\">\n\t\t  \t\t\t\t<a role=\"button\" >\n\t\t\t\tDatos de la solicitud\t\t\t</a>\n\t\t\t\t\t  </h4>\n\t\t</div>\n\t\t<div  class=\"panel-collapse collapse in {$section_section2_xtrclass}\" role=\"tabpanel\"  {$section_section2_attrs}\n\n\t\t\t\tid=\"section2{$pageid}\" \n\t\t>\n\t\t  <div class=\"panel-body\">\n\t\t\t{BEGIN section1_block}\n\n\n\n\n \n\t \n\t\t\t\t\t\t\t\t\t\t\t\t<table \n\tdata-body-align=\"center\"\n\tdata-location=\"section1\" id=\"form_section1_{$pageid}\" data-makeup=\"small\" {$form_section1} data-pageid=\"{$pageid}\" \n\tclass=\"r-edit-form\" cellpadding=\"0\" cellspacing=\"0\" \n\t{$grid_hiddenattr} \n\t\tdata-form-width=\"1\"\n\t\t\n\t\tdata-v-width=\"4\"\n\t>\n\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr {$row_section1_0} >\n\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_section1_c1}\n<td\n\t{$cell_section1_c1}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\t\n\t\t\tdata-cellId=\"section1_c1\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"4\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t\n{BEGIN idproducto_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_idproducto}  r-vertical-field\" \n\tdata-signal-error-for=\"idproducto{$id}\" {$required_attr_idproducto}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field\" {$item_integrated_edit_field} data-pageid=\"{$pageid}\" data-field=\"idproducto\" data-fieldname=\"idproducto\" >\n\n\t<label class=\"r-edit-label control-label {$idproducto_label_class}\" for=\"{$labelfor_idproducto}\">\n\t\t{BEGIN idproducto_label}\n\t\t\t{$idproducto_forward_control}\n\t\t\t{$label solicitudes idproducto }\t\t\t{END idproducto_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$idproducto_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"idproducto\" {$tooltipAttr solicitudes idproducto } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes idproducto }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END idproducto_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN idtipoventa_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_idtipoventa}  r-vertical-field\" \n\tdata-signal-error-for=\"idtipoventa{$id}\" {$required_attr_idtipoventa}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field20\" {$item_integrated_edit_field20} data-pageid=\"{$pageid}\" data-field=\"idtipoventa\" data-fieldname=\"idtipoventa\" >\n\n\t<label class=\"r-edit-label control-label {$idtipoventa_label_class}\" for=\"{$labelfor_idtipoventa}\">\n\t\t{BEGIN idtipoventa_label}\n\t\t\t{$idtipoventa_forward_control}\n\t\t\t{$label solicitudes idtipoventa }\t\t\t{END idtipoventa_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$idtipoventa_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"idtipoventa\" {$tooltipAttr solicitudes idtipoventa } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes idtipoventa }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END idtipoventa_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN idplan_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_idplan}  r-vertical-field\" \n\tdata-signal-error-for=\"idplan{$id}\" {$required_attr_idplan}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field2\" {$item_integrated_edit_field2} data-pageid=\"{$pageid}\" data-field=\"idplan\" data-fieldname=\"idplan\" >\n\n\t<label class=\"r-edit-label control-label {$idplan_label_class}\" for=\"{$labelfor_idplan}\">\n\t\t{BEGIN idplan_label}\n\t\t\t{$idplan_forward_control}\n\t\t\t{$label solicitudes idplan }\t\t\t{END idplan_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$idplan_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"idplan\" {$tooltipAttr solicitudes idplan } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes idplan }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END idplan_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN orden_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_orden}  r-vertical-field\" \n\tdata-signal-error-for=\"orden{$id}\" {$required_attr_orden}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field7\" {$item_integrated_edit_field7} data-pageid=\"{$pageid}\" data-field=\"orden\" data-fieldname=\"orden\" >\n\n\t<label class=\"r-edit-label control-label {$orden_label_class}\" for=\"{$labelfor_orden}\">\n\t\t{BEGIN orden_label}\n\t\t\t{$orden_forward_control}\n\t\t\t{$label solicitudes orden }\t\t\t{END orden_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$orden_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"orden\" {$tooltipAttr solicitudes orden } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes orden }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END orden_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN plazo_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_plazo}  r-vertical-field\" \n\tdata-signal-error-for=\"plazo{$id}\" {$required_attr_plazo}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field8\" {$item_integrated_edit_field8} data-pageid=\"{$pageid}\" data-field=\"plazo\" data-fieldname=\"plazo\" >\n\n\t<label class=\"r-edit-label control-label {$plazo_label_class}\" for=\"{$labelfor_plazo}\">\n\t\t{BEGIN plazo_label}\n\t\t\t{$plazo_forward_control}\n\t\t\t{$label solicitudes plazo }\t\t\t{END plazo_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$plazo_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"plazo\" {$tooltipAttr solicitudes plazo } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes plazo }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END plazo_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN noserie_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_noserie}  r-vertical-field\" \n\tdata-signal-error-for=\"noserie{$id}\" {$required_attr_noserie}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field19\" {$item_integrated_edit_field19} data-pageid=\"{$pageid}\" data-field=\"noserie\" data-fieldname=\"noserie\" >\n\n\t<label class=\"r-edit-label control-label {$noserie_label_class}\" for=\"{$labelfor_noserie}\">\n\t\t{BEGIN noserie_label}\n\t\t\t{$noserie_forward_control}\n\t\t\t{$label solicitudes noserie }\t\t\t{END noserie_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$noserie_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"noserie\" {$tooltipAttr solicitudes noserie } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes noserie }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END noserie_fieldblock}\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_section1_c1}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t</tbody></table>\n{END section1_block}\n\t\t  </div>\n\t\t</div>\n\t</div>\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_grid_c}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t</tbody></table>\n{END grid_block}\n</div>\t\n\t\t\t\t<div id=\"step_1_{$id}\" class=\"stepFrame\" data-step=\"1\" style=\"display:none\">\n\t\t{BEGIN step2_block}\n\n\n\n\n \n\t \n\t\t\t\t\t\t\t\t\t\t\t\t<table \n\tdata-body-align=\"center\"\n\tdata-location=\"step2\" id=\"form_step2_{$pageid}\" data-makeup=\"small\" {$form_step2} data-pageid=\"{$pageid}\" \n\tclass=\"r-edit-form\" cellpadding=\"0\" cellspacing=\"0\" \n\t{$grid_hiddenattr} \n\t\tdata-form-width=\"2\"\n\t\t\n\t\tdata-v-width=\"4\"\n\t>\n\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr {$row_step2_0} >\n\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_step2_c}\n<td\n\t{$cell_step2_c}\n\tclass=\"r-align-center r-ori-vert\"\n\t\n\t\t\tdata-single\n\t\t\t\tdata-fullwidth\n\t\t\n\tocolspan=\"2\"\t\tdata-cellId=\"step2_c\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"2\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t<span data-itemtype=\"text\" data-itemid=\"text\" {$item_text} data-pageid=\"{$pageid}\" > \n\t<div id=\"map\" style=\"height: 400px; width: 100%; margin-bottom: 10px; border: 1px solid #ccc;\"></div>\n<p><strong>Haz clic en el mapa para obtener los datos de la ubicación (si algún campo no se acompleta automáticamente, favor de escribirlo)</strong></p>\n\n<!-- Cargar Leaflet CSS & JS -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\" />\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"></script>\n\n<script>\n// Variables globales\nlet map;\nlet marker;\nlet mapInitialized = false;\n\nfunction initMap() {\n    if (mapInitialized) {\n        setTimeout(() => map.invalidateSize(), 100);\n        return;\n    }\n    \n    const initialLocation = [21.0038, -89.6183];\n    map = L.map('map').setView(initialLocation, 12);\n    \n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    \n    mapInitialized = true;\n    \n    map.on('click', function(e) {\n        placeMarkerAndGeocode(e.latlng);\n    });\n    \n    setTimeout(() => map.invalidateSize(), 300);\n}\n\nfunction placeMarkerAndGeocode(latlng) {\n    if (marker) map.removeLayer(marker);\n    marker = L.marker(latlng).addTo(map);\n    map.setView(latlng, map.getZoom());\n    \n    var apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latlng.lat}&lon=${latlng.lng}&zoom=18&addressdetails=1`;\n    \n    fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.address) {\n                populateAddressFields(data.address, latlng, data.display_name);\n            } else {\n                alert('No se encontraron resultados para esta ubicación.');\n            }\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            alert('Falló la geocodificación.');\n        });\n}\n\n// 🔥 NUEVA FUNCIÓN: Extraer número de dirección\nfunction extractHouseNumber(fullAddress, roadName) {\n    if (!fullAddress || !roadName) return '';\n    \n    // Buscar patrones comunes de números\n    const patterns = [\n        /(?:No\\.|Num|#)\\s*(\\d+)/i,    // No. 366, Num 366, #366\n        /(\\d+)\\s*(?:#|No\\.|Num)/i,     // 366 #, 366 No.\n        /(\\d+)\\s*[-–]\\s*\\d+/i,         // 366-368\n        /(\\d+)[a-zA-Z]?$/i,            // 366, 366A\n        /^(\\d+)\\s+/i                   // 366 Calle 30\n    ];\n    \n    for (const pattern of patterns) {\n        const match = fullAddress.match(pattern);\n        if (match && match[1]) {\n            return match[1];\n        }\n    }\n    \n    // Si no se encuentra con patrones, intentar con el campo house_number de Nominatim\n    return '';\n}\n\nfunction populateAddressFields(address, latlng, fullAddress = '') {\n    // Extraer el número de casa\n    const houseNumber = address.house_number || extractHouseNumber(fullAddress, address.road);\n    \n    // Llenar los campos del formulario\n    document.getElementById('value_estado_1').value = address.state || '';\n    document.getElementById('value_ciudad_1').value = address.city || address.town || address.village || '';\n    document.getElementById('value_cp_1').value = address.postcode || '';\n    document.getElementById('value_colonia_1').value = address.suburb || address.neighbourhood || '';\n    document.getElementById('value_calle_1').value = address.road || '';\n    \n    // 🔥 NUEVO: Llenar el número exterior\n    document.getElementById('value_numeroext_1').value = houseNumber;\n    \n    document.getElementById('value_lat_1').value = latlng.lat;\n    document.getElementById('value_lng_1').value = latlng.lng;\n    \n    console.log('Datos completos de Nominatim:', address);\n    console.log('Dirección completa:', fullAddress);\n    console.log('Número extraído:', houseNumber);\n}\n\n// 🔥 OBSERVAR CUANDO EL TAB Y SECTION SE HACEN VISIBLES\nfunction checkMapContainer() {\n    const mapContainer = document.getElementById('map');\n    if (mapContainer.offsetParent !== null && mapContainer.offsetWidth > 0) {\n        initMap();\n        return true;\n    }\n    return false;\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const interval = setInterval(() => {\n        if (checkMapContainer()) {\n            clearInterval(interval);\n        }\n    }, 200);\n    \n    document.body.addEventListener('click', function(e) {\n        if (e.target.closest('[data-toggle=\"tab\"], .step-tab, .nav-link')) {\n            setTimeout(() => {\n                if (mapInitialized) map.invalidateSize();\n                else if (checkMapContainer()) console.log('Mapa inicializado desde click en tab');\n            }, 400);\n        }\n    });\n});\n\nwindow.addEventListener('resize', () => {\n    if (mapInitialized) setTimeout(() => map.invalidateSize(), 100);\n});\n\nconst observer = new MutationObserver(function(mutations) {\n    mutations.forEach(function(mutation) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n            setTimeout(() => {\n                if (mapInitialized) map.invalidateSize();\n            }, 200);\n        }\n    });\n});\n\nsetTimeout(() => {\n    const mapContainer = document.getElementById('map');\n    if (mapContainer) {\n        observer.observe(mapContainer, { attributes: true, attributeFilter: ['style'] });\n    }\n}, 1000);\n</script>\n\n\n\n\n\n\n<script>\n(function(){\n  // ====== HELPERS ======\n  const $id = (id) => document.getElementById(id);\n  const safeTrim = (v) => (v || '').toString().trim();\n\n  function buildAddressFromFields(){\n    const calle   = safeTrim($id('value_calle_1')?.value);\n    const numero  = safeTrim($id('value_numeroext_1')?.value);\n    const col     = safeTrim($id('value_colonia_1')?.value);\n    const ciudad  = safeTrim($id('value_ciudad_1')?.value);\n    const estado  = safeTrim($id('value_estado_1')?.value);\n    const cp      = safeTrim($id('value_cp_1')?.value);\n    const parts = [\n      numero && calle ? `${calle} ${numero}` : calle || '',\n      col, ciudad, estado, cp, 'México'\n    ].filter(Boolean);\n    return parts.join(', ');\n  }\n\n  function updateMarkerAndView(lat, lng, zoomIfNeeded = false){\n    if (!mapInitialized) initMap();\n    const latlng = L.latLng(lat, lng);\n    if (marker) { marker.setLatLng(latlng); }\n    else { marker = L.marker(latlng).addTo(map); }\n    if (zoomIfNeeded) map.setView(latlng, 17); else map.panTo(latlng);\n  }\n\n  function isValidLatLng(lat, lng){\n    const nlat = Number(lat), nlng = Number(lng);\n    return Number.isFinite(nlat) && Number.isFinite(nlng)\n      && nlat <= 90 && nlat >= -90 && nlng <= 180 && nlng >= -180;\n  }\n\n  function debounce(fn, ms){\n    let t; return function(...args){ clearTimeout(t); t = setTimeout(() => fn.apply(this, args), ms); };\n  }\n\n  async function geocodeAddressAndUpdate(){\n    const q = buildAddressFromFields();\n    if (!q) return;\n    const url = `https://nominatim.openstreetmap.org/search?format=json&addressdetails=1&limit=1&countrycodes=mx&q=${encodeURIComponent(q)}`;\n    try {\n      const resp = await fetch(url, { headers: { 'Accept': 'application/json' } });\n      const data = await resp.json();\n      if (Array.isArray(data) && data.length > 0){\n        const best = data[0];\n        const lat = parseFloat(best.lat), lon = parseFloat(best.lon);\n        if (isValidLatLng(lat, lon)){\n          if ($id('value_lat_1')) $id('value_lat_1').value = lat;\n          if ($id('value_lng_1')) $id('value_lng_1').value = lon;\n          updateMarkerAndView(lat, lon, true);\n        }\n      } else {\n        console.warn('No hubo resultados para:', q);\n      }\n    } catch (e) {\n      console.error('Error geocodificando:', e);\n    }\n  }\n\n  function attachFieldListeners(){\n    const onLatLngChange = debounce(() => {\n      const lat = safeTrim($id('value_lat_1')?.value);\n      const lng = safeTrim($id('value_lng_1')?.value);\n      if (isValidLatLng(lat, lng)) updateMarkerAndView(Number(lat), Number(lng), true);\n    }, 300);\n    ['value_lat_1','value_lng_1'].forEach(id => {\n      const el = $id(id); if (!el) return;\n      el.addEventListener('input', onLatLngChange);\n      el.addEventListener('blur',  onLatLngChange);\n    });\n\n    const onAddressChange = debounce(() => { geocodeAddressAndUpdate(); }, 600);\n    ['value_calle_1','value_numeroext_1','value_colonia_1','value_ciudad_1','value_estado_1','value_cp_1']\n      .forEach(id => {\n        const el = $id(id); if (!el) return;\n        el.addEventListener('input', onAddressChange);\n        el.addEventListener('blur',  onAddressChange);\n      });\n  }\n\n  document.addEventListener('DOMContentLoaded', () => {\n    attachFieldListeners();\n    const lat = safeTrim($id('value_lat_1')?.value);\n    const lng = safeTrim($id('value_lng_1')?.value);\n    if (isValidLatLng(lat, lng)){\n      updateMarkerAndView(Number(lat), Number(lng), true);\n    } else {\n      const anyAddress =\n        safeTrim($id('value_calle_1')?.value) ||\n        safeTrim($id('value_colonia_1')?.value) ||\n        safeTrim($id('value_ciudad_1')?.value) ||\n        safeTrim($id('value_estado_1')?.value) ||\n        safeTrim($id('value_cp_1')?.value);\n      if (anyAddress) geocodeAddressAndUpdate();\n    }\n  });\n})();\n</script>\n</span>\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_step2_c}\n\t\t\t\t\t\t\t\t</tr>\n\t \n\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr {$row_step2_1} >\n\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_step2_c2}\n<td\n\t{$cell_step2_c2}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\t\n\t\t\tdata-cellId=\"step2_c2\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t\n{BEGIN cp_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_cp}  r-vertical-field\" \n\tdata-signal-error-for=\"cp{$id}\" {$required_attr_cp}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field12\" {$item_integrated_edit_field12} data-pageid=\"{$pageid}\" data-field=\"cp\" data-fieldname=\"cp\" >\n\n\t<label class=\"r-edit-label control-label {$cp_label_class}\" for=\"{$labelfor_cp}\">\n\t\t{BEGIN cp_label}\n\t\t\t{$cp_forward_control}\n\t\t\t{$label solicitudes cp }\t\t\t{END cp_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$cp_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"cp\" {$tooltipAttr solicitudes cp } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes cp }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END cp_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN colonia_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_colonia}  r-vertical-field\" \n\tdata-signal-error-for=\"colonia{$id}\" {$required_attr_colonia}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field16\" {$item_integrated_edit_field16} data-pageid=\"{$pageid}\" data-field=\"colonia\" data-fieldname=\"colonia\" >\n\n\t<label class=\"r-edit-label control-label {$colonia_label_class}\" for=\"{$labelfor_colonia}\">\n\t\t{BEGIN colonia_label}\n\t\t\t{$colonia_forward_control}\n\t\t\t{$label solicitudes colonia }\t\t\t{END colonia_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$colonia_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"colonia\" {$tooltipAttr solicitudes colonia } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes colonia }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END colonia_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN calle_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_calle}  r-vertical-field\" \n\tdata-signal-error-for=\"calle{$id}\" {$required_attr_calle}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field13\" {$item_integrated_edit_field13} data-pageid=\"{$pageid}\" data-field=\"calle\" data-fieldname=\"calle\" >\n\n\t<label class=\"r-edit-label control-label {$calle_label_class}\" for=\"{$labelfor_calle}\">\n\t\t{BEGIN calle_label}\n\t\t\t{$calle_forward_control}\n\t\t\t{$label solicitudes calle }\t\t\t{END calle_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$calle_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"calle\" {$tooltipAttr solicitudes calle } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes calle }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END calle_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN numeroext_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_numeroext}  r-vertical-field\" \n\tdata-signal-error-for=\"numeroext{$id}\" {$required_attr_numeroext}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field14\" {$item_integrated_edit_field14} data-pageid=\"{$pageid}\" data-field=\"numeroext\" data-fieldname=\"numeroext\" >\n\n\t<label class=\"r-edit-label control-label {$numeroext_label_class}\" for=\"{$labelfor_numeroext}\">\n\t\t{BEGIN numeroext_label}\n\t\t\t{$numeroext_forward_control}\n\t\t\t{$label solicitudes numeroext }\t\t\t{END numeroext_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$numeroext_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"numeroext\" {$tooltipAttr solicitudes numeroext } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes numeroext }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END numeroext_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN numeroint_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_numeroint}  r-vertical-field\" \n\tdata-signal-error-for=\"numeroint{$id}\" {$required_attr_numeroint}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field15\" {$item_integrated_edit_field15} data-pageid=\"{$pageid}\" data-field=\"numeroint\" data-fieldname=\"numeroint\" >\n\n\t<label class=\"r-edit-label control-label {$numeroint_label_class}\" for=\"{$labelfor_numeroint}\">\n\t\t{BEGIN numeroint_label}\n\t\t\t{$numeroint_forward_control}\n\t\t\t{$label solicitudes numeroint }\t\t\t{END numeroint_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$numeroint_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"numeroint\" {$tooltipAttr solicitudes numeroint } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes numeroint }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END numeroint_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN session_data_json_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_session_data_json}  r-vertical-field\" \n\tdata-signal-error-for=\"session_data_json{$id}\" {$required_attr_session_data_json}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field21\" {$item_integrated_edit_field21} data-pageid=\"{$pageid}\" data-page=\"solicitudes_add\" data-field=\"session_data_json\" data-fieldname=\"session_data_json\" >\n\n\t<label class=\"r-edit-label control-label {$session_data_json_label_class}\" for=\"{$labelfor_session_data_json}\">\n\t\t{BEGIN session_data_json_label}\n\t\t\t{$session_data_json_forward_control}\n\t\t\t{$label solicitudes session_data_json }\t\t\t{END session_data_json_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$session_data_json_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"session_data_json\" {$tooltipAttr solicitudes session_data_json } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes session_data_json }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END session_data_json_fieldblock}\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_step2_c2}\n\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n{BEGIN cellblock_step2_c4}\n<td\n\t{$cell_step2_c4}\n\tclass=\" r-ori-vert\"\n\t\n\t\t\t\n\t\t\tdata-cellId=\"step2_c4\" data-pageid=\"{$pageid}\"\n\t\tdata-v-cell=\"\"\n\t\t\n>\n\t<div edit-form-cell class=\"clearfix\">\n\t\t\t\t\n{BEGIN ciudad_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_ciudad}  r-vertical-field\" \n\tdata-signal-error-for=\"ciudad{$id}\" {$required_attr_ciudad}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field11\" {$item_integrated_edit_field11} data-pageid=\"{$pageid}\" data-field=\"ciudad\" data-fieldname=\"ciudad\" >\n\n\t<label class=\"r-edit-label control-label {$ciudad_label_class}\" for=\"{$labelfor_ciudad}\">\n\t\t{BEGIN ciudad_label}\n\t\t\t{$ciudad_forward_control}\n\t\t\t{$label solicitudes ciudad }\t\t\t{END ciudad_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$ciudad_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"ciudad\" {$tooltipAttr solicitudes ciudad } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes ciudad }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END ciudad_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN estado_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_estado}  r-vertical-field\" \n\tdata-signal-error-for=\"estado{$id}\" {$required_attr_estado}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field10\" {$item_integrated_edit_field10} data-pageid=\"{$pageid}\" data-field=\"estado\" data-fieldname=\"estado\" >\n\n\t<label class=\"r-edit-label control-label {$estado_label_class}\" for=\"{$labelfor_estado}\">\n\t\t{BEGIN estado_label}\n\t\t\t{$estado_forward_control}\n\t\t\t{$label solicitudes estado }\t\t\t{END estado_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$estado_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"estado\" {$tooltipAttr solicitudes estado } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes estado }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END estado_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN lat_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_lat}  r-vertical-field\" \n\tdata-signal-error-for=\"lat{$id}\" {$required_attr_lat}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field17\" {$item_integrated_edit_field17} data-pageid=\"{$pageid}\" data-field=\"lat\" data-fieldname=\"lat\" >\n\n\t<label class=\"r-edit-label control-label {$lat_label_class}\" for=\"{$labelfor_lat}\">\n\t\t{BEGIN lat_label}\n\t\t\t{$lat_forward_control}\n\t\t\t{$label solicitudes lat }\t\t\t{END lat_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$lat_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"lat\" {$tooltipAttr solicitudes lat } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes lat }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END lat_fieldblock}\n\t\t\t\t\t\t\t\t\t\t\t\n{BEGIN lng_fieldblock}\n\n\n<div class=\"r-integrated-field form-group clearfix {$fielddispclass_lng}  r-vertical-field\" \n\tdata-signal-error-for=\"lng{$id}\" {$required_attr_lng}\n\tdata-itemtype=\"integrated_edit_field\" data-itemid=\"integrated_edit_field18\" {$item_integrated_edit_field18} data-pageid=\"{$pageid}\" data-field=\"lng\" data-fieldname=\"lng\" >\n\n\t<label class=\"r-edit-label control-label {$lng_label_class}\" for=\"{$labelfor_lng}\">\n\t\t{BEGIN lng_label}\n\t\t\t{$lng_forward_control}\n\t\t\t{$label solicitudes lng }\t\t\t{END lng_label}\n\t\t<span class=\"icon-required\"></span>\n\t</label>\n\t<div class=\"r-edit-field\">\n\t\t{$lng_editcontrol}\t</div>\n\t\t<div class=\"r-edit-tooltip\" data-helpfor=\"lng\" {$tooltipAttr solicitudes lng } >\n\t\t<div class=\"text-muted\" >\n\t\t{$tooltip solicitudes lng }\t\t</div>\n\t</div>\n\t</div>\n\n\n{END lng_fieldblock}\n\t\n\t\t\t\t\t\t\t\t</td>\n\t\t\t{END cellblock_step2_c4}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t</tbody></table>\n{END step2_block}\n</div>\t\n\t{END steps_block}\t\t\t\t\t\t\t\t\t{BEGIN below-grid_block}\n<div class=\"r-form\" data-location=\"below-grid\" id=\"form_below-grid_{$pageid}\" data-makeup=\"small\" {$form_below-grid} data-pageid=\"{$pageid}\"\n\t\tdata-v-width=\"4\"\n\tdata-v-margin=\"0\"\n\t\n>\t\t\n\t \n\t\t<div class=\"row\">\n\t\t\t \n\t\t\t\t<div \n\tdata-cellId=\"below-grid_c1\" data-pageid=\"{$pageid}\"\t{$cell_below-grid_c1}\n\tclass=\"\t\t\tcol-md-12\n\t\">\n\t \n\t\t{BEGIN nextStepButton}\n<span data-itemtype=\"next_step\" data-itemid=\"next_step\" {$item_next_step} data-pageid=\"{$pageid}\" data-small data-button-item>\n\t<a type=\"button\" title=\"\" class=\"btn btn-primary   \n\t\" href=\"#\" id=\"nextstep{$id}\" >\n\t\t\t\t\t\t\t{mlang_message NEXT_STEP}\t\t\t</a>\n</span>\n{END nextStepButton}\n\t \n\t\t<span data-itemtype=\"add_save\" data-itemid=\"add_save\" {$item_add_save} data-pageid=\"{$pageid}\" data-small data-button-item>\n\t<a type=\"button\" title=\"\" class=\"btn btn-primary   \n\t\" {$savebutton_attrs} >\n\t\t\t\t\t\t\t{mlang_message SAVE}\t\t\t</a>\n</span>\n\t \n\t\t{BEGIN reset_button}\n<span data-itemtype=\"add_reset\" data-itemid=\"add_reset\" {$item_add_reset} data-pageid=\"{$pageid}\" data-small data-button-item>\n\t<a type=\"button\" title=\"\" class=\"btn btn-default   \n\t\" id=\"resetButton{$id}\" >\n\t\t\t\t\t\t\t{mlang_message RESET}\t\t\t</a>\n</span>\n{END reset_button}\n\t \n\t\t{BEGIN back_button}\n<span data-itemtype=\"add_back_list\" data-itemid=\"add_back_list\" {$item_add_back_list} data-pageid=\"{$pageid}\" data-small data-button-item>\n\t<a type=\"button\" title=\"\" class=\"btn btn-default   \n\t\" id=\"backButton{$id}\" >\n\t\t\t\t\t\t\t{mlang_message BACK_TO_LIST}\t\t\t</a>\n</span>\n{END back_button}\n\t \n\t\t{BEGIN cancel_button}\n<span data-itemtype=\"add_cancel\" data-itemid=\"add_cancel\" {$item_add_cancel} data-pageid=\"{$pageid}\" data-small data-button-item>\n\t<a type=\"button\" title=\"\" class=\"btn btn-default   \n\t\" id=\"cancelButton{$id}\" >\n\t\t\t\t\t\t\t{mlang_message CANCEL}\t\t\t</a>\n</span>\n{END cancel_button}\n\t</div>\t\t\t\t\t</div>\n\t</div>\t\t\n{END below-grid_block}\n\t\t\t</div>\n\t\t{$footer}\n\t{END body}\n\t</body>\n</html>\n",
			"title": {}
		},
		{
			"id": "export",
			"type": "export",
			"layoutId": "first",
			"disabled": false,
			"default": 0,
			"forms": {
				"supertop": {
					"modelId": "panel-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "export-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"export_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "export-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"export_field",
								"export_field1",
								"export_field2"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"footer": {
					"modelId": "export-footer",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						},
						"c2": {
							"model": "c2",
							"items": [
								"export_export",
								"export_cancel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"export_header": {
					"type": "export_header"
				},
				"export_export": {
					"type": "export_export"
				},
				"export_cancel": {
					"type": "export_cancel"
				},
				"export_field": {
					"field": "direccion",
					"type": "export_field"
				},
				"export_field1": {
					"field": "lat",
					"type": "export_field"
				},
				"export_field2": {
					"field": "lng",
					"type": "export_field"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {},
			"exportFormat": 2,
			"exportDelimiter": ",",
			"exportSelectDelimiter": false,
			"exportSelectFields": false
		},
		{
			"id": "import",
			"type": "import",
			"layoutId": "first",
			"disabled": true,
			"default": 0,
			"forms": {
				"supertop": {
					"modelId": "panel-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "import-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"import_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "import-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"import_header": {
					"type": "import_header"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "edit",
			"type": "edit",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 7,
			"forms": {
				"above-grid": {
					"modelId": "edit-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_message"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"step_nav"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "edit-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"next_step",
								"edit_save",
								"edit_back_list",
								"edit_close"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"hamburger"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "edit-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3",
									"rowspan": 1
								},
								{
									"cell": "c",
									"rowspan": 1
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"section",
								"integrated_edit_field19"
							],
							"border": [
								{
									"side": "",
									"width": "0"
								}
							],
							"padding": {
								"right": "10px"
							},
							"customCSS": "\n"
						},
						"c": {
							"model": "c3",
							"items": [
								"section1",
								"integrated_edit_field20"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field3",
								"integrated_edit_field4",
								"integrated_edit_field5",
								"integrated_edit_field1",
								"integrated_edit_field6",
								"integrated_edit_field9"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section1": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field2",
								"integrated_edit_field7",
								"integrated_edit_field8"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"step2": {
					"modelId": "simple-edit",
					"grid": [
						{
							"section": "",
							"cells": [
								{
									"cell": "c",
									"colspan": 2
								}
							]
						},
						{
							"section": "",
							"cells": [
								{
									"cell": "c2"
								},
								{
									"cell": "c4"
								}
							]
						},
						{
							"cells": [
								{
									"cell": "c3",
									"colspan": 2
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c": {
							"model": "c1",
							"items": [
								"text"
							],
							"align": "center"
						},
						"c2": {
							"model": "c1",
							"items": [
								"integrated_edit_field16",
								"integrated_edit_field13",
								"integrated_edit_field14",
								"integrated_edit_field15"
							]
						},
						"c4": {
							"model": "c1",
							"items": [
								"integrated_edit_field11",
								"integrated_edit_field10",
								"integrated_edit_field12",
								"integrated_edit_field17",
								"integrated_edit_field18"
							]
						},
						"c3": {
							"model": "c3",
							"items": []
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"edit_header": {
					"type": "edit_header"
				},
				"hamburger": {
					"type": "hamburger",
					"items": [
						"edit_reset",
						"edit_view"
					]
				},
				"edit_reset": {
					"type": "edit_reset"
				},
				"edit_message": {
					"type": "edit_message"
				},
				"edit_save": {
					"type": "edit_save"
				},
				"edit_back_list": {
					"type": "edit_back_list"
				},
				"edit_close": {
					"type": "edit_close"
				},
				"edit_view": {
					"type": "edit_view"
				},
				"section": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos del cliente"
					},
					"location": "section",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#a0dcf5",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field3": {
					"field": "idcliente",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idcliente",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field4": {
					"field": "paterno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "paterno",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field5": {
					"field": "materno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "materno",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field1": {
					"field": "nombre",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 5
					},
					"label": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 3
					},
					"updateOnEdit": false
				},
				"integrated_edit_field6": {
					"field": "rfc",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field9": {
					"field": "idcli",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"section1": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de la solicitud"
					},
					"location": "section1",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#72d6f9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field": {
					"field": "idproducto",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idproducto",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field2": {
					"field": "idplan",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idplan",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field7": {
					"field": "orden",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "orden",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field8": {
					"field": "plazo",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "plazo",
						"table": "solicitudes",
						"type": 5
					},
					"updateOnEdit": false
				},
				"integrated_edit_field13": {
					"field": "calle",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field14": {
					"field": "numeroext",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field15": {
					"field": "numeroint",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field16": {
					"field": "colonia",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false,
					"customCSS": "/* Put  your custom CSS code here */\n\n"
				},
				"integrated_edit_field11": {
					"field": "ciudad",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field10": {
					"field": "estado",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field12": {
					"field": "cp",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"text": {
					"type": "text",
					"label": {
						"text": "<div id=\"map\" style=\"height: 400px; width: 100%; margin-bottom: 10px; border: 1px solid #ccc;\"></div>\n<p><strong>Haz clic en el mapa para obtener los datos de la ubicación (si algún campo no se acompleta automáticamente, favor de escribirlo)</strong></p>\n\n<!-- Cargar Leaflet CSS & JS -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\" />\n<script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"></script>\n\n<script>\n// Variables globales\nlet map;\nlet marker;\nlet mapInitialized = false;\n\nfunction initMap() {\n    if (mapInitialized) {\n        setTimeout(() => map.invalidateSize(), 100);\n        return;\n    }\n    \n    const initialLocation = [21.0038, -89.6183];\n    map = L.map('map').setView(initialLocation, 12);\n    \n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    \n    mapInitialized = true;\n    \n    map.on('click', function(e) {\n        placeMarkerAndGeocode(e.latlng);\n    });\n    \n    setTimeout(() => map.invalidateSize(), 300);\n}\n\nfunction placeMarkerAndGeocode(latlng) {\n    if (marker) map.removeLayer(marker);\n    marker = L.marker(latlng).addTo(map);\n    map.setView(latlng, map.getZoom());\n    \n    var apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latlng.lat}&lon=${latlng.lng}&zoom=18&addressdetails=1`;\n    \n    fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            if (data && data.address) {\n                populateAddressFields(data.address, latlng, data.display_name);\n            } else {\n                alert('No se encontraron resultados para esta ubicación.');\n            }\n        })\n        .catch(error => {\n            console.error('Error:', error);\n            alert('Falló la geocodificación.');\n        });\n}\n\n// 🔥 NUEVA FUNCIÓN: Extraer número de dirección\nfunction extractHouseNumber(fullAddress, roadName) {\n    if (!fullAddress || !roadName) return '';\n    \n    // Buscar patrones comunes de números\n    const patterns = [\n        /(?:No\\.|Num|#)\\s*(\\d+)/i,    // No. 366, Num 366, #366\n        /(\\d+)\\s*(?:#|No\\.|Num)/i,     // 366 #, 366 No.\n        /(\\d+)\\s*[-–]\\s*\\d+/i,         // 366-368\n        /(\\d+)[a-zA-Z]?$/i,            // 366, 366A\n        /^(\\d+)\\s+/i                   // 366 Calle 30\n    ];\n    \n    for (const pattern of patterns) {\n        const match = fullAddress.match(pattern);\n        if (match && match[1]) {\n            return match[1];\n        }\n    }\n    \n    // Si no se encuentra con patrones, intentar con el campo house_number de Nominatim\n    return '';\n}\n\nfunction populateAddressFields(address, latlng, fullAddress = '') {\n    // Extraer el número de casa\n    const houseNumber = address.house_number || extractHouseNumber(fullAddress, address.road);\n    \n    // Llenar los campos del formulario\n    document.getElementById('value_estado_1').value = address.state || '';\n    document.getElementById('value_ciudad_1').value = address.city || address.town || address.village || '';\n    document.getElementById('value_cp_1').value = address.postcode || '';\n    document.getElementById('value_colonia_1').value = address.suburb || address.neighbourhood || '';\n    document.getElementById('value_calle_1').value = address.road || '';\n    \n    // 🔥 NUEVO: Llenar el número exterior\n    document.getElementById('value_numeroext_1').value = houseNumber;\n    \n    document.getElementById('value_lat_1').value = latlng.lat;\n    document.getElementById('value_lng_1').value = latlng.lng;\n    \n    console.log('Datos completos de Nominatim:', address);\n    console.log('Dirección completa:', fullAddress);\n    console.log('Número extraído:', houseNumber);\n}\n\n// 🔥 OBSERVAR CUANDO EL TAB Y SECTION SE HACEN VISIBLES\nfunction checkMapContainer() {\n    const mapContainer = document.getElementById('map');\n    if (mapContainer.offsetParent !== null && mapContainer.offsetWidth > 0) {\n        initMap();\n        return true;\n    }\n    return false;\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const interval = setInterval(() => {\n        if (checkMapContainer()) {\n            clearInterval(interval);\n        }\n    }, 200);\n    \n    document.body.addEventListener('click', function(e) {\n        if (e.target.closest('[data-toggle=\"tab\"], .step-tab, .nav-link')) {\n            setTimeout(() => {\n                if (mapInitialized) map.invalidateSize();\n                else if (checkMapContainer()) console.log('Mapa inicializado desde click en tab');\n            }, 400);\n        }\n    });\n});\n\nwindow.addEventListener('resize', () => {\n    if (mapInitialized) setTimeout(() => map.invalidateSize(), 100);\n});\n\nconst observer = new MutationObserver(function(mutations) {\n    mutations.forEach(function(mutation) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n            setTimeout(() => {\n                if (mapInitialized) map.invalidateSize();\n            }, 200);\n        }\n    });\n});\n\nsetTimeout(() => {\n    const mapContainer = document.getElementById('map');\n    if (mapContainer) {\n        observer.observe(mapContainer, { attributes: true, attributeFilter: ['style'] });\n    }\n}, 1000);\n</script>\n\n\n\n\n\n\n\n\n\n<script>\n(function(){\n  // ========= IDs DE TUS CAMPOS =========\n  const IDS = {\n    calle:   'value_calle_1',\n    numext:  'value_numeroext_1',   // opcional\n    numint:  'value_numint_1',      // opcional\n    colonia: 'value_colonia_1',\n    ciudad:  'value_ciudad_1',\n    estado:  'value_estado_1',\n    cp:      'value_cp_1',\n    lat:     'value_lat_1',\n    lng:     'value_lng_1'\n  };\n\n  // ========= HELPERS =========\n  const $id = (id) => document.getElementById(id);\n  const safeTrim = (v) => (v || '').toString().trim();\n  const isValidLatLng = (lat, lng) => {\n    const a = Number(lat), b = Number(lng);\n    return Number.isFinite(a) && Number.isFinite(b) && a<=90 && a>=-90 && b<=180 && b>=-180;\n  };\n\n  function invalidateCoordsAndMarker(){\n    if ($id(IDS.lat)) $id(IDS.lat).value = '';\n    if ($id(IDS.lng)) $id(IDS.lng).value = '';\n    if (window.marker) { try { map.removeLayer(marker); } catch(e){} marker = null; }\n  }\n\n  function updateMarkerAndView(lat, lng, zoom){\n    if (!mapInitialized) initMap();\n    const latlng = L.latLng(lat, lng);\n    if (marker) marker.setLatLng(latlng);\n    else marker = L.marker(latlng).addTo(map);\n    map.setView(latlng, zoom || 17);\n  }\n\n  // ========= ESTADO INTERNO =========\n  let geocodeAbort = null;\n  let lastKey = '';\n\n  // ========= GEOCODERS =========\n  /** Paso 1: geocodificar colonia/CP para obtener bbox y centro */\n  async function geocodeArea({colonia, ciudad, estado, cp}) {\n    const parts = [\n      colonia || '',\n      ciudad  || 'Mérida',\n      estado  || 'Yucatán',\n      cp || '',\n      'México'\n    ].filter(Boolean).join(', ');\n\n    const url = `https://nominatim.openstreetmap.org/search?` +\n                new URLSearchParams({\n                  format: 'json',\n                  addressdetails: '1',\n                  limit: '1',\n                  countrycodes: 'mx',\n                  q: parts\n                }).toString();\n\n    const resp = await fetch(url, { headers: { 'Accept': 'application/json' } });\n    const data = await resp.json();\n    if (Array.isArray(data) && data.length) {\n      const item = data[0];\n      const bbox = item.boundingbox ? {\n        south: parseFloat(item.boundingbox[0]),\n        north: parseFloat(item.boundingbox[1]),\n        west:  parseFloat(item.boundingbox[2]),\n        east:  parseFloat(item.boundingbox[3])\n      } : null;\n\n      return {\n        lat: parseFloat(item.lat),\n        lon: parseFloat(item.lon),\n        bbox\n      };\n    }\n    return null;\n  }\n\n  /** Paso 2: buscar calle/número dentro de un viewbox (bounded=1) */\n  async function geocodeStreetInViewbox({street, ciudad, estado, cp, bbox}) {\n    const params = new URLSearchParams({\n      format: 'json',\n      addressdetails: '1',\n      limit: '1',\n      country: 'México',\n      city: ciudad || 'Mérida',\n      state: estado || 'Yucatán',\n      bounded: '1'\n    });\n    if (street) params.append('street', street);\n    if (cp)     params.append('postalcode', cp);\n\n    if (bbox) {\n      // viewbox: left,top,right,bottom => west,north,east,south\n      params.append('viewbox', `${bbox.west},${bbox.north},${bbox.east},${bbox.south}`);\n    }\n\n    let url = `https://nominatim.openstreetmap.org/search?${params.toString()}`;\n    let resp = await fetch(url, { headers: { 'Accept': 'application/json' } });\n    let data = await resp.json();\n\n    // Fallback a texto libre si no hay hit\n    if (!Array.isArray(data) || !data.length) {\n      const free = [\n        street || '',\n        ciudad || 'Mérida',\n        estado || 'Yucatán',\n        cp || '',\n        'México'\n      ].filter(Boolean).join(', ');\n\n      url = `https://nominatim.openstreetmap.org/search?` + new URLSearchParams({\n        format: 'json', addressdetails: '1', limit: '1', countrycodes: 'mx', q: free\n      }).toString();\n\n      resp = await fetch(url, { headers: { 'Accept': 'application/json' } });\n      data = await resp.json();\n    }\n\n    if (Array.isArray(data) && data.length) {\n      return {\n        lat: parseFloat(data[0].lat),\n        lon: parseFloat(data[0].lon)\n      };\n    }\n    return null;\n  }\n\n  /** Función principal: colonia/CP -> bbox y luego calle dentro del bbox */\n  async function geocodeAddressAndUpdateStructured(force=false){\n    const calle   = safeTrim($id(IDS.calle)?.value);\n    const numext  = safeTrim($id(IDS.numext)?.value);\n    const numint  = safeTrim($id(IDS.numint)?.value);\n    const colonia = safeTrim($id(IDS.colonia)?.value);\n    const ciudad  = safeTrim($id(IDS.ciudad)?.value)  || 'MERIDA';\n    const estado  = safeTrim($id(IDS.estado)?.value)  || 'YUCATAN';\n    const cp      = safeTrim($id(IDS.cp)?.value);\n\n    const streetParts = [calle, numext, numint ? `Int ${numint}` : ''].filter(Boolean);\n    const street = streetParts.join(' ');\n\n    // Requisitos mínimos: (calle o colonia o cp) + ciudad + estado\n    if (!( (street || colonia || cp) && ciudad && estado )) return;\n\n    // Evita repeticiones si no es \"force\"\n    const key = JSON.stringify({street, colonia, ciudad, estado, cp}).toUpperCase();\n    if (!force && key === lastKey) return;\n    lastKey = key;\n\n    // Cancela petición previa si existe\n    if (geocodeAbort) geocodeAbort.abort();\n    geocodeAbort = new AbortController();\n\n    let area = null;\n\n    // 1) Si hay colonia o CP, obten bbox del área\n    if (colonia || cp) {\n      try { area = await geocodeArea({ colonia, ciudad, estado, cp }); }\n      catch(e){ console.warn('[MAP] geocodeArea error', e); }\n    }\n\n    // 2) Si hay calle, intenta ubicarla dentro del bbox del área\n    if (street) {\n      try {\n        const hit = await geocodeStreetInViewbox({ street, ciudad, estado, cp, bbox: area?.bbox });\n        if (hit && isValidLatLng(hit.lat, hit.lon)) {\n          if ($id(IDS.lat)) $id(IDS.lat).value = hit.lat;\n          if ($id(IDS.lng)) $id(IDS.lng).value = hit.lon;\n          updateMarkerAndView(hit.lat, hit.lon, 18);\n          geocodeAbort = null;\n          return;\n        }\n      } catch(e){\n        console.warn('[MAP] geocodeStreetInViewbox error', e);\n      }\n    }\n\n    // 3) Sin calle (o sin hit), usa el centro de la colonia/CP si existe\n    if (area && isValidLatLng(area.lat, area.lon)) {\n      if ($id(IDS.lat)) $id(IDS.lat).value = area.lat;\n      if ($id(IDS.lng)) $id(IDS.lng).value = area.lon;\n      const zoom = colonia ? 16 : 15;\n      updateMarkerAndView(area.lat, area.lon, zoom);\n      geocodeAbort = null;\n      return;\n    }\n\n    // 4) Fallback total: búsqueda libre con todo\n    try {\n      const free = [street, colonia, ciudad, estado, cp, 'México'].filter(Boolean).join(', ');\n      const url = `https://nominatim.openstreetmap.org/search?` + new URLSearchParams({\n        format:'json', addressdetails:'1', limit:'1', countrycodes:'mx', q: free\n      }).toString();\n      const resp = await fetch(url, { headers: { 'Accept':'application/json' } });\n      const data = await resp.json();\n      if (Array.isArray(data) && data.length) {\n        const lat = parseFloat(data[0].lat), lon = parseFloat(data[0].lon);\n        if (isValidLatLng(lat, lon)) {\n          if ($id(IDS.lat)) $id(IDS.lat).value = lat;\n          if ($id(IDS.lng)) $id(IDS.lng).value = lon;\n          updateMarkerAndView(lat, lon, street ? 18 : (colonia ? 16 : 15));\n        }\n      }\n    } catch(e){\n      console.error('[MAP] fallback free-text error', e);\n    } finally {\n      geocodeAbort = null;\n    }\n  }\n\n  // ========= LISTENERS (sin temporizadores) =========\n  function attachListeners(){\n    const finishEvents = ['change','blur','focusout','compositionend','keydown'];\n\n    function onFinish(ev){\n      if (ev.type === 'keydown' && ev.key !== 'Enter') return;\n      if (!ev.isTrusted) return; // ignora cambios programáticos\n      invalidateCoordsAndMarker();\n      geocodeAddressAndUpdateStructured(true);\n    }\n\n    // Disparadores: calle, colonia, ciudad, estado, CP\n    [IDS.calle, IDS.colonia, IDS.ciudad, IDS.estado, IDS.cp].forEach(id => {\n      const el = $id(id);\n      if (!el) return;\n      finishEvents.forEach(evt => el.addEventListener(evt, onFinish));\n    });\n\n    // Lat/Lng manuales\n    function moveByLatLng(ev){\n      if (ev.type === 'keydown' && ev.key !== 'Enter') return;\n      const lat = safeTrim($id(IDS.lat)?.value);\n      const lng = safeTrim($id(IDS.lng)?.value);\n      if (isValidLatLng(lat, lng)) updateMarkerAndView(Number(lat), Number(lng), 18);\n    }\n    [IDS.lat, IDS.lng].forEach(id => {\n      const el = $id(id);\n      if (!el) return;\n      ['change','blur','focusout','keydown'].forEach(evt => el.addEventListener(evt, moveByLatLng));\n    });\n  }\n\n  // ========= ARRANQUE =========\n  document.addEventListener('DOMContentLoaded', () => {\n    attachListeners();\n\n    // Si ya hay coords, centra ahí\n    const lat = safeTrim($id(IDS.lat)?.value);\n    const lng = safeTrim($id(IDS.lng)?.value);\n    if (isValidLatLng(lat, lng)){\n      updateMarkerAndView(Number(lat), Number(lng), 18);\n    } else {\n      // Si hay (calle o colonia o CP) + ciudad/estado, geocodifica de entrada\n      const calle   = safeTrim($id(IDS.calle)?.value);\n      const colonia = safeTrim($id(IDS.colonia)?.value);\n      const ciudad  = safeTrim($id(IDS.ciudad)?.value) || 'MERIDA';\n      const estado  = safeTrim($id(IDS.estado)?.value) || 'YUCATAN';\n      const cp      = safeTrim($id(IDS.cp)?.value);\n      if ((calle || colonia || cp) && ciudad && estado){\n        geocodeAddressAndUpdateStructured(true);\n      }\n    }\n  });\n\n})();\n</script>\n",
						"type": 0
					},
					"editedByRte": false
				},
				"next_step": {
					"type": "next_step",
					"icon": {}
				},
				"step_nav": {
					"type": "step_nav"
				},
				"integrated_edit_field17": {
					"field": "lat",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field18": {
					"field": "lng",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field19": {
					"field": "noserie",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				},
				"integrated_edit_field20": {
					"field": "idtipoventa",
					"type": "integrated_edit_field",
					"orientation": 0,
					"updateOnEdit": false
				}
			},
			"dbProps": {},
			"steps": [
				{
					"location": "grid",
					"label": {
						"text": "Datos iniciales",
						"type": 0
					}
				},
				{
					"location": "step2",
					"label": {
						"text": "Datos de la Entrega",
						"type": 0
					}
				}
			],
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"pageCSS": "\n",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "view",
			"type": "view",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "view-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1",
									"colspan": 2
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "view-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"view_back_list",
								"view_close"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"hamburger"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "view-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"view_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3"
								},
								{
									"cell": "c"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c4",
									"colspan": 2,
									"rowspan": 1
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c5",
									"colspan": 2
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"section"
							],
							"border": [
								{
									"side": "",
									"width": "0"
								}
							],
							"padding": {
								"right": "10px"
							}
						},
						"c": {
							"model": "c3",
							"items": [
								"section1"
							]
						},
						"c4": {
							"model": "c3",
							"items": [
								"section2"
							]
						},
						"c5": {
							"model": "c3",
							"items": [
								"integrated_edit_field17"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field3",
								"integrated_edit_field4",
								"integrated_edit_field5",
								"integrated_edit_field1",
								"integrated_edit_field6",
								"integrated_edit_field9"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section1": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field",
								"integrated_edit_field2",
								"integrated_edit_field7",
								"integrated_edit_field8"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				},
				"section2": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"integrated_edit_field13",
								"integrated_edit_field14",
								"integrated_edit_field15",
								"integrated_edit_field16"
							]
						},
						"c": {
							"model": "c1",
							"items": [
								"integrated_edit_field11",
								"integrated_edit_field10",
								"integrated_edit_field12",
								"text"
							]
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"view_header": {
					"type": "view_header"
				},
				"view_back_list": {
					"type": "view_back_list"
				},
				"view_close": {
					"type": "view_close"
				},
				"hamburger": {
					"type": "hamburger",
					"items": [
						"view_edit"
					]
				},
				"view_edit": {
					"type": "view_edit"
				},
				"section": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos del cliente"
					},
					"location": "section",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#a0dcf5",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field3": {
					"field": "idcliente",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idcliente",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field4": {
					"field": "paterno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "paterno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field5": {
					"field": "materno",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "materno",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field1": {
					"field": "nombre",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 5
					},
					"label": {
						"field": "nombre",
						"table": "solicitudes",
						"type": 3
					}
				},
				"integrated_edit_field6": {
					"field": "rfc",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field9": {
					"field": "idcli",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"section1": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de la solicitud"
					},
					"location": "section1",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#72d6f9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field": {
					"field": "idproducto",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idproducto",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field2": {
					"field": "idplan",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "idplan",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field7": {
					"field": "orden",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "orden",
						"table": "solicitudes",
						"type": 5
					}
				},
				"integrated_edit_field8": {
					"field": "plazo",
					"type": "integrated_edit_field",
					"orientation": 0,
					"placeholder": {
						"field": "plazo",
						"table": "solicitudes",
						"type": 5
					}
				},
				"section2": {
					"type": "section",
					"title": {
						"type": 0,
						"text": "Datos de entrega"
					},
					"location": "section2",
					"bsStyle": "default",
					"panelType": 3,
					"headerBg": "#44bee9",
					"headerColor": "",
					"bodyBg": "",
					"bodyColor": "",
					"panelBorder": null,
					"borderColor": ""
				},
				"integrated_edit_field13": {
					"field": "calle",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field14": {
					"field": "numeroext",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field15": {
					"field": "numeroint",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field16": {
					"field": "colonia",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field11": {
					"field": "ciudad",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field10": {
					"field": "estado",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"integrated_edit_field12": {
					"field": "cp",
					"type": "integrated_edit_field",
					"orientation": 0
				},
				"text": {
					"type": "text",
					"label": {
						"text": "<div id=\"map\" style=\"height: 400px; width: 100%; margin-bottom: 10px; border: 1px solid #ccc;\"></div>\n<p><strong>Haz clic en el mapa para establecer la ubicación.</strong></p>\n\n<!-- Cargar la API de Google Maps (Reemplaza TU_API_KEY) -->\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA2P1eBUfOvpeXBIWM5t5Drg3EjZc25Tzs&callback=initMap&libraries=places&v=weekly\" async defer></script>\n\n<script>\n// Variables globales\nlet map;\nlet marker;\nlet geocoder;\n\nfunction initMap() {\n    // Coordenadas iniciales\n    const initialLocation = { lat: 21.0038, lng: -89.6183 };\n    // Crear el mapa\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 12,\n        center: initialLocation,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n    // Inicializar el geocoder\n    geocoder = new google.maps.Geocoder();\n    // Escuchar el evento de clic en el mapa\n    map.addListener('click', function(event) {\n        placeMarkerAndGeocode(event.latLng);\n    });\n}\n\nfunction placeMarkerAndGeocode(location) {\n    // Limpiar el marcador anterior si existe\n    if (marker) {\n        marker.setMap(null);\n    }\n    // Colocar un nuevo marcador\n    marker = new google.maps.Marker({\n        position: location,\n        map: map\n    });\n    // Centrar el mapa en la nueva ubicación\n    map.panTo(location);\n    // Obtener la dirección a partir de las coordenadas (Geocodificación Inversa)\n    geocoder.geocode({ 'location': location }, function(results, status) {\n        if (status === 'OK') {\n            if (results[0]) {\n                // Llenar los campos del formulario con los datos obtenidos\n                populateAddressFields(results[0]);\n            } else {\n                alert('No se encontraron resultados para esta ubicación.');\n            }\n        } else {\n            alert('Falló la geocodificación: ' + status);\n        }\n    });\n}\n\nfunction populateAddressFields(addressData) {\n    // Esta función descompone la respuesta de geocodificación y llena los campos.\n    // La estructura de 'address_components' puede variar, ¡debes ajustarla!\n    \n    let addressComponents = addressData.address_components;\n    let addressLookup = {};\n    \n    // Crear un objeto fácil de buscar a partir de los componentes\n    addressComponents.forEach(component => {\n        component.types.forEach(type => {\n            addressLookup[type] = component.long_name;\n        });\n    });\n    // Llenar los campos del formulario de PHPRunner.\n    // ¡IMPORTANTE! Reemplaza 'Editbox1' con los nombres REALES de tus campos.\n    // Puedes encontrar el nombre real del campo en la pestaña \"Fields\" de PHPRunner.\n    \n    // Usar getElementById o un selector por nombre\n    document.getElementById('value_estado_1').value = addressLookup['administrative_area_level_1'] || ''; // Estado\n    document.getElementById('value_ciudad_1').value = addressLookup['locality'] || addressLookup['administrative_area_level_2'] || ''; // Ciudad o Municipio\n    document.getElementById('value_cp_1').value = addressLookup['postal_code'] || ''; // Código Postal\n    document.getElementById('value_colonia_1').value = addressLookup['sublocality_level_1'] || addressLookup['neighborhood'] || ''; // Colonia\n    document.getElementById('value_calle_1').value = getRoute(addressComponents) || ''; // Calle\n}\n\n// Función de ayuda para obtener el nombre de la calle\nfunction getRoute(components) {\n    for (let i = 0; i < components.length; i++) {\n        if (components[i].types.includes('route')) {\n            return components[i].long_name;\n        }\n    }\n    return '';\n}\n// Inicializar el mapa cuando la página esté cargada\n// Google Maps llama a 'initMap' automáticamente por el callback en la URL de la API\n</script>",
						"type": 0
					},
					"editedByRte": false
				},
				"integrated_edit_field17": {
					"field": "idtipoventa",
					"type": "integrated_edit_field",
					"orientation": 0
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "list",
			"type": "list",
			"layoutId": "leftbar",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "list-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c3"
								},
								{
									"cell": "c4"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"add",
								"inline_save_all",
								"inline_cancel_all",
								"delete"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"text1",
								"snippet",
								"text",
								"snippet1",
								"details_found",
								"page_size",
								"print_panel"
							]
						},
						"c3": {
							"model": "c3",
							"items": []
						},
						"c4": {
							"model": "c4",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "list-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"pagination"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"left": {
					"modelId": "leftbar-menu",
					"grid": [
						{
							"cells": [
								{
									"cell": "c0"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c0": {
							"model": "c0",
							"items": [
								"logo",
								"expand_button"
							]
						},
						"c1": {
							"model": "c1",
							"items": [
								"menu"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"supertop": {
					"modelId": "leftbar-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"expand_menu_button",
								"collapse_button",
								"breadcrumb"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"simple_search",
								"list_options",
								"loginform_login",
								"username_button"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "list-sidebar-top",
					"grid": [],
					"cells": {},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "horizontal-grid",
					"grid": [
						{
							"section": "head",
							"cells": [
								{
									"cell": "headcell_icons"
								},
								{
									"cell": "headcell_checkbox"
								},
								{
									"cell": "headcell_field2"
								},
								{
									"cell": "headcell_field3"
								},
								{
									"cell": "headcell_field4"
								},
								{
									"cell": "headcell_field12"
								},
								{
									"cell": "headcell_field16"
								},
								{
									"cell": "headcell_field"
								},
								{
									"cell": "headcell_field1"
								},
								{
									"cell": "headcell_field7"
								},
								{
									"cell": "headcell_field9"
								},
								{
									"cell": "headcell_field10"
								},
								{
									"cell": "headcell_field8"
								},
								{
									"cell": "headcell_field13"
								}
							]
						},
						{
							"section": "body",
							"cells": [
								{
									"cell": "cell_icons"
								},
								{
									"cell": "cell_checkbox"
								},
								{
									"cell": "cell_field2"
								},
								{
									"cell": "headcell_field5"
								},
								{
									"cell": "cell_field4"
								},
								{
									"cell": "cell_field12"
								},
								{
									"cell": "cell_field16"
								},
								{
									"cell": "cell_field"
								},
								{
									"cell": "cell_field1"
								},
								{
									"cell": "cell_field3"
								},
								{
									"cell": "cell_field6"
								},
								{
									"cell": "headcell_field11"
								},
								{
									"cell": "cell_field5"
								},
								{
									"cell": "cell_field7"
								}
							]
						},
						{
							"cells": [
								{
									"cell": "cell_dpreview",
									"colspan": 14
								}
							],
							"section": "body"
						},
						{
							"section": "foot",
							"cells": [
								{
									"cell": "footcell_icons"
								},
								{
									"cell": "footcell_checkbox"
								},
								{
									"cell": "footcell_field2"
								},
								{
									"cell": "headcell_field6"
								},
								{
									"cell": "footcell_field4"
								},
								{
									"cell": "footcell_field12"
								},
								{
									"cell": "footcell_field16"
								},
								{
									"cell": "footcell_field"
								},
								{
									"cell": "footcell_field1"
								},
								{
									"cell": "footcell_field3"
								},
								{
									"cell": "footcell_field6"
								},
								{
									"cell": "headcell_field14"
								},
								{
									"cell": "footcell_field5"
								},
								{
									"cell": "footcell_field7"
								}
							]
						}
					],
					"cells": {
						"headcell_field2": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field31"
							],
							"field": "fecha",
							"columnName": "field"
						},
						"cell_field2": {
							"model": "cell_field",
							"items": [
								"simple_grid_field2"
							],
							"field": "fecha",
							"columnName": "field"
						},
						"footcell_field2": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "fecha"
						},
						"headcell_field4": {
							"model": "headcell_field",
							"items": [
								"grid_field_label"
							],
							"field": "descripcion",
							"columnName": "field"
						},
						"cell_field4": {
							"model": "cell_field",
							"items": [
								"grid_field"
							],
							"field": "descripcion",
							"columnName": "field"
						},
						"footcell_field4": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "descripcion"
						},
						"headcell_field12": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field41"
							],
							"field": "estatus",
							"columnName": "field"
						},
						"cell_field12": {
							"model": "cell_field",
							"items": [
								"simple_grid_field12"
							],
							"field": "estatus",
							"columnName": "field"
						},
						"footcell_field12": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "estatus"
						},
						"headcell_field16": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field45"
							],
							"field": "plazo",
							"columnName": "field"
						},
						"cell_field16": {
							"model": "cell_field",
							"items": [
								"simple_grid_field16"
							],
							"field": "plazo",
							"columnName": "field"
						},
						"footcell_field16": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "plazo"
						},
						"headcell_checkbox": {
							"model": "headcell_checkbox",
							"items": [
								"grid_checkbox_head"
							],
							"columnName": "checkbox",
							"field": ""
						},
						"cell_checkbox": {
							"model": "cell_checkbox",
							"items": [
								"grid_checkbox"
							],
							"columnName": "checkbox",
							"field": ""
						},
						"footcell_checkbox": {
							"model": "footcell_checkbox",
							"items": [],
							"columnName": "checkbox",
							"field": ""
						},
						"headcell_icons": {
							"model": "headcell_icons",
							"items": [],
							"columnName": "list-icons",
							"field": ""
						},
						"cell_icons": {
							"model": "cell_icons",
							"items": [
								"grid_edit",
								"grid_inline_edit",
								"grid_inline_save",
								"grid_inline_cancel",
								"grid_view",
								"logistic_btn"
							],
							"orientation": "horizontal",
							"columnName": "list-icons",
							"field": ""
						},
						"footcell_icons": {
							"model": "footcell_icons",
							"items": [],
							"columnName": "list-icons",
							"field": ""
						},
						"headcell_field": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field39"
							],
							"field": "orden",
							"columnName": "field"
						},
						"cell_field": {
							"model": "cell_field",
							"items": [
								"simple_grid_field10"
							],
							"field": "orden",
							"columnName": "field"
						},
						"footcell_field": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "orden"
						},
						"headcell_field3": {
							"model": "headcell_field",
							"items": [
								"simple_grid_field33"
							],
							"field": "idcliente",
							"columnName": "field"
						},
						"headcell_field5": {
							"model": "cell_field",
							"items": [
								"simple_grid_field4"
							],
							"field": "idcliente",
							"columnName": "field"
						},
						"headcell_field6": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "idcliente"
						},
						"headcell_field1": {
							"model": "headcell_field",
							"items": [
								"grid_field_label1"
							],
							"field": "maps_url",
							"columnName": "field"
						},
						"cell_field1": {
							"model": "cell_field",
							"items": [
								"grid_field1"
							],
							"field": "maps_url",
							"columnName": "field"
						},
						"footcell_field1": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "maps_url"
						},
						"headcell_field7": {
							"model": "headcell_field",
							"items": [
								"grid_field_label2"
							],
							"field": "estatusentrega",
							"columnName": "field"
						},
						"cell_field3": {
							"model": "cell_field",
							"items": [
								"grid_field2"
							],
							"field": "estatusentrega",
							"columnName": "field"
						},
						"footcell_field3": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "estatusentrega"
						},
						"headcell_field9": {
							"model": "headcell_field",
							"items": [
								"grid_field_label4"
							],
							"field": "chip",
							"columnName": "field"
						},
						"cell_field6": {
							"model": "cell_field",
							"items": [
								"grid_field4"
							],
							"field": "chip",
							"columnName": "field"
						},
						"footcell_field6": {
							"model": "footcell_field",
							"items": [],
							"columnName": "field",
							"field": "chip"
						},
						"cell_dpreview": {
							"model": "cell_dpreview",
							"items": [],
							"columnName": "field",
							"field": "noserie"
						},
						"headcell_field10": {
							"model": "headcell_field",
							"items": [
								"text2"
							],
							"columnName": "details",
							"field": ""
						},
						"headcell_field11": {
							"model": "cell_field",
							"items": [
								"grid_details_link"
							],
							"columnName": "details",
							"field": ""
						},
						"headcell_field14": {
							"model": "footcell_field",
							"items": [],
							"columnName": "details",
							"field": ""
						},
						"headcell_field8": {
							"model": "headcell_field",
							"items": [
								"grid_field_label3"
							],
							"field": "noserie",
							"columnName": "field"
						},
						"cell_field5": {
							"model": "cell_field",
							"items": [
								"grid_field3"
							],
							"field": "noserie",
							"columnName": "field"
						},
						"footcell_field5": {
							"model": "footcell_field",
							"items": [],
							"field": "noserie",
							"columnName": "field"
						},
						"headcell_field13": {
							"model": "headcell_field",
							"items": [
								"grid_field_label5"
							],
							"field": "idtipoventa"
						},
						"cell_field7": {
							"model": "cell_field",
							"items": [
								"grid_field5"
							],
							"field": "idtipoventa"
						},
						"footcell_field7": {
							"model": "footcell_field",
							"items": [],
							"field": "idtipoventa"
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"page_size": {
					"type": "page_size"
				},
				"breadcrumb": {
					"type": "breadcrumb"
				},
				"logo": {
					"type": "logo"
				},
				"menu": {
					"type": "menu"
				},
				"simple_search": {
					"type": "simple_search"
				},
				"pagination": {
					"type": "pagination"
				},
				"details_found": {
					"type": "details_found"
				},
				"list_options": {
					"type": "list_options",
					"items": [
						"edit_selected",
						"export_selected",
						"delete_selected",
						"-10",
						"advsearch_link",
						"-9",
						"export"
					]
				},
				"expand_menu_button": {
					"type": "expand_menu_button"
				},
				"collapse_button": {
					"type": "collapse_button"
				},
				"add": {
					"type": "add"
				},
				"export": {
					"type": "export"
				},
				"-": {
					"type": "-"
				},
				"export_selected": {
					"type": "export_selected"
				},
				"-1": {
					"type": "-"
				},
				"-2": {
					"type": "-"
				},
				"delete": {
					"type": "delete"
				},
				"delete_selected": {
					"type": "delete_selected"
				},
				"simple_grid_field2": {
					"field": "fecha",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field31": {
					"type": "grid_field_label",
					"field": "fecha"
				},
				"simple_grid_field4": {
					"field": "idcliente",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field33": {
					"type": "grid_field_label",
					"field": "idcliente"
				},
				"simple_grid_field10": {
					"field": "orden",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field39": {
					"type": "grid_field_label",
					"field": "orden"
				},
				"simple_grid_field12": {
					"field": "estatus",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field41": {
					"type": "grid_field_label",
					"field": "estatus"
				},
				"simple_grid_field16": {
					"field": "plazo",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"simple_grid_field45": {
					"type": "grid_field_label",
					"field": "plazo"
				},
				"grid_checkbox": {
					"type": "grid_checkbox"
				},
				"grid_checkbox_head": {
					"type": "grid_checkbox_head"
				},
				"grid_edit": {
					"type": "grid_edit",
					"icon": {
						"glyph": "pencil"
					}
				},
				"grid_view": {
					"type": "grid_view",
					"icon": {
						"glyph": "search"
					}
				},
				"username_button": {
					"type": "username_button",
					"items": [
						"userinfo_link",
						"logout_link",
						"adminarea_link"
					]
				},
				"loginform_login": {
					"type": "loginform_login",
					"popup": false
				},
				"userinfo_link": {
					"type": "userinfo_link"
				},
				"logout_link": {
					"type": "logout_link"
				},
				"adminarea_link": {
					"type": "adminarea_link"
				},
				"grid_field": {
					"field": "descripcion",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": true
				},
				"grid_field_label": {
					"type": "grid_field_label",
					"field": "descripcion"
				},
				"-3": {
					"type": "-"
				},
				"edit_selected": {
					"type": "edit_selected"
				},
				"grid_inline_edit": {
					"type": "grid_inline_edit"
				},
				"grid_inline_save": {
					"type": "grid_inline_save"
				},
				"grid_inline_cancel": {
					"type": "grid_inline_cancel"
				},
				"inline_save_all": {
					"type": "inline_save_all"
				},
				"inline_cancel_all": {
					"type": "inline_cancel_all"
				},
				"grid_field1": {
					"field": "maps_url",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label1": {
					"type": "grid_field_label",
					"field": "maps_url"
				},
				"-4": {
					"type": "-"
				},
				"-5": {
					"type": "-"
				},
				"grid_field2": {
					"field": "estatusentrega",
					"type": "grid_field",
					"inlineEdit": true,
					"inlineAdd": true
				},
				"grid_field_label2": {
					"type": "grid_field_label",
					"field": "estatusentrega"
				},
				"-6": {
					"type": "-"
				},
				"-7": {
					"type": "-"
				},
				"grid_field4": {
					"field": "chip",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label4": {
					"type": "grid_field_label",
					"field": "chip"
				},
				"-8": {
					"type": "-"
				},
				"-9": {
					"type": "-"
				},
				"snippet": {
					"type": "snippet",
					"eventGid": 3482841917
				},
				"text": {
					"type": "text",
					"label": {
						"text": "-",
						"type": 0
					},
					"editedByRte": false
				},
				"snippet1": {
					"type": "snippet",
					"eventGid": 1209004018
				},
				"advsearch_link": {
					"type": "advsearch_link"
				},
				"-10": {
					"type": "-"
				},
				"text1": {
					"type": "text",
					"label": {
						"type": 0,
						"text": "Rango de fechas: "
					},
					"editedByRte": false
				},
				"grid_details_link": {
					"type": "grid_details_link",
					"table": 3847630651,
					"badge": true,
					"hideIfNone": true,
					"showCount": true,
					"icon": {}
				},
				"print_panel": {
					"type": "print_panel",
					"items": [
						"print_details"
					]
				},
				"print_details": {
					"type": "print_details",
					"tables": {
						"3847630651": true
					}
				},
				"text2": {
					"type": "text",
					"label": {
						"text": "Logística",
						"type": 0
					},
					"editedByRte": false
				},
				"expand_button": {
					"type": "expand_button"
				},
				"logistic_btn": {
					"type": "grid_edit",
					"icon": {
						"glyph": "phone"
					},
					"tooltip": {
						"type": 0,
						"text": "Logística"
					}
				},
				"grid_field3": {
					"field": "noserie",
					"type": "grid_field",
					"inlineEdit": false,
					"inlineAdd": false
				},
				"grid_field_label3": {
					"type": "grid_field_label",
					"field": "noserie"
				},
				"grid_field5": {
					"field": "idtipoventa",
					"type": "grid_field",
					"inlineAdd": false,
					"inlineEdit": false
				},
				"grid_field_label5": {
					"type": "grid_field_label",
					"field": "idtipoventa"
				}
			},
			"dbProps": {},
			"spreadsheetGrid": false,
			"autoAddNewRecord": false,
			"version": 13,
			"pageWidth": "full",
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"pageCSS": "/* Put  your custom CSS code here */\n\n.table {\n    font-family: 'Arial', sans-serif !important;\n    font-size: 12px !important;\n    border-collapse: collapse !important;\n}",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "print",
			"type": "print",
			"layoutId": "basic",
			"disabled": true,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "print-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"print_pages"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "print-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "print-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c2": {
							"model": "c2",
							"items": [
								"print_header",
								"print_subheader"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"simple_grid_field",
								"simple_grid_field1",
								"simple_grid_field2"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"details_preview"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"print_header": {
					"type": "print_header"
				},
				"print_subheader": {
					"type": "print_subheader"
				},
				"print_pages": {
					"type": "print_pages"
				},
				"simple_grid_field": {
					"field": "direccion",
					"type": "simple_grid_field"
				},
				"simple_grid_field1": {
					"field": "lat",
					"type": "simple_grid_field"
				},
				"simple_grid_field2": {
					"field": "lng",
					"type": "simple_grid_field"
				},
				"details_preview": {
					"type": "details_preview",
					"table": 3847630651,
					"items": [],
					"popup": false
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "search",
			"type": "search",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "search-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1",
									"colspan": 2
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "search-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"search_search",
								"search_reset",
								"search_back_list",
								"search_cancel"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "search-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"search_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-search",
					"grid": [
						{
							"cells": [
								{
									"cell": "c3"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c3": {
							"model": "c3",
							"items": [
								"integrated_search_field"
							]
						}
					},
					"deferredItems": [],
					"separateLabels": false
				}
			},
			"items": {
				"search_header": {
					"type": "search_header"
				},
				"search_reset": {
					"type": "search_reset"
				},
				"search_back_list": {
					"type": "search_back_list"
				},
				"search_search": {
					"type": "search_search"
				},
				"search_cancel": {
					"type": "search_cancel"
				},
				"integrated_search_field": {
					"field": "noserie",
					"type": "integrated_search_field",
					"orientation": 0
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "masterlist",
			"type": "masterlist",
			"layoutId": "masterlist",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "empty-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "empty-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "masterlist-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"back_master",
								"masterlist_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"simple_grid_field",
								"simple_grid_field1",
								"simple_grid_field2",
								"simple_grid_field3",
								"simple_grid_field4",
								"simple_grid_field5",
								"simple_grid_field6",
								"simple_grid_field7",
								"simple_grid_field8",
								"simple_grid_field9",
								"simple_grid_field10",
								"simple_grid_field11",
								"simple_grid_field12",
								"simple_grid_field13",
								"simple_grid_field14",
								"simple_grid_field15",
								"simple_grid_field16",
								"simple_grid_field17",
								"simple_grid_field18",
								"simple_grid_field19",
								"simple_grid_field20",
								"simple_grid_field21",
								"simple_grid_field22",
								"simple_grid_field23",
								"simple_grid_field24",
								"simple_grid_field25",
								"simple_grid_field26",
								"simple_grid_field27",
								"simple_grid_field28",
								"simple_grid_field29",
								"simple_grid_field30",
								"simple_grid_field31",
								"simple_grid_field32",
								"simple_grid_field33",
								"simple_grid_field34",
								"simple_grid_field35",
								"simple_grid_field36",
								"simple_grid_field37",
								"simple_grid_field38",
								"simple_grid_field39",
								"simple_grid_field40",
								"simple_grid_field41",
								"simple_grid_field42",
								"simple_grid_field44",
								"simple_grid_field45",
								"simple_grid_field46",
								"simple_grid_field43"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"masterlist_header": {
					"type": "masterlist_header"
				},
				"back_master": {
					"type": "back_master"
				},
				"simple_grid_field": {
					"field": "idsolicitud",
					"type": "simple_grid_field"
				},
				"simple_grid_field1": {
					"field": "idtipoventa",
					"type": "simple_grid_field"
				},
				"simple_grid_field2": {
					"field": "fecha",
					"type": "simple_grid_field"
				},
				"simple_grid_field3": {
					"field": "fechacaptura",
					"type": "simple_grid_field"
				},
				"simple_grid_field4": {
					"field": "idcliente",
					"type": "simple_grid_field"
				},
				"simple_grid_field5": {
					"field": "idproducto",
					"type": "simple_grid_field"
				},
				"simple_grid_field6": {
					"field": "idplan",
					"type": "simple_grid_field"
				},
				"simple_grid_field7": {
					"field": "usuario",
					"type": "simple_grid_field"
				},
				"simple_grid_field8": {
					"field": "idtienda",
					"type": "simple_grid_field"
				},
				"simple_grid_field9": {
					"field": "fechamodif",
					"type": "simple_grid_field"
				},
				"simple_grid_field10": {
					"field": "orden",
					"type": "simple_grid_field"
				},
				"simple_grid_field11": {
					"field": "solicitudimg",
					"type": "simple_grid_field"
				},
				"simple_grid_field12": {
					"field": "estatus",
					"type": "simple_grid_field"
				},
				"simple_grid_field13": {
					"field": "idsolrazon",
					"type": "simple_grid_field"
				},
				"simple_grid_field14": {
					"field": "importeatt",
					"type": "simple_grid_field"
				},
				"simple_grid_field15": {
					"field": "importesms",
					"type": "simple_grid_field"
				},
				"simple_grid_field16": {
					"field": "plazo",
					"type": "simple_grid_field"
				},
				"simple_grid_field17": {
					"field": "observaciones",
					"type": "simple_grid_field"
				},
				"simple_grid_field18": {
					"field": "equipoincluido",
					"type": "simple_grid_field"
				},
				"simple_grid_field19": {
					"field": "rfc",
					"type": "simple_grid_field"
				},
				"simple_grid_field20": {
					"field": "idtratamiento",
					"type": "simple_grid_field"
				},
				"simple_grid_field21": {
					"field": "riesgo",
					"type": "simple_grid_field"
				},
				"simple_grid_field22": {
					"field": "observacionest",
					"type": "simple_grid_field"
				},
				"simple_grid_field23": {
					"field": "idcli",
					"type": "simple_grid_field"
				},
				"simple_grid_field24": {
					"field": "fecha1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field25": {
					"field": "idplan1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field26": {
					"field": "dn1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field27": {
					"field": "idproceso",
					"type": "simple_grid_field"
				},
				"simple_grid_field28": {
					"field": "idorigenventa",
					"type": "simple_grid_field"
				},
				"simple_grid_field29": {
					"field": "nombre",
					"type": "simple_grid_field"
				},
				"simple_grid_field30": {
					"field": "paterno",
					"type": "simple_grid_field"
				},
				"simple_grid_field31": {
					"field": "materno",
					"type": "simple_grid_field"
				},
				"simple_grid_field32": {
					"field": "estado",
					"type": "simple_grid_field"
				},
				"simple_grid_field33": {
					"field": "ciudad",
					"type": "simple_grid_field"
				},
				"simple_grid_field34": {
					"field": "cp",
					"type": "simple_grid_field"
				},
				"simple_grid_field35": {
					"field": "calle",
					"type": "simple_grid_field"
				},
				"simple_grid_field36": {
					"field": "numeroext",
					"type": "simple_grid_field"
				},
				"simple_grid_field37": {
					"field": "numeroint",
					"type": "simple_grid_field"
				},
				"simple_grid_field38": {
					"field": "colonia",
					"type": "simple_grid_field"
				},
				"simple_grid_field39": {
					"field": "descripcion",
					"type": "simple_grid_field"
				},
				"simple_grid_field40": {
					"field": "maps_url",
					"type": "simple_grid_field"
				},
				"simple_grid_field41": {
					"field": "direccion",
					"type": "simple_grid_field"
				},
				"simple_grid_field42": {
					"field": "estatusentrega",
					"type": "simple_grid_field"
				},
				"simple_grid_field44": {
					"field": "chip",
					"type": "simple_grid_field"
				},
				"simple_grid_field45": {
					"field": "lat",
					"type": "simple_grid_field"
				},
				"simple_grid_field46": {
					"field": "lng",
					"type": "simple_grid_field"
				},
				"simple_grid_field43": {
					"field": "noserie",
					"type": "simple_grid_field"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "masterprint",
			"type": "masterprint",
			"layoutId": "masterprint",
			"disabled": false,
			"default": 0,
			"forms": {
				"above-grid": {
					"modelId": "empty-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "empty-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": []
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "masterlist-top",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"masterprint_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"simple_grid_field",
								"simple_grid_field1",
								"simple_grid_field2",
								"simple_grid_field3",
								"simple_grid_field4",
								"simple_grid_field5",
								"simple_grid_field6",
								"simple_grid_field7",
								"simple_grid_field8",
								"simple_grid_field9",
								"simple_grid_field10",
								"simple_grid_field11",
								"simple_grid_field12",
								"simple_grid_field13",
								"simple_grid_field14",
								"simple_grid_field15",
								"simple_grid_field16",
								"simple_grid_field17",
								"simple_grid_field18",
								"simple_grid_field19",
								"simple_grid_field20",
								"simple_grid_field21",
								"simple_grid_field22",
								"simple_grid_field23",
								"simple_grid_field24",
								"simple_grid_field25",
								"simple_grid_field26",
								"simple_grid_field27",
								"simple_grid_field28",
								"simple_grid_field29",
								"simple_grid_field30",
								"simple_grid_field31",
								"simple_grid_field32",
								"simple_grid_field33",
								"simple_grid_field34",
								"simple_grid_field35",
								"simple_grid_field36",
								"simple_grid_field37",
								"simple_grid_field38",
								"simple_grid_field39",
								"simple_grid_field40",
								"simple_grid_field41",
								"simple_grid_field42",
								"simple_grid_field44",
								"simple_grid_field45",
								"simple_grid_field46",
								"simple_grid_field43"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				}
			},
			"items": {
				"masterprint_header": {
					"type": "masterprint_header"
				},
				"simple_grid_field": {
					"field": "idsolicitud",
					"type": "simple_grid_field"
				},
				"simple_grid_field1": {
					"field": "idtipoventa",
					"type": "simple_grid_field"
				},
				"simple_grid_field2": {
					"field": "fecha",
					"type": "simple_grid_field"
				},
				"simple_grid_field3": {
					"field": "fechacaptura",
					"type": "simple_grid_field"
				},
				"simple_grid_field4": {
					"field": "idcliente",
					"type": "simple_grid_field"
				},
				"simple_grid_field5": {
					"field": "idproducto",
					"type": "simple_grid_field"
				},
				"simple_grid_field6": {
					"field": "idplan",
					"type": "simple_grid_field"
				},
				"simple_grid_field7": {
					"field": "usuario",
					"type": "simple_grid_field"
				},
				"simple_grid_field8": {
					"field": "idtienda",
					"type": "simple_grid_field"
				},
				"simple_grid_field9": {
					"field": "fechamodif",
					"type": "simple_grid_field"
				},
				"simple_grid_field10": {
					"field": "orden",
					"type": "simple_grid_field"
				},
				"simple_grid_field11": {
					"field": "solicitudimg",
					"type": "simple_grid_field"
				},
				"simple_grid_field12": {
					"field": "estatus",
					"type": "simple_grid_field"
				},
				"simple_grid_field13": {
					"field": "idsolrazon",
					"type": "simple_grid_field"
				},
				"simple_grid_field14": {
					"field": "importeatt",
					"type": "simple_grid_field"
				},
				"simple_grid_field15": {
					"field": "importesms",
					"type": "simple_grid_field"
				},
				"simple_grid_field16": {
					"field": "plazo",
					"type": "simple_grid_field"
				},
				"simple_grid_field17": {
					"field": "observaciones",
					"type": "simple_grid_field"
				},
				"simple_grid_field18": {
					"field": "equipoincluido",
					"type": "simple_grid_field"
				},
				"simple_grid_field19": {
					"field": "rfc",
					"type": "simple_grid_field"
				},
				"simple_grid_field20": {
					"field": "idtratamiento",
					"type": "simple_grid_field"
				},
				"simple_grid_field21": {
					"field": "riesgo",
					"type": "simple_grid_field"
				},
				"simple_grid_field22": {
					"field": "observacionest",
					"type": "simple_grid_field"
				},
				"simple_grid_field23": {
					"field": "idcli",
					"type": "simple_grid_field"
				},
				"simple_grid_field24": {
					"field": "fecha1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field25": {
					"field": "idplan1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field26": {
					"field": "dn1avta",
					"type": "simple_grid_field"
				},
				"simple_grid_field27": {
					"field": "idproceso",
					"type": "simple_grid_field"
				},
				"simple_grid_field28": {
					"field": "idorigenventa",
					"type": "simple_grid_field"
				},
				"simple_grid_field29": {
					"field": "nombre",
					"type": "simple_grid_field"
				},
				"simple_grid_field30": {
					"field": "paterno",
					"type": "simple_grid_field"
				},
				"simple_grid_field31": {
					"field": "materno",
					"type": "simple_grid_field"
				},
				"simple_grid_field32": {
					"field": "estado",
					"type": "simple_grid_field"
				},
				"simple_grid_field33": {
					"field": "ciudad",
					"type": "simple_grid_field"
				},
				"simple_grid_field34": {
					"field": "cp",
					"type": "simple_grid_field"
				},
				"simple_grid_field35": {
					"field": "calle",
					"type": "simple_grid_field"
				},
				"simple_grid_field36": {
					"field": "numeroext",
					"type": "simple_grid_field"
				},
				"simple_grid_field37": {
					"field": "numeroint",
					"type": "simple_grid_field"
				},
				"simple_grid_field38": {
					"field": "colonia",
					"type": "simple_grid_field"
				},
				"simple_grid_field39": {
					"field": "descripcion",
					"type": "simple_grid_field"
				},
				"simple_grid_field40": {
					"field": "maps_url",
					"type": "simple_grid_field"
				},
				"simple_grid_field41": {
					"field": "direccion",
					"type": "simple_grid_field"
				},
				"simple_grid_field42": {
					"field": "estatusentrega",
					"type": "simple_grid_field"
				},
				"simple_grid_field44": {
					"field": "chip",
					"type": "simple_grid_field"
				},
				"simple_grid_field45": {
					"field": "lat",
					"type": "simple_grid_field"
				},
				"simple_grid_field46": {
					"field": "lng",
					"type": "simple_grid_field"
				},
				"simple_grid_field43": {
					"field": "noserie",
					"type": "simple_grid_field"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		},
		{
			"id": "edit1",
			"type": "edit",
			"layoutId": "nomenu",
			"disabled": false,
			"default": 6,
			"forms": {
				"above-grid": {
					"modelId": "edit-above-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_message"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"below-grid": {
					"modelId": "edit-below-grid",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								},
								{
									"cell": "c2"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_save",
								"edit_back_list",
								"edit_close"
							]
						},
						"c2": {
							"model": "c2",
							"items": [
								"hamburger"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"top": {
					"modelId": "edit-header",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"edit_header"
							]
						}
					},
					"deferredItems": [],
					"recsPerRow": 1
				},
				"grid": {
					"modelId": "simple-edit",
					"grid": [
						{
							"cells": [
								{
									"cell": "c1"
								}
							],
							"section": ""
						},
						{
							"cells": [
								{
									"cell": "c3"
								}
							],
							"section": ""
						}
					],
					"cells": {
						"c1": {
							"model": "c1",
							"items": [
								"details_preview"
							]
						},
						"c3": {
							"model": "c3",
							"items": []
						}
					},
					"deferredItems": [],
					"columnCount": 1,
					"inlineLabels": false,
					"separateLabels": false
				}
			},
			"items": {
				"edit_header": {
					"type": "edit_header"
				},
				"hamburger": {
					"type": "hamburger",
					"items": [
						"edit_reset",
						"edit_view"
					]
				},
				"edit_reset": {
					"type": "edit_reset"
				},
				"edit_message": {
					"type": "edit_message"
				},
				"edit_save": {
					"type": "edit_save"
				},
				"edit_back_list": {
					"type": "edit_back_list"
				},
				"edit_close": {
					"type": "edit_close"
				},
				"edit_view": {
					"type": "edit_view"
				},
				"details_preview": {
					"type": "details_preview",
					"table": 3847630651,
					"items": [],
					"popup": false,
					"pageId": "list"
				}
			},
			"dbProps": {},
			"version": 13,
			"imageItem": {
				"type": "page_image"
			},
			"imageBgColor": "#f2f2f2",
			"controlsBgColor": "white",
			"imagePosition": "right",
			"listTotals": 1,
			"title": {}
		}
	],
	"geoCoding": {
		"enabled": false,
		"latField": "lat",
		"lonField": "lng",
		"addressFields": [
			"calle",
			"numeroext",
			"numeroint",
			"colonia",
			"ciudad",
			"estado",
			"cp",
			"lat",
			"lng"
		]
	},
	"caption": {
		"English": "Solicitudes"
	}
}